<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="src_conv">
  <refentryinfo><title>Utilities</title></refentryinfo>
  <refmeta>
    <refentrytitle>src_conv</refentrytitle>
  </refmeta>
 
  <refnamediv>
    <refname>src_conv</refname>
    <refpurpose>
      Converts the sample rate of an audio file.
      <indexterm id="IndexSrc_Conv"><primary>src_conv</primary></indexterm>
    </refpurpose>
  </refnamediv>
 
  <refsect1>
    <title>Description</title>
    <para>
      Converts the sample rate of an audio file at sample rate Rin to
    a sample rate of Rout.  Optionally the ratio (Rin / Rout) may be
    linearly time-varying according to a set of (time, ratio) pairs in
    an auxiliary file.
    </para>
  </refsect1>
 
  <refsect1>
    <title>Syntax</title>
    <synopsis><command>src_conv</command> [flags] infile</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      Flags:
      <itemizedlist>
        <listitem><para>-<emphasis>P num</emphasis> = pitch
    transposition ratio (srate / r) [don't specify both P and
    r]</para></listitem> 
        <listitem><para>-<emphasis>Q num</emphasis>  =quality factor
    (1, 2, 3, 4 or 5: default = 3)</para></listitem> 
        <listitem><para>-<emphasis>i filnam</emphasis> = auxiliary 
    breakpoints file (no breakpoint by default. i.e. No ratio change)
    </para></listitem> 
        <listitem><para>-<emphasis>r num</emphasis> = output sample
    rate (must be specified if no P)</para></listitem> 
        <listitem><para>-<emphasis>o fnam</emphasis> = sound output
    filename</para></listitem> 
        <listitem><para>-<emphasis>A</emphasis> = create an AIFF
    format output soundfile</para></listitem> 
        <listitem><para>-<emphasis>J</emphasis> = create an IRCAM
    format output soundfile</para></listitem> 
        <listitem><para>-<emphasis>W</emphasis> = create a WAV format
    output soundfile</para></listitem> 
        <listitem><para>-<emphasis>h</emphasis> = no header on output
    soundfile</para></listitem> 
        <listitem><para>-<emphasis>c</emphasis> = 8-bit signed_char
    sound samples</para></listitem> 
        <listitem><para>-<emphasis>a</emphasis> = alaw sound
    samples</para></listitem> 
        <listitem><para>-<emphasis>8</emphasis> = 8-bit unsigned_char
    sound samples</para></listitem> 
        <listitem><para>-<emphasis>u</emphasis> = ulaw sound
    samples</para></listitem> 
        <listitem><para>-<emphasis>s</emphasis> = short_int sound
    samples</para></listitem> 
        <listitem><para>-<emphasis>l</emphasis> = long_int sound
    samples</para></listitem> 
        <listitem><para>-<emphasis>f</emphasis> = float sound
    samples</para></listitem> 
        <listitem><para>-<emphasis>r N</emphasis> = orchestra srate
    override</para></listitem> 
        <listitem><para>-<emphasis>K</emphasis> = Do not generate PEAK
    chunks</para></listitem> 
        <listitem><para>-<emphasis>R</emphasis> = continually rewrite
    header while writing soundfile (WAV/AIFF)</para></listitem> 
        <listitem><para>-<emphasis>H#</emphasis> = print a heartbeat
    style 1, 2 or 3 at each soundfile write</para></listitem> 
        <listitem><para>-<emphasis>N</emphasis> = notify (ring the
    bell) when done</para></listitem> 
    <!--     <listitem><para>-<emphasis>- fnam</emphasis> = log output to -->
    <!-- file</para></listitem>  -->
      </itemizedlist>
    </para>

    <para>
      This program performs arbitrary sample-rate conversion with high
      fidelity using the libsamplerate library.
    </para>

    <para>The five levels of accuracy are:
    <itemizedlist>
      <listitem> 1: A linear converter. The quality is poor, but the
      conversion speed is blindingly fast. </listitem>
      <listitem> 2:  A Zero Order Hold converter (interpolated value is
      equal to the last value). The quality is poor but the conversion
      speed is blindingly fast.</listitem>
      <listitem> 3: This is the fastest bandlimited interpolator and
      has an SNR of 97dB and a bandwidth of 80%.</listitem>
      <listitem> 4: This is another bandlimited interpolator much like
      the previous one. It has an SNR of 97dB and a bandwidth of
      90%. The speed of the conversion is much faster than the next
      one. Blindingly fast.</listitem>
      <listitem> 5: This is a bandlimited interpolator derived from
      the mathematical sinc function and this is the highest quality
      sinc based converter, providing a worst case Signal-to-Noise
      Ratio (SNR) of 97dB at a bandwidth of 97%.</listitem>
    </itemizedlist>
    </para>
  </refsect1>
 
  <refsect1>
    <title>Credits</title>
    <para>Author: John ffitch</para>
    <para>May 2015</para>
  </refsect1>
</refentry>
