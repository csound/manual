<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" id="PrefaceWhatsNew"><title>What's new in Csound 6.06</title>
<!--     <bridgehead>Release Notes for Csound 6.XX ()</bridgehead>
  <para>
    <itemizedlist>
      <listitem>
        <para>New opcodes:
          <itemizedlist>
            <listitem>
              <simpara><link linkend=""><citetitle></citetitle></link></simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          New functionality
          <itemizedlist>
            <listitem>
              <simpara>
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bug fixes and improvements:
          <itemizedlist>
            <listitem>
              <simpara>
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Internal Changes:
          <itemizedlist>
            <listitem>
              <simpara>
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>-->

  <bridgehead>Release Notes for Csound 6.06 (2015 September)</bridgehead>
  <para>A number of bug fixes, some quite major, are included, as well as some
  new facilities and extensions.</para>
  <para>
    <itemizedlist>
      <listitem>
        <para>New opcodes:
          <itemizedlist>
            <listitem>
              <simpara>getseed reads the state of the PRN generator;
              opposite of seed opcode.</simpara>
            </listitem>
            <listitem>
              <simpara>tabifd — Instantaneous Frequency Distribution, magnitude
              and phase analysis.</simpara>
            </listitem>
            <listitem>
              <simpara>websocket — Read and write signals and arrays using a
              websocket connection.</simpara>
            </listitem>
            <listitem>
              <simpara>framebuffer — Read audio signals into 1 dimensional
              k-rate arrays and vice-versa with a specified buffer size.</simpara>
            </listitem>
            <listitem>
              <simpara>olabuffer — Sum overlapping frames of audio as k-rate
              arrays and read as an audio signal</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Orchestra:
          <itemizedlist>
            <listitem>
              <simpara>Labels are allowed in instrument 0.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Score:
          <itemizedlist>
            <listitem>
              <simpara>Maximum string length in scores increased to 1024.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Modified Opcodes and Gens:
          <itemizedlist>
            <listitem>
              <simpara>diskin2 array version uses array size to give number
              of channels in raw file form.</simpara>
            </listitem>
            <listitem>
              <simpara>diskin2 now has the kpitch parameter defaulting to 1 for
              simple use.</simpara>
            </listitem>
            <listitem>
              <simpara>Vibrato f-table in wgflute and wgcar optional,
              defaulting to sine wave.</simpara>
            </listitem>
            <listitem>
              <simpara>schedule now accept string arguments.</simpara>
            </listitem>
            <listitem>
              <simpara>urandom now available on OSX platforms.</simpara>
            </listitem>
            <listitem>
              <simpara>GEN18 had fencepost problem; largely rewritten.</simpara>
            </listitem>
            <listitem>
              <simpara>In poscil family of opcodes it is possible to skip
              initialisation of phase.</simpara>
            </listitem>
            <listitem>
              <simpara>svfilter now can skip initialisation.</simpara>
            </listitem>
            <listitem>
              <simpara>When opening an input file nchncls_i is used rather
              than nchnls. This is a change that should have followed the
              existence of nchnls_i</simpara>
            </listitem>
            <listitem>
              <simpara>rtjack module now reports the sampling rate.</simpara>
            </listitem>
            <listitem>
              <simpara>The opcodes rfft, rifft, fft, fftinv, r2c and c2r now
              have i-rate array versions.</simpara>
            </listitem>
            <listitem>
              <simpara>New optional threshhold parameter in opcodes tradsyn,
              sinsyn and resyn.</simpara>
            </listitem>
            <listitem>
              <simpara>New thresholding option for partials.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Utilities:
          <itemizedlist>
            <listitem>
              <simpara>extract fixed.</simpara>
            </listitem>
            <listitem>
              <simpara>src_conv improved and integrated with -U options.</simpara>
            </listitem>
            <listitem>
              <simpara>fixes in atsa, and heti.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Frontends:
          <itemizedlist>
            <listitem>
              <simpara>pnacl:</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>Support for 48000 sample rate fixed.</simpara>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <simpara>csound~:</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>Changes to the threading system. String channel
                  initialisation fixed. A number of other bugs were
                  fixed.</simpara>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <simpara>Emscripten:</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>Csound Javascript object can now receive data
                  from the outvalue opcode.</simpara>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <simpara>HTML5:</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>Integrate HTML, JavaScript, and other features of
                  HTML5 with Csound, either by embedding a Web page as an
                  &lt;html&gt; element in the CSD file for CsoundQt or Csound
                  for Android, or by hosting Csound in the JavaScript context
                  of a standalone Web browser (Emscripten, PNaCl) or embedded
                  Web browser (csound.node).</simpara>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>General usage:
          <itemizedlist>
            <listitem>
              <simpara>Ill-formatted macros in the orchestra now trapped.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bugs fixed:
          <itemizedlist>
            <listitem>
              <simpara>Use of Windows-style environments for INCDIR etc now
              works with device numbers.</simpara>
            </listitem>
            <listitem>
              <simpara>vibrato opcode fixed.</simpara>
            </listitem>
            <listitem>
              <simpara>Clicking in real-time sample accurate case fixed.</simpara>
            </listitem>
            <listitem>
              <simpara>Copying of strings now correct; did confuse memory
              sometimes.</simpara>
            </listitem>
            <listitem>
              <simpara>Bug in pvstanal fixed.</simpara>
            </listitem>
            <listitem>
              <simpara>Rounding error in cpspch fixed.</simpara>
            </listitem>
            <listitem>
              <simpara>Removed crash on recompiling a named instrument.</simpara>
            </listitem>
            <listitem>
              <simpara>Fix interpolation bug in tablexkt.</simpara>
            </listitem>
            <listitem>
              <simpara>Fix to plltrack when ksmps is 1.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>System changes:
          <itemizedlist>
            <listitem>
              <simpara>The "error" message from STK plugin is now a warning.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>API:
          <itemizedlist>
            <listitem>
              <simpara>Redefinition of opcodes and UDOs fixed.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Platform Specific:
          <itemizedlist>
            <listitem>
              <simpara>OSX.</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>csnd6.jar link installed in the correct location.</simpara>
                </listitem>
                <listitem>
                  <simpara>Java JNI linking issues solved.</simpara>
                </listitem>
                <listitem>
                  <simpara>fixed link name for libpng in libfltk_image.</simpara>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>

  <bridgehead>Release Notes for Csound 6.05 (2015 April)</bridgehead>
  <para>As ever there are new facilities and numerous bug-fixes.  A major part of
  this release is the removal of a number of memory leaks and over use
  of memory.  Naturally these changes are all but invisible, just a
  smaller memory foot-print.

  Note that we track bugs and requests for enhancements via the github
  issues system, and these had a significant affect on this release.</para>
  <para>
    <itemizedlist>
      <listitem>
        <para>Opcodes :
          <itemizedlist>
            <listitem>
              <simpara>The opcode sndload is now deprecated.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>New Gen and Macros:
          <itemizedlist>
            <listitem>
              <simpara>Paul Octavian Nasca's padsynth algorithm implemented as a gen.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Score:
          <itemizedlist>
            <listitem>
              <simpara>Fixed string location calculation bug when processing score
              lines [fixes #443]</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Options:
          <itemizedlist>
            <listitem>
              <simpara>A short-format copyright option is available, with a fixed
              number of well-known licences (CC, etc)</simpara>
            </listitem>
            <listitem>
              <simpara>New command-line option to report MIDI devices in simple
              format</simpara>
            </listitem>
            <listitem>
              <simpara>New command-line option to set ksmps</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Modified Opcodes and Gens:
          <itemizedlist>
            <listitem>
              <simpara><emphasis>adsynt</emphasis> handles amplitude changes
              better</simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>sfont</emphasis> has better checking for
              corruptions</simpara>
            </listitem>
            <listitem>
              <simpara>better checking in physical models for out-of-range
              frequencies</simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>ftgenonce</emphasis> and others allows string
              parameters</simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>gausstrig</emphasis> reworked and extended with new
              features</simpara>
            </listitem>
            <listitem>
              <simpara>use of <emphasis>p()</emphasis> function no longer
              complains overrides the pcnt warning</simpara>
            </listitem>
            <listitem>
              <simpara>fix to <emphasis>midirecv</emphasis></simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>OSCsend</emphasis> cleans up after use
              improved</simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>fillarray</emphasis> is limited to 1 or 2
              dimensional arrays; in fact it failed silently previously for 3D
              and higher.</simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>oscbnk</emphasis> now works when the equaliser
              is used.</simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>mp3in</emphasis> now works with both mono and
              stereo input files</simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>flooper</emphasis> &amp; <emphasis>flooper2</emphasis>
              now allow stereo tables</simpara>
            </listitem>
            <listitem>
              <simpara>Release phase of <emphasis>expsegr</emphasis> fixed</simpara>
            </listitem>
            <listitem>
              <simpara>f-tables created by a large number of arguments could
              overwrite memory, now fixed</simpara>
            </listitem>
            <listitem>
              <simpara>performance of <emphasis>plltrack</emphasis> improved
              </simpara>
            </listitem>
            <listitem>
              <simpara>init of arrays clarified and checked</simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>gen23</emphasis> corrected to stop an infinite
              loop</simpara>
            </listitem>
            <listitem>
              <simpara>alwayson now starts from score offset; this is part of
              a fix to the long-standing problem with alwayson in CsoundVST</simpara>
            </listitem>
            <listitem>
              <simpara>invalue now checks for output string size and reallocates
              memory if smaller than default string size (set at 256 bytes
              for backwards compatibility)</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Utilities:
          <itemizedlist>
            <listitem>
              <simpara>The srconv utility has been improved but it does not
              work well, with groups of noise in otherwise good output. We
              recommend the use of Erik de Castro Lopo's Secret Rabbit Code
              (aka libsamplerate) as providing sample rate conversion at high
              quality. srconv will be removed shortly possibly to be replaced
              by an SRC-based utility.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Frontends:
          <itemizedlist>
            <listitem>
              <simpara>pnacl</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>Added interface to allow the use of Csound's MIDI input
                  system.</simpara>
                </listitem>
                <listitem>
                  <simpara>Fixed audio input to conform to the latest Pepper API
                  spec.</simpara>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bugs fixed:
          <itemizedlist>
            <listitem>
              <simpara>bugs in fastabi,oscktp, phasorbnk, adsr, xadsr, hrtfer fixed.</simpara>
            </listitem>
            <listitem>
              <simpara>bugs in the harmon. harmon2, harmon3 and harmon4 fixed.</simpara>
            </listitem>
            <listitem>
              <simpara>Csound could crash after a parsing error, a case now removed.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          System changes:
          <itemizedlist>
            <listitem>
              <simpara>There are now checks that xin/xout types match those defined
              as part of UDO definition.</simpara>
            </listitem>
            <listitem>
              <simpara>jack now has a timeout.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Internal Changes:
          <itemizedlist>
            <listitem>
              <simpara>Many defects indicated by coverity fixed or code changed.
              Should make csound more robust in edge cases.</simpara>
            </listitem>
            <listitem>
              <simpara>Parser-related changes simplifies allocation of temporary
              variables, with some new optimisations.</simpara>
            </listitem>
            <listitem>
              <simpara>code for multi-thread rendering improved and stablised
              vis-a-vis redefinition of instruments.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Platform Specific:
          <itemizedlist>
            <listitem>
              <simpara>iOS.</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>Fixed audio callback to work correctly with lightning
                  output and Apple TV.</simpara>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <simpara>Android.</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>New experimental audio IO mode: csoundPerformKsmps()
                  is called from the OpenSL ES output callback. This mode can
                  be optionally enabled by passing a value of "false" to a new
                  second parameter to the CsoundObj constructor (bool isAsync).
                  The default constructor and the one-parameter sets this to
                  "true" (keeping backwards compatibility with existing
                  code).</simpara>
                </listitem>
                <listitem>
                  <simpara>The OSC opcodes are included in distribution.</simpara>
                </listitem>
                <listitem>
                  <simpara>Android app</simpara>
                  <itemizedlist>
                    <listitem>
                      <simpara>There are new file open and save dialogs that
                      permit the user to access the SD card on the device, if
                      there is one, in addition to internal storage.</simpara>
                    </listitem>
                    <listitem>
                      <simpara>There is a new "Save as..." button that permits
                      the user to save the csd as a new file with a new name.</simpara>
                    </listitem>
                    <listitem>
                      <simpara>Many of the examples in the archive of Android
                      examples are now built into the app and can be run from the
                      app's menu.</simpara>
                    </listitem>
                    <listitem>
                      <simpara>Includes now the exciter opcode.</simpara>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <simpara>OSX.</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>Installation now places csladspa.so rather than
                  csladspa.dylib on disk.</simpara>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <simpara>Linux.</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>Linux is now build without FLTK threads. This removes
                  system hangs and is in line with other builds.</simpara>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>

<bridgehead>Release Notes for Csound 6.04 (2014 November)</bridgehead>
  <para>This new version has many extensions and fixes; many new opcodes
  and significant numbers of internal reworking.  There is a new
  frontend and iOS and Android version have seen many improvements.</para>
  <para>As ever we track bugs and requests for enhancements via the github
  issues system.  Already proposals for the next release are being
  made but the volume of changes require a release now.</para>
  <para>
    <itemizedlist>
      <listitem>
        <para>New opcodes:
          <itemizedlist>
            <listitem>
              <simpara><link linkend="pinker"><citetitle>pinker</citetitle></link>
              generates high quality pink noise.</simpara>
            </listitem>
            <listitem>
              <simpara>power opcode ^ now works with array arguments.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="exciter"><citetitle>exciter</citetitle></link>
              opcode, modelled on the calf plugin.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="vactrol"><citetitle>vactrol</citetitle></link>
              opcode simulates an analog envelope follower.</simpara>
            </listitem>
            <listitem>
              <simpara>family of hdf5 opcodes to handle hdf5 format files.</simpara>
            </listitem>
            <listitem>
              <simpara>(experimental undocumented) buchla opcode models the lowgate
              filter of Buchla.</simpara>
            </listitem>
            <listitem>
              <simpara>New k-rate opcodes acting on arrays:
              <itemizedlist>
                <listitem>transforms: rfft, rifft, fft, fftinv</listitem>
                <listitem>complex product: complxprod</listitem>
                <listitem>polar - rectangular conversion: rect2pol, pol2rect, mags, phs</listitem> 
                <listitem>real - complex: r2c, c2r</listitem>
                <listitem>windowing: window</listitem>
                <listitem>cepstrum: pvscpes, iceps, ceps</listitem>
                <listitem>column / row access: getrow, getcol, setrow, setcol</listitem>
                <listitem>a-rate data - k-array copy: shiftin, shiftout</listitem>
                <listitem>phase unwraping: unwrap</listitem>
              </itemizedlist>
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          New Gen and Macros:
          <itemizedlist>
            <listitem>
              <simpara>Line numbers corrected in instr statements.</simpara>
            </listitem>
            <listitem>
              <simpara>New control operation, while, for looping.</simpara>
            </listitem>
            <listitem>
              <simpara>A long-standing bug with macros which use the same name for an
              argument has been corrected.</simpara>
            </listitem>
            <listitem>
              <simpara>Redefinition of an instrument in a single call to compile is
              flagged as an error.</simpara>
            </listitem>
            <listitem>
              <simpara>ID3 header skip for mp3 files now properly implemented.</simpara>
            </listitem>
            <listitem>
              <simpara>Errors induced by not defining the location of STK's raw wave
              files has been removed.</simpara>
            </listitem>
            <listitem>
              <simpara>bug fixed where UDO's could not read strings from pfields.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Modified Opcodes and Gens:
          <itemizedlist>
            <listitem>
              <simpara>stackops opcodes deprecated.</simpara>
            </listitem>
            <listitem>
              <simpara>lenarray extended to handle multi-dimensional arrays.</simpara>
            </listitem>
            <listitem>
              <simpara>ftgenonce accepts string arguments correctly and multiple
              string arguments.</simpara>
            </listitem>
            <listitem>
              <simpara>max and min now have initialisation-time versions.</simpara>
            </listitem>
            <listitem>
              <simpara>gen23 improved regarding comments and reporting problems.</simpara>
            </listitem>
            <listitem>
              <simpara>in OSCsend the port is now a k-rate value.</simpara>
            </listitem>
            <listitem>
              <simpara>socksend now works at k-rate.</simpara>
            </listitem>
            <listitem>
              <simpara>a number of envelope-generating opcodes are now correct in
              sample-accurate mode.</simpara>
            </listitem>
            <listitem>
              <simpara>faust compilation is now lock-protected.</simpara>
            </listitem>
            <listitem>
              <simpara>mp3 fixed to allow reinit to be used with it.</simpara>
            </listitem>
            <listitem>
              <simpara>In remote opcode the name of the network can be set via
              the environment variable CS_NETWORK.  Defaults to en0 (OSX) or
              eth0.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Frontends:
          <itemizedlist>
            <listitem>
              <simpara>icsound:
                New frontend icsound is now ready for general use. icsound is
                a python interface for interactive work in the ipython notebook.
              </simpara>
            </listitem>
            <listitem>
              <simpara>csdebugger:
                A number of changes and improvements have been made, like
                stepping through active instruments, better line number use.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>General usage:
          <itemizedlist>
            <listitem>
              <simpara>Jack module now does not stop Csound if autoconnect fails.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bugs fixed:
          <itemizedlist>
            <listitem>
              <simpara>atsinnoi fixed.</simpara>
            </listitem>
            <listitem>
              <simpara>ftsavek fixed.</simpara>
            </listitem>
            <listitem>
              <simpara>sprintf fixed.</simpara>
            </listitem>
            <listitem>
              <simpara>gen27 fixed, especially with extended arguments, as well as
              fixed a number of errors in extended score arguments.</simpara>
            </listitem>
            <listitem>
              <simpara>Physem opcodes (guiro cabasa, sekere) fixed so second call
              works.</simpara>
            </listitem>
            <listitem>
              <simpara>flooper fixed in mode 2.</simpara>
            </listitem>
            <listitem>
              <simpara>OSCsend multiple fixes.</simpara>
            </listitem>
            <listitem>
              <simpara>UDO fix for case of local ksmps of 1.</simpara>
            </listitem>
            <listitem>
              <simpara>More changes/fixes to dssi code.</simpara>
            </listitem>
            <listitem>
              <simpara>xscanu and scanu fixed.</simpara>
            </listitem>
            <listitem>
              <simpara>temposcal and mincer fixed.</simpara>
            </listitem>
            <listitem>
              <simpara>crash in ftload fixed.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          System changes:
          <itemizedlist>
            <listitem>
              <simpara>In server mode exit is now clean.</simpara>
            </listitem>
            <listitem>
              <simpara>Fixes to rtalsa module.</simpara>
            </listitem>
            <listitem>
              <simpara>Pulseaudio rt module fixes.</simpara>
            </listitem>
            <listitem>
              <simpara>Fix to remove fluidEngine entries for csound instance
              (prevents crash on moduleDestroy).</simpara>
            </listitem>
            <listitem>
              <simpara>Opcodes called through function calls that returned arrays
              did not correctly synthesize args as array types due to not
              converting the arg specifier to the internal format.</simpara>
            </listitem>
            <listitem>
              <simpara>fixed crashing issue during note initialization for tied
              notes due to goto skipping over code.</simpara>
            </listitem>
            <listitem>
              <simpara>fixed incorrect initialization of pfields when note's pfields
              length were less than instrument expected (off-by-one).</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Internal Changes:
          <itemizedlist>
            <listitem>
              <simpara>Added Runtime Type Identification for instrument variables;
              removed use of XINCODE/XOUTCO.</simpara>
            </listitem>
            <listitem>
              <simpara>fix malloc length in negative number parsing, and improved
              handling of negative numbers.</simpara>
            </listitem>
            <listitem>
              <simpara>writing to circularBuffer is now atomic.</simpara>
            </listitem>
            <listitem>
              <simpara>a number of memory leaks and potential dangerous code have been
              fixed.</simpara>
            </listitem>
            <listitem>
              <simpara>type-inference has been extensively reworked, as have a few
              parsing areas.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          API:
          <itemizedlist>
            <listitem>
              <simpara> Added API function for retrieving GEN parameters used for
              creating a table.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Platform Specific:
          <itemizedlist>
            <listitem>
              <simpara>iOS.</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>API Refactored for clearer method names and abstraction names (i.e.
                  CsoundBinding instead of CsoundValueCacheable).</simpara>
                </listitem>
                <listitem>
                  <simpara>Updated to remove deprecated code.</simpara>
                </listitem>
                <listitem>
                  <simpara>A significant amount of reworking has been done on the code.</simpara>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <simpara>Android.</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>API Refactored for clearer method names and abstraction names (i.e.
                  CsoundBinding instead of CsoundValueCacheable).</simpara>
                </listitem>
                <listitem>
                  <simpara>Changes to enable HTML 5 with JavaScript and it is to be hoped WebGL
                  in the Csound6 Android app.</simpara>
                </listitem>
                <listitem>
                  <simpara>Enabled change of screen orientation in the Csound6 app without
                  forcing a restart of the app.</simpara>
                </listitem>
                <listitem>
                  <simpara>Enabled local storage (useful for saving and restoring widget
                  values, etc.).</simpara>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <simpara>Windows.</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>fixed pointer arithmetic that caused crashing on Windows.</simpara>
                </listitem>
                <listitem>
                  <simpara>pyexec changed to use python's file opening functions to
                  prevent crash on Windows.</simpara>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <simpara>OSX.</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>CsoundAC now compiles.</simpara>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <simpara>Linux.</simpara>
              <itemizedlist>
                <listitem>
                  <simpara>threadlocks bug fix on linux.</simpara>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>
  
<bridgehead>Release Notes for Csound 6.03 (2014 May)</bridgehead>
  <para>
    This new version has a large number of bug fixes (including clearing
    many tickets on SourceForge and GitHub) as well internal changes to improve
    performance.
    <itemizedlist>
      <listitem>
        <para>New opcodes:
          <itemizedlist>
            <listitem>
              <simpara><link linkend="printks2"><citetitle/>prinks2</link></simpara>:
              prints a new value every time a control variable
              changes using a printf() style syntax
            </listitem>
            <listitem>
              <simpara><emphasis>mp3sr</emphasis>, <emphasis>mp3bitrate</emphasis>,
              and <emphasis>mp3nchnls</emphasis> to get information on mp3 files</simpara>
            </listitem>
            <listitem>
              <simpara>EXPERIMENTAL: CUDA opcodes for partitioned convolution direct
                convolution and sliding phase vocoding; OpenCL opcode for
                additive synthesis
              </simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="compilecsd"><citetitle/>compilecsd</link></simpara>
              to compile instruments from a standard CSD file
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Orchestra:
          <itemizedlist>
            <listitem>
              <simpara>The argument for i() is supposed to be a variable not an
                expression. This is now enforced. (bug #90)
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Score:
          <itemizedlist>
            <listitem>
              <simpara>New score opcode y sets the random seed (for ~) at read time
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Options:
          <itemizedlist>
            <listitem>
              <simpara>There was a bug in CsOptions; the last argument was missed being
                read(issue #296)
              </simpara>
            </listitem>
            <listitem>
              <simpara>As command-line options expression-opt and no-expression-opt do
                nothing in Csound6 a warning is printed
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Modified Opcodes and Gens:
          <itemizedlist>
            <listitem>
              <simpara>For ogg output it is possible to specify a VBR (variable block
                rate) quality.
              </simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>dssi4cs</emphasis> code has been extensively reworked
                to avoid potential memory faults.
              </simpara>
            </listitem>
            <listitem>
              <simpara>Many array operations now available for i-arrays as well as
                k-arrays.
              </simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>fillarray</emphasis> will work for string arrays
              </simpara>
            </listitem>
            <listitem>
              <simpara>Displays of FFT (via <emphasis>dispfft</emphasis>) improved
              with scaling/zooming options
              </simpara>
            </listitem>
            <listitem>
              <simpara>Signal flow graph opcodes are now working with a-rate array
                signals.
              </simpara>
            </listitem>
            <listitem>
              <simpara>In alsa RT code the sample rate is taken from the device
              </simpara>
            </listitem>
            <listitem>
              <simpara>Faust opcode system updated to latest faust API
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Utilities:
          <itemizedlist>
            <listitem>
              <simpara>fixed bug in lpanal
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          csound~:
          <itemizedlist>
            <listitem>
              <simpara>OSX - fix for running with 32-bit cpu architecture
              </simpara>
            </listitem>
            <listitem>
              <simpara>Windows - csound~ now available for Windows
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Emscripten:
          <itemizedlist>
            <listitem>
              <simpara>This is now generally merged into the code-base
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          General usage:
          <itemizedlist>
            <listitem>
              <simpara>--displays now switches graphs on, as expected
              </simpara>
            </listitem>
            <listitem>
              <simpara>New commandline option --get-system-sr added to obtain the
                machine's sample rate
              </simpara>
            </listitem>
            <listitem>
              <simpara>New command-line option --devices[=in|out] gives a list of
                available audio devices and then exit
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bug fixes:
          <itemizedlist>
            <listitem>
              <simpara>fixed the bug when tables were replaced but the size did not change
              </simpara>
            </listitem>
            <listitem>
              <simpara>A number of bugs in --sample-accurate have been detected and
                fixed. This includes opcodes <emphasis>out</emphasis>,
                <emphasis>outn</emphasis>, and <emphasis>line</emphasis>
              </simpara>
            </listitem>
            <listitem>
              <simpara>A number of bugs in <emphasis>grain3</emphasis> were fixed
              </simpara>
            </listitem>
            <listitem>
              <simpara>Bug in str_chanel could cause a crash; fixed
              </simpara>
            </listitem>
            <listitem>
              <simpara>Small bug in rtjack fixed
              </simpara>
            </listitem>
            <listitem>
              <simpara>Error in resize opcode corrected
              </simpara>
            </listitem>
            <listitem>
              <simpara>Fixed an unlikely bug in atsa
              </simpara>
            </listitem>
            <listitem>
              <simpara>Fixed rtauhal pause issue
              </simpara>
            </listitem>
            <listitem>
              <simpara>A number of bugs/untidiness fixed in GEN23
              </simpara>
            </listitem>
            <listitem>
              <simpara>Array bound checks fixed
              </simpara>
            </listitem>
            <listitem>
              <simpara>strings channels were not correctly set for dynamic-size
                strings, now fixed
              </simpara>
            </listitem>
            <listitem>
              <simpara>memory allocation for string formatting in <emphasis>printfsk</emphasis>
                was fixed, stopping string truncation
              </simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>strcat</emphasis> safe against overflow
              </simpara>
            </listitem>
            <listitem>
              <simpara>error in compilation of arrays fixed (issue #293)
              </simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>GetPvsChannel</emphasis> fixed against a crash
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          System Changes:
          <itemizedlist>
            <listitem>
              <simpara><emphasis>turnoff</emphasis> opcode now checks that the
                instrument being affected is active
              </simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>lenarray</emphasis> can accept any array type
              </simpara>
            </listitem>
            <listitem>
              <simpara>the way of rounding a table number to an integer was changed
                and is now more as expected
              </simpara>
            </listitem>
            <listitem>
              <simpara>there is a new possible section in a csd file called
                &lt;CsFile...&gt; which is like csFileB but with unencoded text.
              </simpara>
            </listitem>
            <listitem>
              <simpara>UDO compilation now uses the type system. This means that
                UDOs now allow any array type to be used
              </simpara>
            </listitem>
            <listitem>
              <simpara>Improved orchestra parsing speeds with better algorithms
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Internal Changes:
          <itemizedlist>
            <listitem>
              <simpara>The whole system has been checked by the Coverity static checker
                which identified a number of (mainly minor) problems. These have
                been reviewed and checked. In particular better use of printing
                and string copying should prevent overflows
              </simpara>
            </listitem>
            <listitem>
              <simpara>The type and variable system has been extensively rewritten; this
                allows better array and UDO support
              </simpara>
            </listitem>
            <listitem>
              <simpara>Alignment of variables got right in all cases
              </simpara>
            </listitem>
            <listitem>
              <simpara>Array copying is now using the type system to copy values; fixes
                issues with copying string arrays, f-sigs, etc
              </simpara>
            </listitem>
            <listitem>
              <simpara>Always reset Csound when stopping to ensure state is clean; was
                not being reset when there was a compile error, so that next
                successful run would start with an invalid Csound engine (issue
                #305)
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          API:
          <itemizedlist>
            <listitem>
              <simpara>All opcodes etc now use the API memory allocation operations,
                so it is possible to replace the whole memory allocator
              </simpara>
            </listitem>
            <listitem>
              <simpara>Added <emphasis>csoundCompileCsd</emphasis> to API and
                associated new <emphasis>compilecsd</emphasis> opcode
              </simpara>
            </listitem>
            <listitem>
              <simpara>Protected <emphasis>csoundGetStringChannel</emphasis> against
              null and short strings and added a check for string size
              </simpara>
            </listitem>
            <listitem>
              <simpara>A number of API functions have had char* changed to
                const char* which reflect the usage
              </simpara>
            </listitem>
          </itemizedlist>
          The performance engine now includes debugging capabilities to allow
          interrupting rendering and providing introspection into the engine's state
          and instrument variables. The following new functions are available by
          including the csdebug.h header:
          <programlisting>
void csoundDebuggerInit (CSOUND *csound);
void csoundDebuggerClean (CSOUND *csound);
void csoundSetInstrumentBreakpoint (CSOUND *csound, MYFLT instr, int skip);
void csoundRemoveInstrumentBreakpoint (CSOUND *csound, MYFLT instr);
void csoundClearBreakpoints (CSOUND *csound);
void csoundSetBreakpointCallback (CSOUND *csound, breakpoint_cb_t bkpt_cb, void *userdata);
void csoundDebugContinue (CSOUND *csound);
void csoundDebugStop (CSOUND *csound);
debug_instr_t *csoundDebugGetInstrInstances(CSOUND *csound);
void csoundDebugFreeInstrInstances(CSOUND *csound, debug_instr_t *instr);
debug_variable_t *csoundDebugGetVariables(CSOUND *csound, debug_instr_t *instr);
void csoundDebugFreeVariables(CSOUND *csound, debug_variable_t *varHead);</programlisting>
        </para>
      </listitem>
      <listitem>
        <para>
          Windows:
          <itemizedlist>
            <listitem>
              <simpara>Soundfonts in Windows had an internal alignement problem
                which is fixed
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>

<bridgehead>Release Notes for Csound 6.02</bridgehead>
  <para>
This new version has a large number of bug fixes (including clearing
all general tickets on SourceForge). It also introduces some major new
facilities such as use as a server, code to run Csound in a browser
and a large generalisation of filter opcodes to have parameters
changeable at audio rate.
  </para>
  <para>
    <itemizedlist>
      <listitem>
        <para>New opcodes:
          <itemizedlist>
            <listitem>
              <simpara><link linkend="nstance"><citetitle>nstance</citetitle></link>
              opcode schedules a new instrument instance, storing the instance handle.
              </simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="turnoff"><citetitle>turnoff</citetitle></link>
              nw variant to stop a given instrument instance.
              </simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="strfromurl"><citetitle>strfromurl</citetitle></link>
              to set a string from a URL.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Orchestra:
          <itemizedlist>
            <listitem>
              <simpara>If building supports it, a #include string can be a URL or a
              file.</simpara>
            </listitem>
            <listitem>
              <simpara>A space is again permitted between a function name and the
              opening bracket for all functions allowed in Csound5 (but not in
              general).</simpara>
            </listitem>
            <listitem>
              <simpara>The Csound command can start with an empty CSD in daemon mode
              (--daemon): do not exit if CSD/orchestra is not
              given, is empty or does not compile).</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Score:
          <itemizedlist>
            <listitem>
              <simpara>If building supports it, a #include string can be a URL or a
              file.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Modified Opcodes and Gens:
          <itemizedlist>
            <listitem>
              <simpara>Many filters generalised to allow k- or a-rate parameters.  In
              particular it includes these:
              <informaltable frame="none">
                <tgroup cols="2">
                <tbody>
                  <row>
                    <entry>areson</entry>
                    <entry>atonex</entry>
                  </row>
                  <row>
                    <entry>butterworth filters</entry>
                    <entry>fofilter</entry>
                  </row>
                  <row>
                    <entry>lowres</entry>
                    <entry>lowresx</entry>
                  </row>
                  <row>
                    <entry>lpf18</entry>
                    <entry>mode</entry>
                  </row>
                  <row>
                    <entry>moogladder</entry>
                    <entry>moogvcf</entry>
                  </row>
                  <row>
                    <entry>reson</entry>
                    <entry>resonr</entry>
                  </row>
                  <row>
                    <entry>resonx</entry>
                    <entry>resonz</entry>
                  </row>
                  <row>
                    <entry>statevar</entry>
                    <entry>tonex</entry>
                  </row>
                </tbody>
                </tgroup>
              </informaltable>
              </simpara>
            </listitem>
            <listitem>
              <simpara>The maximum number of presets in sfont increased to 16384.
              </simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>cpsmidinn</emphasis> is now more accurate.
              </simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>max_k</emphasis> now behaves like the documentation.
              There were cases when it gave strange results.
              </simpara>
            </listitem>
            <listitem>
              <simpara>The vst4cs opcodes have been re-factored. FLTK code has been encapsulated.
              The build system has been updated for Csound 6.
              </simpara>
            </listitem>
            <listitem>
              <simpara>In <emphasis>alwayson</emphasis> opcode changes for better
              handling of pfields, more reliable insert of an instrument instance
              for repeating or re-started score sections.
              </simpara>
            </listitem>
            <listitem>
              <simpara>The signal flow graph opcodes have replaced OpenMP
              multi-threading with pthreads, using one-time initialization
              of static structures.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Frontends:
          <itemizedlist>
            <listitem>
              <simpara>PNaCl is now supported as a platform, allowing Csound to run
              under the Chrome browser in all enabled operating systems.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bugs fixed:
          <itemizedlist>
            <listitem>
              <simpara><emphasis>adsynt2</emphasis> opcode fixed.
              </simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>ftgentmp</emphasis> opcode fixed.
              </simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>dates</emphasis> opcode fixed.
              </simpara>
            </listitem>
            <listitem>
              <simpara>fixed a bug in <emphasis>pvsfilter</emphasis>.
              </simpara>
            </listitem>
            <listitem>
              <simpara>fixed stereo out in <emphasis>temposcal</emphasis> and
              <emphasis>mincer</emphasis>.
              </simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>pan2</emphasis> opcode fixed.
              </simpara>
            </listitem>
            <listitem>
              <simpara>index overflow in <emphasis>randh</emphasis> and
              <emphasis>randi</emphasis> fixed.
              </simpara>
            </listitem>
            <listitem>
              <simpara>A number of fixes to CsoundVST: initialization, score
              handling, and MIDI driver initialization, so it now works for Csound 6.
              </simpara>
            </listitem>
            <listitem>
              <simpara>fixed <emphasis>pycalln</emphasis> for no inputs.
              </simpara>
            </listitem>
            <listitem>
              <simpara>fixed/revised setting and use of <emphasis>ksmps</emphasis>
              and <emphasis>kr</emphasis> in UDOs.
              </simpara>
            </listitem>
            <listitem>
              <simpara>fixed problem in sending a score event from max to csound via
              csound~ (Ticket #58).
              </simpara>
            </listitem>
            <listitem>
              <simpara>If itype in <emphasis>chn_k</emphasis> was set to 3 and
              values are set less than 1, Csound6 used to give an INIT Error.
              (Ticket #67).
              </simpara>
            </listitem>
            <listitem>
              <simpara>A number of reported seg faults have been dealt with.
              </simpara>
            </listitem>
            <listitem>
              <simpara><emphasis>xtratim</emphasis> opcode was using incorrect
              ekr value from csound instead of from instance; when used in
              conjunction with <emphasis>setksmps</emphasis>, was causing notes
              to have very long <emphasis>xtratim</emphasis> set and
              thus notes were effectively not getting turned off
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>System changes:
          <itemizedlist>
            <listitem>
              <simpara>A server mode is now available, accepting input via UDP (with
              --port option).
              </simpara>
            </listitem>
            <listitem>
              <simpara>A longstanding bug in extract was detected and fixed. It does
              suggest that this facility is little used!
              </simpara>
            </listitem>
            <listitem>
              <simpara>The way the external score generator was coded is
              substantially changed. In particular this should fix a very
              strange bug in Windows.
              </simpara>
            </listitem>
            <listitem>
              <simpara>Fixed crashing bug with invalue channel callback due to
              wrong data object being pulled from csound host data.
              </simpara>
            </listitem>
            <listitem>
              <simpara>Fixed bug in UDOs with no local ksmps where kcounter was
              being used incorrectly.
              </simpara>
            </listitem>
            <listitem>
              <simpara>Better checking in channels.
              </simpara>
            </listitem>
            <listitem>
              <simpara>(Experimental) If the environment variable CS_UDO_DIR is
              set then any files in the directory that have an .udo extension
              are automatically included at the start of the orchestra.
              This facility needs review to see if it is what is required.
              </simpara>
            </listitem>
            <listitem>
              <simpara>(Experimental) There are new cuda GPGPU opcodes (source
              only): cudasynth (3 versions for additive synthesis, additive
              synthesis of fsigs and phase vocoder resynthesis) and cudanal
              (a GPGPU version of pvsanal).
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Internal changes:
          <itemizedlist>
            <listitem>
              <simpara>Many attempts at faster code.
              </simpara>
            </listitem>
            <listitem>
              <simpara>Type inference and parsing still improving.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>iOS:
          <itemizedlist>
            <listitem>
              <simpara>Fixed crash where no csoundSetHostImplementedMIDIIO is
              used on iOS and no _RTMIDI value is set.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>OSX:
          <itemizedlist>
            <listitem>
              <simpara>Fixed input device name for auhal.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>

<bridgehead>Release Notes for Csound6</bridgehead>
<para>
  Csound6 is a significant rewrite of much of the code.  In particular
  the API is not compatible, although all orc/sco/csd works should still
  run.
</para>

<para>
  There are new facilities, like sample accuracy and realtime mode,
  described below.
</para>

<para>
  IMPORTANT:  The environment variable to find plugins are called
  <emphasis role="strong">OPCODE6DIR64</emphasis> or
  <emphasis role="strong">OPCODE6DIR</emphasis> (note the 6) so it can co-exist
  with Csound5.
</para>

<para>
  Similarly <emphasis role="strong">.csoundrc</emphasis> is renamed
  <emphasis role="strong">.csound6rc</emphasis>.
</para>

<para>
  Arrays are now mainstream, with syntax and opcode support.  They also
  exist in multidimensional format.  They are created (usually)
  with <emphasis>init</emphasis> opcode or <emphasis>fillarray</emphasis>.
      <informalexample>
        <programlisting>
  k1[]  <emphasis role="opc">init</emphasis> 4</programlisting>
      </informalexample>
  generates a k-rate 1-D array of length 4. Similarly
      <informalexample>
        <programlisting>
  a2[][] <emphasis role="opc">init</emphasis> 4, 4</programlisting>
      </informalexample>
  creates a square 4x4 a-rate array.
      <informalexample>
        <programlisting>
  k2[]  <emphasis role="opc">fillarray</emphasis> 1, 2, 3, 4</programlisting>
      </informalexample>
  creates a 4-element vector filled with 1,..4, which also defines the
  length.
</para>

<para>
  Elements are used via indexing in [] such as k1[2] or a2[2][3].
  One dimensional arrays replace tvars, and can be used in opcodes like
  <emphasis>maxtab</emphasis>, <emphasis>mintab</emphasis> and
  <emphasis>sumtab</emphasis> (see below). Array setting can be done in
  left-hand side of opcodes, i.e.:
      <informalexample>
        <programlisting>
  aSigs[0] <emphasis role="opc">vco2</emphasis> .1, 440
  aSigs[1] <emphasis role="opc">vco2</emphasis> .1, 880</programlisting>
      </informalexample>
</para>

<para>
  The new realtime priority mode can be switched on with by passing the
  --realtime or setting the CSOUND_PARAMS field realtime_mode to 1.
  This has the following effects:
  <orderedlist>
    <listitem>
      <simpara>all opcode audio file reading/writing is handled asynchronously
      by a separate thread.</simpara>
    </listitem>
    <listitem>
      <simpara>all init-pass operations are also performed asynchronously.</simpara>
    </listitem>
  </orderedlist>
</para>

<para>
  Multicore support is totally rewritten using a different algorithm for
  task-dispatch, which should use less memory and fewer locks.
</para>

<para>
  <itemizedlist>
    <listitem>
      <para>New opcodes:
        <itemizedlist>
          <listitem>
            <simpara><emphasis>faustgen</emphasis></simpara>
          </listitem>
          <listitem>
            <simpara><emphasis>array</emphasis> -- many new or revised
            opcodes -- see <link linkend="arrayOpcodes"><citetitle>Array
            Opcodes</citetitle></link>.</simpara>
          </listitem>
          <listitem>
            <simpara><emphasis>compileorc</emphasis> takes a filename containing
            a collection of instrument definitions and compiles them, replacing
            existing versions. It returns 0 on success.</simpara>
          </listitem>
          <listitem>
            <simpara><emphasis>compilestr</emphasis> is like
            <emphasis>compileorc</emphasis> but takes a string.</simpara>
          </listitem>
          <listitem>
            <simpara><emphasis>readscore</emphasis> runs the score preprocessor
            on a string and then schedules new events via the RT event mechanism,
            returning 0 if successful.</simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>Orchestra
        <itemizedlist>
          <listitem>
            <simpara>Note events can start and end in mid-kcycle. As this is an
            incompatible change it is only invoked when the command-line option
            --sample-accurate is specified. Note that this does not work for
            tied notes, and use of skipping initialisation has questionable
            use.</simpara>
          </listitem>
          <listitem>
            <simpara>Instruments can run at local <emphasis>ksmps</emphasis>
            values using <code>setksmps iksmps</code> as in Csound 5 UDOs.</simpara>
          </listitem>
          <listitem>
            <simpara>Compilation can be done at any stage, new instruments are
            added or replace old ones.  Running instances of old instrument
            definitions are not affected.  Only limitation is that header
            constants in instr 0 are read only once at the time of the
            first compilation.  Init-time code can be placed outside
            instruments in the global space, and this will be executed
            once-only following the compilation.  In this case, score event
            generation can be completely replaced by orchestra code.
            See also new opcodes <emphasis>compileorc</emphasis> and
            <emphasis>compilestr</emphasis>.</simpara>
          </listitem>
          <listitem>
            <simpara>New syntax operators +=, -=, *= and /=.  These are more
            than syntactic sugar; please use += and -= for accumulating reverbs
            as it gives better multicore behaviour.</simpara>
          </listitem>
          <listitem>
            <simpara>The opcodes <emphasis>add</emphasis>, <emphasis>sub</emphasis>,
            <emphasis>mul</emphasis> and <emphasis>div</emphasis> have been
            deleted; use the forms + - * /. Not many people were aware of these
            opcodes.</simpara>
          </listitem>
          <listitem>
            <simpara>Any opcode with a single output or with no outputs can be
            used as a function. Some opcodes might require type annotation to
            resolve ambiguities, more details on the
            <link linkend="functional"><citetitle>Function syntax in
            Csound 6</citetitle></link>.</simpara>
          </listitem>
          <listitem>
            <simpara>A statement can be broken across lines after a , = or
            arithmetic operation.</simpara>
          </listitem>
          <listitem>
            <simpara>There are a range of new or recoded operations on k-valued
            arrays, most restricted to 1 dimensional arrays (vectors):
            <informalexample>
              <programlisting>
 kans <emphasis role="opc">minarray</emphasis> ktab       <emphasis role="comment">returns the smallest value in the</emphasis>
                          <emphasis role="comment">(possibly) multidimensional array</emphasis>
 kans <emphasis role="opc">maxarray</emphasis> ktab       <emphasis role="comment">is like mintab</emphasis>
 kabs <emphasis role="opc">sumarray</emphasis> ktab       <emphasis role="comment">returns sum of all values in the array</emphasis>
 ktab <emphasis role="opc">genarray</emphasis> imin, imax[, inc]
                          <emphasis role="comment">generates vector of values from imin</emphasis>
                          <emphasis role="comment">to imax by increments of inc (default 1)</emphasis>
 ktab2 <emphasis role="opc">maparray</emphasis> ktab1, "sin" <emphasis role="comment">maps the k-rate 1-arg function in</emphasis>
                          <emphasis role="comment">the string to every element of the vector</emphasis>
 ktab2 <emphasis role="opc">maparray_i</emphasis> ktab1, "sin" <emphasis role="comment">maps the i-rate 1-arg function</emphasis>
                          <emphasis role="comment">in the string to every element of the vector</emphasis>
 ktab2 <emphasis role="opc">slicearray</emphasis> ktab1, istart, iend
                          <emphasis role="comment">returns a slice of ktab1 from ktab1[istart]</emphasis>
                          <emphasis role="comment">to ktab1[iend]</emphasis>
 <emphasis role="opc">copyf2array</emphasis> ktab, kfn    <emphasis role="comment">copies data from an ftable to a vector</emphasis>
 <emphasis role="opc">copya2ftab</emphasis>  ktab, kfn    <emphasis role="comment">copies data from a vector to an ftable</emphasis></programlisting>
            </informalexample>

            Arithmetic on arrays is allowed.  In particular addition,
            subtraction, multiplication, division on a element-by-element
            version is provided in arithmetic format. Similar operations
            between an array and a scalar are allowed.</simpara>
          </listitem>
          <listitem>
            <simpara>Each instance of any instrument has a scratchpad of 4 values
            that persist; allows values to carry to next use of the
            instrument; hope it may be useful in legato etc.</simpara>
          </listitem>
          <listitem>
            <simpara>If a table number is given as -1 then an internal sine wave
            equivalent to <code>f. 0 16382 10 1</code> is used. Attempts to
            write to this table will give unpredictable results, but is not
            policed. The 16382 can be change by command line option
            --sine-size=# where the # is rounded up to a power of two.</simpara>
          </listitem>
          <listitem>
            <simpara>A number of oscil opcodes now have the f-table parameter as
            optional, defaulting to the internal sine wave. (<emphasis>oscil1,
            oscil1i, oscil, oscil3, oscili, foscil, foscil1, loscil,
            loscil3</emphasis>).</simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>Score:
        <itemizedlist>
          <listitem>
            <simpara>Score lines can have multiple strings.</simpara>
          </listitem>
          <listitem>
            <simpara>Change to escape characters in score strings -- they do not
            happen.</simpara>
          </listitem>
          <listitem>
            <simpara>Also note the <emphasis>readscore</emphasis> opcode.</simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>Modified Opcodes and Gens:
        <itemizedlist>
          <listitem>
            <simpara>The <emphasis>k()</emphasis> function can take an a-rate
            argument in which case it is a call to <emphasis>downsamp</emphasis>.
            </simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>Utilities
        <itemizedlist>
          <listitem>
            <simpara><emphasis>Hetro/adsyn</emphasis> analysis files can be
            machine byte-order independent if created with -X. Down side is a
            longer file and a little slower loading. The
            <emphasis>het_export</emphasis> utility will create the independent
            format from the old, and <emphasis>het_import</emphasis> is no
            longer necessary.</simpara>
          </listitem>
          <listitem>
            <simpara><emphasis>cvanal</emphasis> and <emphasis>lpanal</emphasis>
            will produce machine independent files if -X option is used. The
            <emphasis>convolve</emphasis> and <emphasis>lpread</emphasis> etc
            opcodes will accept either format. You are encouraged to use the
            machine independent form. Analysis files produced with -X can be used
            on other systems.</simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>Frontends</para>
    </listitem>
    <listitem>
      <para>Bugs fixed:</para>
    </listitem>
    <listitem>
      <para>System Changes:
        <itemizedlist>
          <listitem>
            <simpara>In Linux and OSX the treatment of locales is now thread-safe
            and local.</simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>Platform Changes:</para>
    </listitem>
    <listitem>
      <para>API:
        <simpara>New API functions...</simpara>
        <itemizedlist>
          <listitem>
            <simpara>new configuration/parameter setting functions
            <informalexample>
              <programlisting>
        PUBLIC int csoundSetOption(CSOUND *csound, char *option);
        PUBLIC void csoundSetParams(CSOUND *csound, CSOUND_PARAMS *p);
        PUBLIC void csoundGetParams(CSOUND *csound, CSOUND_PARAMS *p);
        PUBLIC void csoundSetOutput(CSOUND *csound, char *name, char *type,
                                    char *format);
        PUBLIC void csoundSetInput(CSOUND *csound, char *name);
        PUBLIC void csoundSetMIDIInput(CSOUND *csound, char *name);
        PUBLIC void csoundSetMIDIFileInput(CSOUND *csound, char *name);
        PUBLIC void csoundSetMIDIOutput(CSOUND *csound, char *name);
        PUBLIC void csoundSetMIDIFileOutput(CSOUND *csound, char *name);</programlisting>
            </informalexample></simpara>
          </listitem>
          <listitem>
            <simpara>new parsing/compilation functions
            <informalexample>
              <programlisting>
        PUBLIC TREE *csoundParseOrc(CSOUND *csound, char *str);
        PUBLIC int csoundCompileTree(CSOUND *csound, TREE *root);
        PUBLIC int csoundCompileOrc(CSOUND *csound, const char *str);
        PUBLIC int csoundReadScore(CSOUND *csound, char *str);
        PUBLIC int csoundCompileArgs(CSOUND *, int argc, char **argv);</programlisting>
            </informalexample></simpara>
          </listitem>
          <listitem>
            <simpara>new function for starting csound after first compilation
            <informalexample>
              <programlisting>
        PUBLIC int csoundStart(CSOUND *csound);</programlisting>
            </informalexample></simpara>
          </listitem>
          <listitem>
            <simpara>new software bus threadsafe getters/setters
            <informalexample>
              <programlisting>
        PUBLIC MYFLT csoundGetControlChannel(CSOUND *csound, const char *name);
        PUBLIC void csoundSetControlChannel(CSOUND *csound, const char *name, MYFLT val);
        PUBLIC void csoundGetAudioChannel(CSOUND *csound, const char *name, MYFLT *samples);
        PUBLIC void csoundSetAudioChannel(CSOUND *csound, const char *name, MYFLT *samples);
        PUBLIC void csoundSetStringChannel(CSOUND *csound, const char *name, char *string);
        PUBLIC void csoundGetStringChannel(CSOUND *csound, const char  *name, char *string);</programlisting>
            </informalexample></simpara>
          </listitem>
          <listitem>
            <simpara>new table threadsafe copy functions
            <informalexample>
              <programlisting>
        PUBLIC void csoundTableCopyOut(CSOUND *csound, int table, MYFLT *dest);
        PUBLIC void csoundTableCopyIn(CSOUND *csound, int table, MYFLT *src);</programlisting>
            </informalexample></simpara>
          </listitem>
        </itemizedlist>
        API has been made threadsafe so that performance and control
        can occur in separate threads (after a call to <emphasis>csoundStart()</emphasis>
        or <emphasis>csoundCompile()</emphasis>). Threadsafety is ensure by
        <orderedlist>
          <listitem>
            <simpara>use of atomic read/writing to control channels</simpara>
          </listitem>
          <listitem>
            <simpara>spinlocks in audio and string channels</simpara>
          </listitem>
          <listitem>
            <simpara>mutexes protecting compilation, score events and table
            access.</simpara>
          </listitem>
        </orderedlist>
      </para>
    </listitem>
    <listitem>
      <para>Internal:
        <itemizedlist>
          <listitem>
            <simpara>The build system is now cmake (and not scons as in
            Csound5).</simpara>
          </listitem>
          <listitem>
            <simpara>A number of table access opcodes have been rewritten but
            should behave the same. Similarly <emphasis>diskin</emphasis> and
            <emphasis>diskin2</emphasis> now use the same code and so
            <emphasis>diskin</emphasis> should be more stable.</simpara>
          </listitem>
          <listitem>
            <simpara>The old parser is completely removed.</simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>New internal functions in Csound
      <informalexample>
        <programlisting>
    void (*FlushCircularBuffer)(CSOUND *, void *);
    void *(*FileOpenAsync)(CSOUND *, void *, int, const char *, void *,
                           const char *, int, int, int);
    unsigned int (*ReadAsync)(CSOUND *, void *, MYFLT *, int);
    unsigned int (*WriteAsync)(CSOUND *, void *, MYFLT *, int);
    int  (*FSeekAsync)(CSOUND *, void *, int, int);
    char *(*GetString)(CSOUND *, MYFLT);
             <emphasis role="comment">Extract a string originating from a score-event argument.</emphasis></programlisting>
      </informalexample>
      </para>
    </listitem>
    <listitem>
      <para>Functions removed
      <informalexample>
        <programlisting>
    void *(*FileOpen)(CSOUND *, void*, int, const char*, void*, const char*);</programlisting>
      </informalexample>
      </para>
    </listitem>
    <listitem>
      <para>
        The "private" parts of the API have been changed considerably.
        Also structures like EVTBLK have changed.
      </para>
    </listitem>
    <listitem>
      <para>
        The LINKAGE1/FLINKAGE1 macros are renamed as
        LINKAGE_BUILTIN/FLINKAGE_BUILTIN.
      </para>
    </listitem>
    <listitem>
      <para>Template for a-rate perf-pass opcodes is
      <informalexample>
        <programlisting>
int perf_myopcode(CSOUND *csound, MYOPCODE *p)
{
    uint32_t offset = p-&gt;h.insdshead-&gt;ksmps_offset;
    uint32_t early  = p-&gt;h.insdshead-&gt;ksmps_no_end;
    uint32_t nsmps = CS_KSMPS;
    ...
    if (UNLIKELY(offset)) memset(p-&gt;res, '\0', offset*sizeof(MYFLT));
    if (UNLIKELY(early))  {
      nsmps -= early;
      memset(&amp;p-&gt;res[nsmps], '\0', early*sizeof(MYFLT));
    }
    for (n=offset; n&lt;nsmps; n++) {
        .....
        p-&gt;res[n] = ....
    }
    return OK;
}</programlisting>
      </informalexample>
      </para>
    </listitem>
    <listitem>
      <para>String variables re-implemented</para>
    </listitem>
    <listitem>
      <para>
        OENTRY structure has changed and has a new dependency field; please
        use this field as it is required for multicore semantics. You could
        set it to -1 and disallow all parallelism, but at least it is safe.
      </para>
    </listitem>
    <listitem>
      <para>
        All opcodes that touch audio should take note of sample-accurate code.
      </para>
    </listitem>
    <listitem>
      <para>
        A number of previous API functions are removed;
        <emphasis>OpenFile</emphasis> and <emphasis>OpenFile2</emphasis>
        both replaced by new <emphasis>OpenFile2</emphasis> with additional
        argument.
      </para>
    </listitem>
    <listitem>
      <para>
        Additions have been made for arg type specifications for opcodes.
        <itemizedlist>
          <listitem>
            <simpara>Any-types have been added, as follows:
            <itemizedlist>
              <listitem><simpara>'.' signifies a required arg of any-type</simpara></listitem>
              <listitem><simpara>'?' signifies an optional arg of any-type</simpara></listitem>
              <listitem><simpara>'*' signifies a var-arg list of any-type</simpara></listitem>
            </itemizedlist></simpara>
          </listitem>
          <listitem>
            <simpara>Arrays are now specified using "[x]" where x is a
            type-specifier. The type-specifier can be any of the of the current
            specifiers, including any-types. See <emphasis>Opcodes/arrays.c</emphasis>
            for example usage.</simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>New Type System</para>
      <para>
        A new type system has been added to Csound6, and significant changes
        have been made to the compiler. The previous system for handling types
        involved depending on the first-letter of a variable's name every time
        it was used to determine type. This meant there was a lot of re-checking
        of types. Also, adding new types was difficult, as there was a lot of
        custom code that had to be updated to check for new type letters.
      </para>
      <para>
        In Csound6, a separate system of types was added.  Types are defined as
        CS_TYPE's. The creation of variables from types and the initialisation
        of memory has been encapsulated within the CS_TYPE's. This change
        allows easier addition of new types, as well as generic calculations of
        memory pools, amongst other things.
      </para>
      <para>
        The compiler has been modified since Csound5 to now use the type system
        as an integral part of its semantic checking phase. Variables are now
        registered into a CS_VAR_POOL when they are first defined, with the
        CS_VARIABLE having a reference to its CS_TYPE.  After first time
        definition within the pool, the type information is then looked up in
        consequent variable lookups, rather than re-calculated from the variable
        name. This opens up possibilities for new variable naming and typing
        strategies, i.e. using "myVar:K" to denote a k-rate arg. This also
        opens up possibilities for user-defined types, such as
        "data myType kval, aval", then using "myVar:myType" to define a var
        of that type. (The previous is speculative, and is not an active
        proposal at this time.)
      </para>
      <para>
        The addition of the type system has formalised the static type system
        that has existed in Csound prior to Csound6. It has, arguably, simplified
        the code-base in terms of type handling, as well as laid the ground work
        for future type-related research to be integrated into Csound.
      </para>
    </listitem>
  </itemizedlist>
</para>

<bridgehead>New in Version 5.19 (2013 January 7)</bridgehead>
<para>
  This is mainly a bug-fixing release but with a number of new opcodes and
  enhanced features.
</para>
<para>
  <itemizedlist>
    <listitem>
      <para>New opcodes:
        <itemizedlist>
          <listitem>
            <simpara><emphasis>ipmidi</emphasis> module for MIDI over network.</simpara>
          </listitem>
        </itemizedlist>
        <itemizedlist>
          <listitem>
            <simpara><emphasis>ppltrack</emphasis> opcode.</simpara>
          </listitem>
        </itemizedlist>
        <itemizedlist>
          <listitem>
            <simpara><link linkend="combinv"><citetitle>combinv</citetitle></link> opcode.</simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>New Gen and Macros:
        <itemizedlist>
          <listitem>
            <simpara>
              Better checking in <link linkend="GEN28"><citetitle>GEN28</citetitle></link>.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Check range in <link linkend="outrg"><citetitle>outrg</citetitle></link>,
              and optionally allow wrapping.
            </simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>Orchestra:
        <itemizedlist>
          <listitem>
            <simpara>
              Change empty statement to a warning.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Added line numbers to many input args message (new parser).
            </simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>Modified Opcodes and GENs:
        <itemizedlist>
          <listitem>
            <simpara>
              Better error and warning messages.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              <link linkend="loopseg"><citetitle>loopseg</citetitle></link> now
              checks argument count.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              <link linkend="harmon2"><citetitle>harmon2/3/4</citetitle></link> improved.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              <link linkend="active"><citetitle>active</citetitle></link>: added
              the option to skip the instances in release phase.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              New and more tested implementation of ChordSpace.
            </simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>Bug fixed:
        <itemizedlist>
          <listitem>
            <simpara>
              Fix botched optimisation in lowpass filters.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Chn opcodes fixed in Linux.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Fix bug in <link linkend="loscil"><citetitle>loscil</citetitle></link> with silence.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Correct <link linkend="GEN23"><citetitle>GEN23</citetitle></link>
              when comment does not end in newline.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Correcting <link linkend="loopseg"><citetitle>loopseg</citetitle></link>.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Number of input and output channels fixed in new parser.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Fixed <link linkend="GEN43"><citetitle>GEN43</citetitle></link> issue.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Fixed <link linkend="fout"><citetitle>fout</citetitle></link>.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              <link linkend="centroid"><citetitle>centroid</citetitle></link>
              was likely to crash.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Minor bug in printing which lost %.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              An uninitialised value in <link linkend="fold"><citetitle>fold</citetitle></link> fixed.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Uninitalised values in <link linkend="dconv"><citetitle>dconv</citetitle></link> fixed.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Assignment of fsigs now works.
            </simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>System Changes:
        <itemizedlist>
          <listitem>
            <simpara>
              Avoid seg fault on some user errors.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Faster modal4 opcodes.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Allow cabbage compilation.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Made pfield size dynamic in event message csoundapi~.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              The default output format with pipe and double float is AU.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Change to ircam with default format, '-o stdout' and pipe.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              Added double float precision for output format.
            </simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>Platform Changes:
        <itemizedlist>
          <listitem>
            <para>Linux:
              <itemizedlist>
                <listitem>
                  <simpara>Spinlocks initialised (fixes bug in chn opcodes).</simpara>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>OSX:
              <itemizedlist>
                <listitem>
                  <simpara>
                    Improved selection of devices in rtauhal module.
                  </simpara>
                </listitem>
                <listitem>
                  <simpara>
                    Added a circular buffer interface and lock-free operation to rtauhal.
                  </simpara>
                </listitem>
                <listitem>
                  <simpara>
                    Fixed MacOSX installer (creating symlinks to lib_csnd.dylib).
                  </simpara>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>Haiku:
              <itemizedlist>
                <listitem>
                  <simpara>New platform</simpara>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>Android:
            <itemizedlist>
              <listitem>
                <simpara>
                  Using -B now in android to set circular buffer size.
                </simpara>
              </listitem>
              <listitem>
                <simpara>
                  Added fluid synth opcodes for android.
                </simpara>
              </listitem>
              <listitem>
                <simpara>
                  Added inputMessage method to CsoundObj.
                </simpara>
              </listitem>
              <listitem>
                <simpara>
                  Allow CSDPlayer to be installed on SD Card.
                </simpara>
              </listitem>
            </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>iOS:
            <itemizedlist>
              <listitem>
                <simpara>
                  Improved audio routing.
                </simpara>
              </listitem>
              <listitem>
                <simpara>
                  Bottom speaker the default for iOS.
                </simpara>
              </listitem>
            </itemizedlist>
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
      <para>API:
        <itemizedlist>
          <listitem>
            <simpara>
              Added new API function <emphasis>csoundCompileFromStrings()</emphasis>.
            </simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
  </itemizedlist>
</para>
<bridgehead>New in Version 5.18 (2012 August 29)</bridgehead>
<para>
  This is mainly a bug-fixing release but with a number of new opcodes and
  enhanced features.
</para>
<para>
  <itemizedlist>
    <listitem>
      <para>New opcodes:
      <itemizedlist>
        <listitem>
          <simpara><link linkend="centroid"><citetitle>centroid</citetitle></link>
          opcode like pvscent but acting on audio signals</simpara>
        </listitem>
        <listitem>
          <simpara><link linkend="cosseg"><citetitle>cosseg</citetitle></link>
          like linseg but with cosine interpolation</simpara>
        </listitem>
        <listitem>
          <simpara><link linkend="cossegb"><citetitle>cossegb</citetitle></link>
          like linsegb but with cosine interpolation</simpara>
        </listitem>
        <listitem>
          <simpara><link linkend="cossegr"><citetitle>cossegr</citetitle></link>
          like linsegr but with cosine interpolation</simpara>
        </listitem>
        <listitem>
          <simpara><link linkend="joystick"><citetitle>joystick</citetitle></link>
          to read input values from an external joystick (Linux only)</simpara>
        </listitem>
        <listitem>
          <simpara><link linkend="log2"><citetitle>log2</citetitle></link>
          function for logarithms base 2</simpara>
        </listitem>
        <listitem>
          <simpara><link linkend="platerev"><citetitle>platerev</citetitle></link>
          opcode to model a reverberating square plate</simpara>
        </listitem>
        <listitem>
          <simpara><link linkend="pwd"><citetitle>pwd</citetitle></link>
          opcode to determine the current working directory</simpara>
        </listitem>
        <listitem>
          <simpara><link linkend="readf"><citetitle>readf</citetitle></link>
          opcode to read strings from a file</simpara>
        </listitem>
        <listitem>
          <simpara><link linkend="readfi"><citetitle>readfi</citetitle></link>
          opcode to read strings from a file on initialisation</simpara>
        </listitem>
        <listitem>
          <simpara><link linkend="vbap"><citetitle>vbap</citetitle></link>
          opcode like other vbap family but flexible about number
          of speakers and choice of layouts.</simpara>
        </listitem>
        <listitem>
          <simpara><link linkend="vbapg"><citetitle>vbapg</citetitle></link>
          opcode like vbap but only calculate the gains on the
          channels.</simpara>
        </listitem>
      </itemizedlist>
      </para>
    </listitem>
      <listitem>
        <para>
          New functionality
          <itemizedlist>
            <listitem>
              <simpara>
              Changes to &lt;CsOptions&gt; to allow spaces between
              words, and escaped characters.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              <link linkend="fout"><citetitle>fout</citetitle></link>
              and <link linkend="fin"><citetitle>fin</citetitle></link> use a
              better buffering strategy, and so are
              faster
              </simpara>
            </listitem>
              <listitem>
                <simpara>
                  It is possible to specify just an orchestra with the
                  --orc flag.  This is useful when a score is not needed.
              </simpara>
            </listitem>
              <listitem>
                <simpara>
              A new command-line flag --ogg flag has been added for
              easy use of ogg/vorbis output.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              Added alsaseq real-time midi
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bug fixes and improvements:
          <itemizedlist>
            <listitem>
              <simpara>
              <link linkend="dates"><citetitle>dates</citetitle></link>
              opcode could crash on 64bit architecture; this is fixed
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              Some multicore interlocks were wrong.  It is believed
              that this was not actually a problem, but would be in
              the future.</simpara>
            </listitem>
            <listitem>
              <simpara>
              There were cases when a file was double closed, leading
              to a crash on exit.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Two new features added in <link linkend="partikkel"><citetitle>partikkel</citetitle></link>.  Panning law for
                channelmasks can now be set using a function table
                (second optional argument to partikkel) and new support
                opcodes partikkelget and partikkelset, to access and
                modify the internal mask indices of partikkel.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              <link linkend="follow2"><citetitle>follow2</citetitle></link> was reworked do the i-rate and k-rate
              calculations are the same.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              <link linkend="pvscent"><citetitle>pvscent</citetitle></link> is corrected as it returned half the correct
              value.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              <link linkend="vbaplsinit"><citetitle>vbaplsinit</citetitle></link> can create more than one speaker layout which
              vbap/vbapg can use.  Also much better diagnostics on
              incorrect layouts.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Internal Changes:
          <itemizedlist>
            <listitem>
              <simpara>
              Code changed so bison 2.6 can be used.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              It is assumed that libsndfile version 1.0.19 or later is
              available.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              If the score is omitted a near-infinite wait is
              generated.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>
  <bridgehead>New in Version 5.17 (March 2012)</bridgehead>
  <para>
  This is mainly a bug-fixing release with no major changes, but the
  number of fixes warrants a release.
  </para>
  <para>
    <itemizedlist>
      <listitem>
        <para>New opcodes:
          <itemizedlist>
            <listitem>
              <simpara><link linkend="cell"><citetitle>cell</citetitle></link>
               opcode, for cellular automata</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Modified Opcodes and Gens:
          <itemizedlist>
            <listitem>
              <simpara>active now will report total number of active or allocated instruments if argument in zero</simpara>
            </listitem>
            <listitem>
              <simpara>stsend and strecv the TCP socket opcodes reworked to a logical design </simpara>
            </listitem>
                <listitem>
              <simpara>DSSI system now will take up to 9 channels </simpara>
            </listitem>
            <listitem>
              <simpara>FLsavesnap works with other widgets where imin &gt; imax </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Utilities:
          <itemizedlist>
            <listitem>
              <simpara>csbeats better documented and built by default; also more note lengths available </simpara>
            </listitem>
            <listitem>
              <simpara>Some security holes in utilities fixed </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bug fixes:
          <itemizedlist>
            <listitem>
              <simpara>unirand opcode at a-rate fixed </simpara>
            </listitem>
            <listitem>
              <simpara>Locale fix for floating point literals in orchestra </simpara>
            </listitem>
            <listitem>
              <simpara>transegr fixed </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          System Changes:
          <itemizedlist>
            <listitem>
              <simpara>Score can now last longer (change to size of time variable) </simpara>
            </listitem>
            <listitem>
              <simpara>An empty score gives a very long performance time (years and years) </simpara>
            </listitem>
            <listitem>
              <simpara>Android code released </simpara>
            </listitem>
            <listitem>
              <simpara>Changes to use of tmp files; now all are deleted at end of run (previously some were left) and the environment variable TMPDIR is used.
              </simpara>
            </listitem>
            <listitem>
              <simpara>interaction between Comments, end of line and end of file fixed </simpara>
            </listitem>
            <listitem>
              <simpara>Hexadecimal numbers now allowed in orchestra </simpara>
            </listitem>
            <listitem>
              <simpara>Empty orchestra now not a crash  </simpara>
            </listitem>
            <listitem>
              <simpara>change to macro expansion inside a string </simpara>
            </listitem>
            <listitem>
              <simpara>avoid infinite loop when eof in malformed score macro </simpara>
            </listitem>
            <listitem>
              <simpara>fixed macroname-with-args diagnostics and memory leak </simpara>
            </listitem>
            <listitem>
              <simpara>change to preprocessor: {{ }} inside "..." and better diagnostics </simpara>
            </listitem>
            <listitem>
              <simpara>fix windows installer so it removes full $INSTDIR\bin from PATH during uninstall: this cleans up the PATH environment variable when uninstalling on
      Windows.  Previously, it was leaving a trailing "\bin" on the PATH.</simpara>
            </listitem>
            <listitem>
              <simpara>CsoundAC MusicModel class more usable by C++ programs </simpara>
            </listitem>
            <listitem>
              <simpara>ftcps had been missed as a function </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Internal Changes:
          <itemizedlist>
            <listitem>
              <simpara>Many! Some messages quietened, code improvements etc </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>
  <bridgehead>New in Version 5.16 (February 2012)</bridgehead>
  <para>
    The major change is that the new parser is now the default. The old
    parser is still available in case of difficulty but the new has been
    given extensive testing since the start of the year, including
    complete restructuring of macro expansion.
    A side effect is that the runtime of most orchestras is faster,
    although parsing is slower. There are a few optimisations implemented
    like constant folding in simple cases. Line numbers and file names
    are traced better than before.
  </para>
  <para>
    Some memory leaks also fixed.
  </para>
  <para>
    <itemizedlist>
      <listitem>
        <para>New opcodes:
          <itemizedlist>
            <listitem>
              <simpara>Opcodes adapted from SuperCollider by Tito Latini:
              <link linkend="dust"><citetitle>dust</citetitle></link>,
              <link linkend="dust2"><citetitle>dust2</citetitle></link>,
              <link linkend="gausstrig"><citetitle>gausstrig</citetitle></link>,
              <link linkend="gendy"><citetitle>gendy</citetitle></link>,
              <link linkend="gendyc"><citetitle>gendyc</citetitle></link>, and
              <link linkend="gendyx"><citetitle>gendyx</citetitle></link>.
              </simpara>
            </listitem>
            <listitem>
              <simpara>Fractal noise generator by Tito Latini:
              <link linkend="fractalnoise"><citetitle>fractalnoise</citetitle></link>.
              </simpara>
            </listitem>
            <listitem>
              <simpara>Opcodes for accessing table values by direct indexing, by John ffitch:
              <link linkend="ptable"><citetitle>ptable</citetitle></link>,
              <link linkend="ptablei"><citetitle>ptablei</citetitle></link>,
              <link linkend="ptable3"><citetitle>ptable3</citetitle></link>, and
              <link linkend="ptablew"><citetitle>ptablew</citetitle></link>. These opcodes
              are respectively like
              <link linkend="table"><citetitle>table</citetitle></link>,
              <link linkend="tablei"><citetitle>tablei</citetitle></link>,
              <link linkend="table3"><citetitle>table3</citetitle></link>, and
              <link linkend="tablew"><citetitle>tablew</citetitle></link>, but they do not
              require a power-of-2 table size.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Modified Opcodes and Gens:
          <itemizedlist>
            <listitem>
              <simpara>There was a fence post problem in tab opcode that could falsely report a reference out of range.</simpara>
            </listitem>
            <listitem>
              <simpara>GEN15 mis-called gens 13 and 14 internally, using uninitialised values voice amplitude. Problem fixed.</simpara>
            </listitem>
                <listitem>
              <simpara>fmbell now takes an optional argument to control the sustain time.</simpara>
            </listitem>
            <listitem>
              <simpara>Change to pvsbasic for tab to table conversions.</simpara>
            </listitem>
            <listitem>
              <simpara>poscil is now polymorphic, allowing k- or a-rate amplitude and frequency.</simpara>
            </listitem>
            <listitem>
              <simpara>p() and i() changed when argument at k-rate.</simpara>
            </listitem>
            <listitem>
              <simpara>gen49 deferred now works.</simpara>
            </listitem>
            <listitem>
              <simpara>gen23 now available deferred.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Utilities:
          <itemizedlist>
            <listitem>
              <simpara>Checked for use with the new parser in memory files.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Frontends:
          <itemizedlist>
            <listitem>
              <simpara>Table access added to csoundapi~ via new get/set methods.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bug fixes and improvements:
          <itemizedlist>
            <listitem>
              <simpara>Many in new parser related to precedence and multicore.</simpara>
            </listitem>
            <listitem>
              <simpara>Better diagnostics when orchestra file/csd is missing.</simpara>
            </listitem>
            <listitem>
              <simpara>csd file: fix CsFileB and CsSampleB.</simpara>
            </listitem>
            <listitem>
              <simpara>Fixed score statement 'n'.</simpara>
            </listitem>
            <listitem>
              <simpara>Fixed bug in diskin2 leading to infinite loop.</simpara>
            </listitem>
            <listitem>
              <simpara>Fixed bug causing crossfade noise in hrtfmove.</simpara>
            </listitem>
            <listitem>
              <simpara>Fixed unlikely buffer overflows in some utilities.</simpara>
            </listitem>
            <listitem>
              <simpara>Avoid segfault in midicN.</simpara>
            </listitem>
            <listitem>
              <simpara>Bug in mp3in in skip=0 case fixed.</simpara>
            </listitem>
            <listitem>
              <simpara>'r' score statement fixed with respect to macros.</simpara>
            </listitem>
            <listitem>
              <simpara>sndwarp could segfault.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          System Changes:
          <itemizedlist>
            <listitem>
              <simpara>Preprocessor #if #else #endin working.</simpara>
            </listitem>
            <listitem>
              <simpara>#includes depth now limited rather than infinite recursion.</simpara>
            </listitem>
            <listitem>
              <simpara>Really turn off all displays if --nodisplays or -d is used; fixes bug where using -d or --nodisplays would still cause the
              winFLTK.c csoundModuleInit to setup display callbacks; bug caused with python TK apps and CsoundYield_FLTK being called.</simpara>
            </listitem>
            <listitem>
              <simpara>Memory leak in mp3in and mp3len fixed.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Internal Changes:
          <itemizedlist>
            <listitem>
              <simpara>Very, very, very many! And the new parser...</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>
<bridgehead>New in Version 5.15 (December 2011)</bridgehead>
<para>
  <itemizedlist>
      <listitem>
        <para>New opcodes:
          <itemizedlist>
            <listitem>
              <simpara><citetitle>ftab2tab</citetitle>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="tab2pvs"><citetitle>tab2pvs</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="pvs2tab"><citetitle>pvs2tab</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="cpumeter"><citetitle>cpumeter</citetitle></link> opcode, (not really new but now available in OSX)</simpara>
              </listitem>
            <listitem>
              <simpara><citetitle>minmax</citetitle>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><citetitle>(EXPERIMENTAL) ftresize</citetitle>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><citetitle>(EXPERIMENTAL) ftresizei</citetitle>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="hrtfearly"><citetitle>hrtfearly</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="hrtfreverb"><citetitle>hrtfreverb</citetitle></link>
              opcode.</simpara>
            </listitem>
          </itemizedlist>
        </para>

        <para>
          New Gen and Macros
          <itemizedlist>
            <listitem>
              <simpara>Code to allow GEN49 to be deferred [NB does not seem to work] </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Modified Opcodes and Gens
          <itemizedlist>
            <listitem>
              <simpara>socksend and sockrecv no longer uses MTFU check and work on Windows </simpara>
            </listitem>
            <listitem>
              <simpara>mpulse changed so if next event is at negative time use the absolute value </simpara>
            </listitem>
                <listitem>
              <simpara>serial opcode now runs on Windows as will as Un*x </simpara>
            </listitem>
                <listitem>
              <simpara>out, out2, outq, outh, outo outx and out32 are now identical opcodes and will take up to as many arguments as nchnls. This replaces the current remapping of opcodes </simpara>
            </listitem>
            <listitem>
              <simpara>turnoff2 now polymorphic wrt S and k types (ie accepts instrumnet names) </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bugs fixed:
        <itemizedlist>
          <listitem>
            <simpara> GEN42 fixed </simpara>
          </listitem>
          <listitem>
            <simpara>jacko: fixed a segfault removing the unused JackSessionID option </simpara>
          </listitem>
          <listitem>
            <simpara>doppler memory leak fixed </simpara>
          </listitem>
          <listitem>
            <simpara>transegr fixed in release mode when skipping most of envelope </simpara>
          </listitem>
          <listitem>
            <simpara>FLPack now agrees with manual </simpara>
          </listitem>
          <listitem>
            <simpara>max_k now agrees with manual </simpara>
          </listitem>
          <listitem>
            <simpara>hrtfreverb fixed </simpara>
          </listitem>
          <listitem>
            <simpara>atsa code now works on Windows in more cases </simpara>
          </listitem>
          <listitem>
            <simpara>tabmorph bug fixed </simpara>
          </listitem>
          <listitem>
            <simpara>fixed problem with user-defined opcodes having no outputs </simpara>
          </listitem>
          <listitem>
            <simpara> Various fixes to * ... */ comments </simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
      <listitem>
        <para>System Changes:
        <itemizedlist>
          <listitem>
            <simpara> Various licence issues sorted </simpara>
          </listitem>
          <listitem>
            <simpara>Loris is no longer part of the Csound tree </simpara>
          </listitem>
          <listitem>
            <simpara>Memory leaks fixed </simpara>
          </listitem>
          <listitem>
            <simpara>If no score is given a dummy that runs for over 100 years is created </simpara>
          </listitem>
          <listitem>
            <simpara>All score processing takes place in memory without temporary files </simpara>
          </listitem>
          <listitem>
            <simpara>String memory now expandable and no size limitation </simpara>
          </listitem>
          <listitem>
            <simpara>#if #else #end now in new parser </simpara>
          </listitem>
          <listitem>
            <simpara>Adjustments to MIDI file precision in output </simpara>
          </listitem>
          <listitem>
            <simpara>On OSX move from Coreaudio to AuHAL </simpara>
          </listitem>
          <listitem>
            <simpara>Multicore now safe for ZAK, Channels and modifying tables </simpara>
          </listitem>
          <listitem>
            <simpara>New coremidi module </simpara>
          </listitem>
          <listitem>
            <simpara>Virtual Keyboard improved:
                 1) Dropdown for choosing base octave (the one that
                 starts with the virtual key mapped to physical key
                 Z). Default value is 5 which is backwards compatible.
                 2) Shift-X mappings which add two octaves to X
                 mappings for a total of 4 octaves playable from the
                 physical keyboard (starting from selected base octave).
                 3) Control-N / Control-Shift-N mappings to increment
                 / decrement slider for control N.
                 4) Mouse wheel now controls sliders. </simpara>
          </listitem>
          <listitem>
            <simpara>tsig type for vectors </simpara>
          </listitem>
          <listitem>
            <simpara>tsigs and fsigs allowed as arguments in UDOs </simpara>
          </listitem>
          <listitem>
            <simpara>API: Minor version upped </simpara>
          </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
        <para>
          Internal Changes:
          <itemizedlist>
            <listitem>
              <simpara>
              Very, very, very many! </simpara>
            </listitem>
            <listitem>
              <simpara>
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>
<bridgehead>New in Version 5.14 (October 2011)</bridgehead>
<para>
  <itemizedlist>
      <listitem>
        <para>New opcodes:
          <itemizedlist>
            <listitem>
              <simpara><link linkend="mp3len"><citetitle>mp3len</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="qnan"><citetitle>qnan</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="qinf"><citetitle>qinf</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend=" exprandi"><citetitle>
                exprandi</citetitle></link> opcode.</simpara>
              </listitem>
            <listitem>
              <simpara><link linkend="cauchyi"><citetitle>cauchyi</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="gaussi"><citetitle>gaussi</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="cpumeter"><citetitle>cpumeter</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="linsegb"><citetitle>linsegb</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="expsegb"><citetitle>expsegb</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="transegb"><citetitle>transegb</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="expsegba"><citetitle>expsegba</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="pvsgain"><citetitle>pvsgain</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara>
                <link linkend="pvsbufread2"><citetitle>pvsbufread2</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="serialBegin"><citetitle>serial</citetitle></link>
              opcodes.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="lua"><citetitle>lua
              opcodes</citetitle></link> opcodes.</simpara>
            </listitem>
            <listitem>
              <simpara>plustab opcode.</simpara>
            </listitem>
            <listitem>
              <simpara>multtab opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="maxarray"><citetitle>maxarray</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="minarray"><citetitle>minarray</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="sumarray"><citetitle>sumarray</citetitle></link>
              opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="scalearray"><citetitle>scalearray</citetitle></link>
              opcode.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          New functionality
          <itemizedlist>
            <listitem>
              <simpara>beats processor renamed to csbeats and distributed </simpara>
            </listitem>
            <listitem>
              <simpara>mkdb utility to provide a catalogue of plugin
              libraries/opcodes </simpara>
            </listitem>
                <listitem>
              <simpara>ladspa library build in default system </simpara>
            </listitem>
                <listitem>
              <simpara>macros are now expanded inside string in the score </simpara>
            </listitem>
            <listitem>
              <simpara>there in an until .. do .. od looping syntax
              (in the new parser only) </simpara>
            </listitem>
            <listitem>
              <simpara>SIGPIPE signals are ignored rather than causing Csound to exit </simpara>
            </listitem>
            <listitem>
              <simpara>It is possible to use vectors of k-rate values,
              named t-variable.  They are initialised to a fixed sizw
              with init adncan be read with a simple [] syntax.
              assignment to elements is only via =.  There are also a
              few new opcodes that provide wider functionality.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bug fixes and improvements:
        <itemizedlist>
          <listitem>
            <simpara> reading values to fill tables was broken with
            respect to comments</simpara>
          </listitem>
          <listitem>
            <simpara>internal error in wii_data fixed </simpara>
          </listitem>
          <listitem>
            <simpara>pvsshift fixed </simpara>
          </listitem>
          <listitem>
            <simpara>jacko fixed </simpara>
          </listitem>
          <listitem>
            <simpara>gen23 minor fixes </simpara>
          </listitem>
          <listitem>
            <simpara>wiimote fixed </simpara>
          </listitem>
          <listitem>
            <simpara>atsaadd fixed </simpara>
          </listitem>
          <listitem>
            <simpara>compress fixed to work with 0dbfs </simpara>
          </listitem>
          <listitem>
            <simpara>pvsbufread corrected with respect to position
            counting </simpara>
          </listitem>
          <listitem>
            <simpara>tempo opcode fixed </simpara>
          </listitem>
          <listitem>
            <simpara>CsFileB section in .csd files had a bug, now fixed </simpara>
          </listitem>
          <listitem>
            <simpara>deferred gen01 tables could have wrong size </simpara>
          </listitem>
          <listitem>
            <simpara>vbap_zak made to work(!) </simpara>
          </listitem>
          <listitem>
            <simpara>fixed memory issue in ATSsinoi </simpara>
          </listitem>
          <listitem>
            <simpara>various fixes to cscore </simpara>
          </listitem>
          <listitem>
            <simpara>various fixes to partials and tradsyn </simpara>
          </listitem>
          <listitem>
            <simpara>transegr could crash in some cases</simpara>
          </listitem>
          <listitem>
            <simpara>loris opcodes updated to latest version </simpara>
          </listitem>
          <listitem>
            <simpara>date opcode has new base in some platforms to
            avoid overflow </simpara>
          </listitem>
          <listitem>
            <simpara>pvsblur now works over reinit </simpara>
          </listitem>
          <listitem>
            <simpara>diskin, diskin2 and soundin now can read up to 40
            channels </simpara>
          </listitem>
          <listitem>
            <simpara>prints behaves better with rounding </simpara>
          </listitem>
          <listitem>
            <simpara>fmpercfl now has working vibrato </simpara>
          </listitem>
          <listitem>
            <simpara>atreson now has gain parameter at k-rate </simpara>
          </listitem>
          <listitem>
            <simpara>comb opcode made safe if in and out arguments the
            same </simpara>
          </listitem>
          <listitem>
            <simpara>better accuracy in line and expon </simpara>
          </listitem>
          <listitem>
            <simpara>OSCsend recovers space previously lost </simpara>
          </listitem>
          <listitem>
            <simpara>OSCsend can send a table as a blob with the T tag
            -- experimental and untested.</simpara>
          </listitem>
          <listitem>
            <simpara>lpf18 now has an optional iskip argument </simpara>
          </listitem>
          <listitem>
            <simpara>i() will also accept an i-rate value in which
            case it is a no-op </simpara>
          </listitem>
          <listitem>
            <simpara>makecsd revised and extended to have options for
            MIDI and score processing and licenses </simpara>
          </listitem>
          <listitem>
            <simpara>lpanal reworked to remove bugs and oddities </simpara>
          </listitem>
            <listitem>
              <simpara>an issue with noise in alsa fixed
              and a click in portaudio fixed     </simpara>
            </listitem>
            <listitem>
              <simpara>portaudio driver changed to be more robust on stop/exit </simpara>
            </listitem>
        </itemizedlist>
      </para>
    </listitem>
    <listitem>
        <para>
          Internal Changes:
          <itemizedlist>
            <listitem>
              <simpara>
              Many many changesto the new parser so it is now
              operational, but should be used with care</simpara>
            </listitem>
            <listitem>
              <simpara>The multicore system is distributed in an
              experimental mode and should be used with great care.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>
<bridgehead>New in Version 5.13 (January 2011)</bridgehead>
  <para>
    <itemizedlist>
      <listitem>
        <para>New opcodes:
          <itemizedlist>
            <listitem>
              <simpara><link linkend="median"><citetitle>median</citetitle></link> opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="filevalid"><citetitle>filevalid</citetitle></link>  opcode.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="pvstanal"><citetitle>pvstanal</citetitle></link>, <link linkend="pvswarp"><citetitle>pvswarp</citetitle></link>, <link linkend="temposcal"><citetitle>temposcal</citetitle></link>, <link linkend="pvslock"><citetitle>pvslock</citetitle></link> spectral processing opcodes.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="mincer"><citetitle>mincer</citetitle></link> opcode</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="fareylen"><citetitle>fareylen</citetitle></link> sequence opcodes.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          New functionality
          <itemizedlist>
            <listitem>
              <simpara>Real random number generators using /dev/random (Linux only).
              </simpara>
            </listitem>
            <listitem>
              <simpara>INF macro added to orchestras; z read as infinity in scores</simpara>
            </listitem>
            <listitem>
              <simpara>init changed to allow multiple inits in on statement</simpara>
            </listitem>
            <listitem>
              <simpara>GEN for support of farey sequences</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="maxalloc"><citetitle>maxalloc</citetitle></link>,<link linkend="cpuprc"><citetitle>cpuprc</citetitle></link>, <link linkend="active"><citetitle>active</citetitle></link> now accept named instruments.</simpara>
            </listitem>
            <listitem>
              <simpara>If normalisation in pow opcodes is zero treat as 1</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="inch"><citetitle>inch</citetitle></link> can take upto 20 inputs and outputs.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="pvscale"><citetitle>pvscale</citetitle></link>, <link linkend="pvsvoc"><citetitle>pvsvoc</citetitle></link> and <link linkend="pvsmix"><citetitle>pvsmix</citetitle></link> now have very good spectral envelope preservation modes (1 = filtered cepstrum, 2 = true envelope).</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="oscil1"><citetitle>oscil1</citetitle></link> could be static if the duration was long; now there is a
   positive minimum increment.</simpara>
            </listitem>
            <listitem>
              <simpara>GEN49 now uses search paths.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bug fixes and improvements:
          <itemizedlist>
            <listitem>
              <simpara>Count of lines fixed in orchestras, and \ inside strings
              </simpara>
            </listitem>
            <listitem>
              <simpara>Fast tab opcodes made safe from crashes</simpara>
            </listitem>
            <listitem>
              <simpara>% in formated printing could crash</simpara>
            </listitem>
            <listitem>
              <simpara>Double free in fgen fixed</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="sndwarp"><citetitle>sndwarp</citetitle></link> quietened (gave too many messages)</simpara>
            </listitem>
            <listitem>
              <simpara>gen41 deals with positive probabilities</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="adsynt"><citetitle>adsynt</citetitle></link> reworked removing many bugs</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="adsynt2"><citetitle>adsynt2</citetitle></link> phase error fixed</simpara>
            </listitem>
            <listitem>
              <simpara>Bug in max number of gens fixed</simpara>
            </listitem>
            <listitem>
              <simpara>Better checking in grain4</simpara>
            </listitem>
            <listitem>
              <simpara>Better checking in <link linkend="adsyn"><citetitle>adsyn</citetitle></link></simpara>
            </listitem>
            <listitem>
              <simpara>modulus was wrong in new parser</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="atonex"><citetitle>atonex</citetitle></link>/<link linkend="tonex"><citetitle>tonex</citetitle></link> did wrong operation</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="mp3in"><citetitle>mp3in</citetitle></link> could repeat sound at end of file</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="changed"><citetitle>changed</citetitle></link> opcode initialised to zero</simpara>
            </listitem>
            <listitem>
              <simpara>Serious bug in <link linkend="tabmorpha"><citetitle>tabmorpha</citetitle></link> fixed</simpara>
            </listitem>
            <listitem>
              <simpara>GEN49 has serious bug removed, so no longer incorrect silences.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="partikkel"><citetitle>partikkel</citetitle></link> opcode: fixed bug in sub-sample grain placement when
       using grain rate FM</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Internal Changes:
          <itemizedlist>
            <listitem>
              <simpara>
   In the new parser only there are operator @ and @@ to round up the
       next integer to a power of 2 or powerof2+1
              </simpara>
            </listitem>
            <listitem>
              <simpara>Score sorting made much faster</simpara>
            </listitem>
            <listitem>
              <simpara>lineto improved</simpara>
            </listitem>
            <listitem>
              <simpara>Named gens allowed</simpara>
            </listitem>
            <listitem>
              <simpara>Various printing include instrument name if available</simpara>
            </listitem>
            <listitem>
              <simpara>Command option to omit loading a library</simpara>
            </listitem>
            <listitem>
              <simpara>Number of out channels no longer constrained to be number of in</simpara>
            </listitem>
            <listitem>
              <simpara>Many fixes to new parser</simpara>
            </listitem>
            <listitem>
              <simpara>More use of Warnings than Messages (allows for them to be switched off)</simpara>
            </listitem>
            <listitem>
              <simpara>csoundSetMessageCallback reset if callback set to null</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>
 <bridgehead>New in Version 5.12 (January 2010)</bridgehead>
 <para>
   <itemizedlist>
     <listitem>
       <para>New opcodes:
         <itemizedlist>
           <listitem>
             <simpara>
         <link linkend="transegr"><citetitle>transegr</citetitle></link>
               is a version of
               the <link linkend="transeg"><citetitle>transeg</citetitle></link>
               opcode which has a release section which is triggered
               by midi,
               a <link linkend="turnoff2"><citetitle>turnoff2</citetitle></link>
               opcode or a negative instrument
               number <link linkend="i"><citetitle>i score event</citetitle></link>.
       </simpara>
           </listitem>
           <listitem>
             <simpara>
         <link linkend="ftgenonce"><citetitle>ftgenonce</citetitle></link>
               generates a function table from within an instrument
               definition, without duplication of data.
       </simpara>
           </listitem>
           <listitem>
             <simpara><link linkend="passign"><citetitle>passign</citetitle></link>
             allows quick initialization of i-rate variables from p-fields</simpara>
           </listitem>
           <listitem>
             <simpara><link linkend="crossfm"><citetitle>crossfm</citetitle></link>
             implements crossed fm synthesis.</simpara>
           </listitem>
           <listitem>
             <simpara>
         <link linkend="loopxseg"><citetitle>loopxseg</citetitle></link>
               is
               like <link linkend="loopseg"><citetitle>loopseg</citetitle></link>
               but with exponential envelope.
       </simpara>
           </listitem>
           <listitem>
             <simpara>
         <link linkend="looptseg"><citetitle>looptseg</citetitle></link>
               is like <link linkend="loopseg"><citetitle>loopseg</citetitle></link>
               but with a flexible envelope like <link linkend="transeg"><citetitle>transeg</citetitle></link>
       </simpara>
           </listitem>
         </itemizedlist>
       </para>
     </listitem>
     <listitem>
       <para>Bug fixes and improvements:
         <itemizedlist>
           <listitem>
             <simpara>
         <link linkend="pvshift"><citetitle>pvshift</citetitle></link> would overwrite in double mode.
             </simpara>
           </listitem>
           <listitem>
             <simpara>
         <link linkend="pan2"><citetitle>pan2</citetitle></link> case 3 fixed.
             </simpara>
           </listitem>
  <!--           <listitem>-->
 <!--             <simpara> -->
<!--          <link linkend="gettempo"><citetitle>gettempo</citetitle></link> now works. -->
<!--              </simpara> -->
  <!--          </listitem> -->
           <listitem>
             <simpara>
         <link linkend="clockon"><citetitle>clockon</citetitle></link>
         and  <link linkend="clockoff"><citetitle>clockoff</citetitle></link>
         now work again.
             </simpara>
           </listitem>
           <listitem>
             <simpara>
         <link linkend="cross2"><citetitle>cross2</citetitle></link> and <link linkend="interp"><citetitle>interp</citetitle></link> could have divided by zero
             </simpara>
           </listitem>
           <listitem>
             <simpara>
         linecount for error messages no longer includes text
         from <link linkend="CommandUnifileParFile"><citetitle>.csoundrc</citetitle></link>
             </simpara>
           </listitem>
           <listitem>
             <simpara>
         <link linkend="p5gconnect"><citetitle>p5gconnect</citetitle></link>
         changed to use a separate thread to avoid timeout problem.
             </simpara>
           </listitem>
           <listitem>
             <simpara>
         <link linkend="transeg"><citetitle>transeg</citetitle></link> checks argument count.
             </simpara>
           </listitem>
           <listitem>
             <simpara>
         <link linkend="sfload"><citetitle>sfload</citetitle></link>
               used to be limited to 10 sound fonts and was not policed.
               Now open-ended.
             </simpara>
           </listitem>
         </itemizedlist>
       </para>
     </listitem>
     <listitem>
       <para>
         Internal Changes:
         <itemizedlist>
           <listitem>
             <simpara>
         \" allowed as an escape in orchestral strings
             </simpara>
           </listitem>
           <listitem>
             <simpara>
         New parser fixed on optional arguments
             </simpara>
           </listitem>
           <listitem>
             <simpara>
         Better checking of <link linkend="f"><citetitle>f</citetitle></link> statement with negative number
             </simpara>
           </listitem>
           <listitem>
             <simpara>
         Soundfonts only initialise pitches array once, in the
         soundfont opcodes.
             </simpara>
           </listitem>
           <listitem>
             <simpara>
         Usual collection of gratuitous minor changes, layout and comments
             </simpara>
           </listitem>
         </itemizedlist>
       </para>
     </listitem>
   </itemizedlist>
 </para>
  <bridgehead>New in Version 5.11 (June 2009)</bridgehead>
  <para>
    <itemizedlist>
      <listitem>
        <para>New opcodes:
          <itemizedlist>
            <listitem>
              <simpara><link linkend="mp3in"><citetitle>mp3in</citetitle></link>
              allows reading of mp3 files directly in the orchestra.</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="wiiconnect"><citetitle/>wiiconnect</link>, <link linkend="wiidata"><citetitle/>wiidata</link>, <link linkend="wiisend"><citetitle/>wiisend</link>, <link linkend="wiirange"><citetitle/>wiirange</link> opcodes by john ffitch to receive and send data to a wiimote controller.</simpara>
            </listitem>
            <listitem>
              <simpara>New opcodes to receive data directly from a p5glove by john ffitch <link linkend="p5gdata"><citetitle>p5gdata</citetitle></link></simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="tabsum"><citetitle>tabsum</citetitle></link> sums sections of ftables</simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="MixerSetLevel_i"><citetitle>MixerSetLevel_i</citetitle></link> an init-time only version of <link linkend="MixerSetLevel"><citetitle>MixerSetLevel</citetitle></link></simpara>
            </listitem>
             <listitem>
              <simpara><link linkend="doppler"><citetitle>doppler</citetitle></link>
              implements a simulation of the doppler effect.</simpara>
            </listitem>
             <listitem>
              <simpara><link linkend="filebit"><citetitle>filebit</citetitle></link> reports the file depth of a file.</simpara>
            </listitem>
           <listitem>
             <simpara>
         The new <link linkend="SignalFlowGraphOpcodes"><citetitle>Signal
       Flow opcodes </citetitle></link> enable the usage of
               signal flow graphs in Csound.
       </simpara>
           </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          New functionality
          <itemizedlist>
            <listitem>
              <simpara>
                New panning type for <link linkend="pan2"><citetitle/>pan2</link> opcode
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                New csd score tag &lt;CsExScore&gt;.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                New -Ma option for ALSA RT MIDI module which listens to all devices.
              </simpara>
            </listitem>
            <listitem>
              <simpara>There is a gen49 to read mp3 files
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Added rounding bin code to <link linkend="pvscale"><citetitle>pvscale</citetitle></link>
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              Added non-power-of-2 table support for <link linkend="ftload"><citetitle>ftload</citetitle></link> and <link linkend="ftsave"><citetitle>ftsave</citetitle></link>
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              GEN23 totally rewritten to be more consistent in what constitutes
       a separator and comments. (Still no /* */ comments)
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bug fixes and improvements:
          <itemizedlist>
            <listitem>
              <simpara>
                New examples for pvs opcodes by Joachim Heintz: <link linkend="pvsarp"><citetitle/>pvsarp</link>, <link linkend="pvscent"><citetitle/>pvscent</link>, <link linkend="pvsbandp"><citetitle/>pvsbandp</link>, <link linkend="pvsbandr"><citetitle/>pvsbandr</link>, <link linkend="pvsbufread"><citetitle/>pvsbufread</link>,  <link linkend="pvsadsyn"><citetitle/>pvsadsyn</link>,  <link linkend="pvsynth"><citetitle/>pvsynth</link>,  <link linkend="pvsblur"><citetitle/>pvsblur</link>,  <link linkend="pvscale"><citetitle/>pvscale</link>,  <link linkend="pvscross"><citetitle/>pvscross</link>,  <link linkend="pvsfilter"><citetitle/>pvsfilter</link>,  <link linkend="pvsfreeze"><citetitle/>pvsfreeze</link>,  <link linkend="pvshift"><citetitle/>pvshift</link>,  <link linkend="pvsmaska"><citetitle/>pvsmaska</link>,  <link linkend="pvsmorph"><citetitle/>pvsmorph</link>
              </simpara>
            </listitem>
            <listitem>
              <simpara>Use of automatic numbering of ftables reuses table numbers
              </simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="seed"><citetitle/>seed</link> with positive argument was wrong
              </simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="sprintf"><citetitle/>sprintf</link> with an empty string printed wrong data
              </simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="mute"><citetitle/>mute</link> now works with both numeric and named instruments
              </simpara>
            </listitem>
            <listitem>
              <simpara>Small fixes in <link linkend="diskin"><citetitle/>diskin</link>, and in <link linkend="tablexkt"><citetitle/>tablexkt</link>
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Internal Changes:
          <itemizedlist>
            <listitem>
              <simpara>SConstruct now builds completely independent shared libraries
       for Python, Lua, and Java wrappers.
              </simpara>
            </listitem>
            <listitem>
              <simpara>New Parser almost usable
              </simpara>
            </listitem>
            <listitem>
              <simpara> Redrawing of graphs fixed so that only selected ones get redrawn.
              </simpara>
            </listitem>
            <listitem>
              <simpara>RT-alsa more forgiving on near sample rates
              </simpara>
            </listitem>
            <listitem>
              <simpara>It is possible to have the score generated by an external program
         rather than using standard score format using
         &lt;CScore bin="translater"&gt; to call the program translater on the
         score data
              </simpara>
            </listitem>
            <listitem>
              <simpara>lpc_export fixed
              </simpara>
            </listitem>
            <listitem>
              <simpara>Removed limit on macro names length
              </simpara>
            </listitem>
            <listitem>
              <simpara>PMAX, the number of arguments to a score event has been reduced
    by 2, and an overflow system introduced so GENs can have
    arbitrary numbers of arguments.
              </simpara>
            </listitem>
            <listitem>
              <simpara>Increased API version to 2.1.
              </simpara>
            </listitem>
            <listitem>
              <simpara>    New API function pointer ldmemfile2withCB() which is
       a version of ldmemfile() allowing a callback to be set and called
       exactly once to process the MEMFIL buffer after it is loaded.
              </simpara>
            </listitem>
            <listitem>
              <simpara>csound-&gt;floatsize set; zero in earlier versions
              </simpara>
            </listitem>
            <listitem>
              <simpara>GetChannelLock added
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>
  <bridgehead>New in Version 5.10 (December 2008)</bridgehead>
  <para>
    <itemizedlist>
<!--      <listitem>
        <para>New opcodes:
          <itemizedlist>
            <listitem>
              <simpara><link linkend="ephasor"><citetitle>ephasor</citetitle></link></simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>-->
      <listitem>
        <para>
          New functionality
          <itemizedlist>
            <listitem>
              <simpara>
                New option to listen to all MIDI devices using the portmidi realtime module. To enable listening to all devices use "-+rtmidi=portmidi -Ma".
              </simpara>
            </listitem>
            <listitem>
              <simpara>Dither on output implemented; rectangular and triangular dither
    available in some cases
              </simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="GEN20"><citetitle>GEN20</citetitle></link> type 6 now has option to set variance
              </simpara>
            </listitem>
<!--            <listitem>
              <simpara>sone GEN as a plugin to mimic gen13 in Music360 (this may change
    in detail)
              </simpara>
            </listitem>-->
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bug fixes and improvements:
          <itemizedlist>
            <listitem>
              <simpara>
                Locale set to C numeric to avoid , versus . problems.
              </simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="diskin"><citetitle>diskin</citetitle></link> fixed
              </simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="outo"><citetitle>outo</citetitle></link> was broken regarding channel 6
              </simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="pitchamdf"><citetitle>pitchamdf</citetitle></link> fixed
              </simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="zfilter2"><citetitle>zfilter2</citetitle></link> intialization fixed
              </simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="s32b14"><citetitle>s32b14</citetitle></link> fixed
              </simpara>
            </listitem>
            <listitem>
              <simpara>Fixed other bugs fixed that have not been reported publicly.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Internal Changes:
          <itemizedlist>
            <listitem>
              <simpara>
    The major version of the Csound API is increased to 2; affected csound.so as well. This means that Csound 5.10 is incompatible with applications ("front ends", "clients", or "hosts") that were built for Csound 5.08 and earlier and that use API version 1.x. These applications will need to be rebuilt to work with the current and future versions of Csound.  Csound front ends written in interpreted languages such as Python or Java may continue to work without modification.  It may also be possible to keep both an earlier version of the Csound library and an API 2.0 version on the same machine together so that new and old Csound-based applications can run side-by-side.  These changes do not in any way affect the
    compatibility of Csound orchestras and scores: all old documents should continue to work as before.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Time now counted internally in samples, overcoming a longstanding bug with rounding of time to k-rate.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Many internal changes related to branch prediction.  Some opcodes are substantially quicker.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>

<bridgehead>New in Version 5.09 (October 2008)</bridgehead>
    <para>
    <itemizedlist>
      <listitem>
        <para>New opcodes:
          <itemizedlist>
            <listitem>
              <simpara>New <link linkend="vosim"><citetitle>vosim</citetitle></link> opcode by Rasmus Ekman which recreates the historic VOSIM (VOcal SIMulator) technique.</simpara>
            </listitem>
            <listitem>
              <simpara>New <link linkend="dcblock2"><citetitle>dcblock2</citetitle></link> opcode by Victor Lazzarini.</simpara>
            </listitem>
            <listitem>
              <simpara>New Chua's oscillator model: <link linkend="chuap"><citetitle>chuap</citetitle></link> by Michael Gogins.</simpara>
            </listitem>
            <listitem>
              <simpara>New <link linkend="linearalgebraopcodes"><citetitle>Linear Algebra</citetitle></link> opcodes by Michael Gogins. Standard Linear algebra over real and complex vectors and matrices: elementwise arithmetic, norms, transpose and conjugate, inner products, matrix inverse, LU decomposition, QR decomposition, and QR-based eigenvalue decomposition. Includes copying vectors to and from a-rate signals, function tables, and f-signals.</simpara>
            </listitem>
            <listitem>
              <simpara>New ambisonic opcodes: <link linkend="bformdec1"><citetitle>bformdec1</citetitle></link> and <link linkend="bformenc1"><citetitle>bformenc1</citetitle></link>. These opcodes deprecate the older <link linkend="bformdec"><citetitle>bformdec</citetitle></link> and <link linkend="bformenc"><citetitle>bformenc</citetitle></link>.</simpara>
            </listitem>
            <listitem><simpara>New Score control opcodes by Victor Lazzarini: <link linkend="rewindscore"><citetitle>rewindscore</citetitle></link> and <link linkend="setscorepos"><citetitle>setscorepos</citetitle></link>.</simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          New functionality:
          <itemizedlist>
            <listitem>
              <simpara>
                The <emphasis>vbap</emphasis> family of opcodes (<link linkend="vbap4"><citetitle>vbap4</citetitle></link>, <link linkend="vbap8"><citetitle>vbap8</citetitle></link>, <link linkend="vbap16"><citetitle>vbap16</citetitle></link> and <link linkend="vbapz"><citetitle>vbapz</citetitle></link>) now accept k-rate variables for all their input arguments.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                New pulseaudio I/O module on Linux.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                New optional <emphasis>ienv</emphasis> parameter to generate envelopes for the soundfont opcodes: <link linkend="sfplay"><citetitle>sfplay</citetitle></link>,  <link linkend="sfplay3"><citetitle>sfplay3</citetitle></link>,  <link linkend="sfplaym"><citetitle>sfplaym</citetitle></link> and  <link linkend="sfplay3m"><citetitle>sfplay3m</citetitle></link>.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Added 'skip normalisation argument'  to "tanh" named GEN routine. (See <link linkend="ScoreGenRef"><citetitle>Named GEN Routines</citetitle></link>)
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Added scheduler priority option on alsa.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bug fixes and improvements:
          <itemizedlist>
            <listitem>
              <simpara>
                Allow scientific notation (as was in csound4!) in <link linkend="GEN23"><citetitle>GEN23</citetitle></link>.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Fixed bug in FLTK initialization. Should make FLTK usage more stable.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Error on /* */ comments in orchestra fixed.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                <link linkend="poscil"><citetitle>poscil</citetitle></link> no longer overwrites frequency if variable is shared.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                <link linkend="printk"><citetitle>printk</citetitle></link> and <link linkend="printks"><citetitle>printks</citetitle></link> check that opcode is initialised.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Deprecate <link linkend="soundout"><citetitle>soundout</citetitle></link> and <link linkend="soundouts"><citetitle>soundouts</citetitle></link> in favour of <link linkend="fout"><citetitle>fout</citetitle></link>.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Fixed <link linkend="space"><citetitle>space</citetitle></link> opcode to accept non-pow-2 (deferred) tables.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Fixed <link linkend="pvsmorph"><citetitle>pvsmorph</citetitle></link> bug.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Internal Changes:
          <itemizedlist>
            <listitem>
              <simpara>
                New parser has #include and argumentless macros.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Less casting between floats and doubles in float version.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Includes experimental multicore support.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                <link linkend="buzz"><citetitle>buzz</citetitle></link> opcode rewritten.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Many other internal changes and small bug fixes.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>
  <bridgehead>New in Version 5.08 (February 2008)</bridgehead>
  <para>
    <itemizedlist>
      <listitem>
        <para>New opcodes:
          <itemizedlist>
            <listitem>
              <simpara>
                <link linkend="imagecreate"><citetitle>imagecreate</citetitle></link>,
                <link linkend="imagesize"><citetitle>imagesize</citetitle></link>,
                <link linkend="imagegetpixel"><citetitle>imagegetpixel</citetitle></link>,
                <link linkend="imagesetpixel"><citetitle>imagesetpixel</citetitle></link>,
                <link linkend="imagesave"><citetitle>imagesave</citetitle></link>,
                <link linkend="imageload"><citetitle>imageload</citetitle></link> and
                <link linkend="imagefree"><citetitle>imagefree</citetitle></link>: New image file processing opcodes by Cesare Marilungo to read/write png images from Csound.
              </simpara>
            </listitem>
            <listitem>
              <simpara><link linkend="pvsbandp"><citetitle>pvsbandp</citetitle></link> and <link linkend="pvsbandr"><citetitle>pvsbandr</citetitle></link> by John ffitch, which perform band-pass and band-reject filtering in the spectral domain on a pvs signal.</simpara>
            </listitem>
            <listitem><simpara>New HRTF opcodes by Brian Carty:<link linkend="hrtfmove"><citetitle>hrtfmove</citetitle></link>, <link linkend="hrtfmove2"><citetitle>hrtfmove2</citetitle></link> and <link linkend="hrtfstat"><citetitle>hrtfstat</citetitle></link>.</simpara>
            </listitem>
            <listitem><simpara>New waveshaping opcodes: <link linkend="powershape"><citetitle>powershape</citetitle></link>,
              <link linkend="polynomial"><citetitle>polynomial</citetitle></link>,
              <link linkend="chebyshevpoly"><citetitle>chebyshevpoly</citetitle></link>,
              <link linkend="pdclip"><citetitle>pdclip</citetitle></link>,
              <link linkend="pdhalf"><citetitle>pdhalf</citetitle></link>,
              <link linkend="pdhalfy"><citetitle>pdhalfy</citetitle></link>, and
              <link linkend="syncphasor"><citetitle>syncphasor</citetitle></link></simpara>
            </listitem>
            <listitem><simpara>New jack transport control opcode: <link linkend="jacktransport"><citetitle>jacktransport</citetitle></link></simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          New functionality
          <itemizedlist>
            <listitem>
              <simpara>Added <link linkend="FlagsMinusCsdLineNums"><citetitle>--csd-line-nums=</citetitle></link> command line option to select mode for error line reporting.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                New "no-carry" operator (<link linkend="ScoreCarry"><citetitle>!</citetitle></link> ) for score language that prevents implicit carrying of p-fields in i-statements.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                Added <link linkend="FlagsMinusSyntaxCheckOnly"><citetitle>--syntax-check-only</citetitle></link> commandline flag (exclusive with <link linkend="FlagsMinusUpperI"><citetitle>--i-only</citetitle></link>)
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                <emphasis>&lt;CsLicence&gt;</emphasis> tag for <link linkend="CommandUnifileDescription"><citetitle>CSDs</citetitle></link>. <emphasis>&lt;CsLicense&gt;</emphasis> is accepted as an alternative to <emphasis>&lt;CsLicence&gt;</emphasis>.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>Bug fixes and improvements:
          <itemizedlist>
            <listitem>
              <simpara>
              Changed order of outputs for <link linkend="hilbert"><citetitle>hilbert</citetitle></link>. This change breaks compatibility with previous versions, but fixes the opcode and now works as documented.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
              Messages about loading opcode plugins modified so can be suppressed with message level flag.
              </simpara>
            </listitem>
            <listitem>
              <simpara>Major changes to score error reporting; now accurately reports the line numbers for the chain of inputs for most errors.</simpara>
            </listitem>
            <listitem>
              <simpara>Corrected <link linkend="pan2"><citetitle>pan2</citetitle></link> so it agrees with documentation.</simpara>
            </listitem>
            <listitem>
              <simpara>
                <link linkend="CommandUnifileDescription"><citetitle>&lt;CsVersion&gt;</citetitle></link> tag works again according to the manual.</simpara>
            </listitem>
            <listitem>
              <simpara>
                Fixed the { and } score looping statements. Added missing documentation for them and ~, &amp;, |, and # operators in score expressions.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                <link linkend="hilbert"><citetitle>hilbert</citetitle></link> had its outputs reversed, now correct. Manual example updated.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
          Internal Changes:
          <itemizedlist>
            <listitem>
              <simpara>Change to gettext localisation; French and Columbian-Spanish translations available.</simpara>
            </listitem>
            <listitem>
              <simpara>
                Internal changes to <link linkend="partikkel"><citetitle>partikkel</citetitle></link>, interpolation of waveform read and windowing, allowing more precise pitch synchronous granular synthesis. Updated examples for <link linkend="partikkel"><citetitle>partikkel</citetitle></link>.
              </simpara>
            </listitem>
            <listitem>
              <simpara>
                <link linkend="pvscale"><citetitle>pvscale</citetitle></link>: Improved algorithm for SDFT case so no ampltitude variation.
              </simpara>
            </listitem>
          </itemizedlist>
        </para>
      </listitem>
    </itemizedlist>
  </para>
  <bridgehead>New in Version 5.07 (October 2007)</bridgehead>
    <para>
      <itemizedlist>
        <listitem>
          <para>New opcodes:
            <itemizedlist>
              <listitem>
                <simpara><link linkend="pan2"><citetitle>pan2</citetitle></link>: a stereo panning opcode</simpara>
              </listitem>
              <listitem>
                <simpara><link linkend="cpsmidinn"><citetitle>cpsmidinn</citetitle></link>, <link linkend="pchmidinn"><citetitle>pchmidinn</citetitle></link>, <link linkend="octmidinn"><citetitle>octmidinn</citetitle></link>: converters for MIDI note numbers</simpara>
              </listitem>
              <listitem>
                <simpara><link linkend="fluidSetInterpMethod"><citetitle>fluidSetInterpMethod</citetitle></link>: interpolation in fluid sound fonts</simpara>
              </listitem>
              <listitem>
                <simpara><link linkend="sflooper"><citetitle>sflooper</citetitle></link>: a soundfont version of <link linkend="flooper2"><citetitle>flooper2</citetitle></link></simpara>
              </listitem>
              <listitem>
                <simpara><link linkend="pvsbuffer"><citetitle>pvsbuffer</citetitle></link> and <link linkend="pvsbufread"><citetitle>pvsbufread</citetitle></link>: buffering/reading of fsigs for delays/timescale changes.</simpara>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>
            New functionality
            <itemizedlist>
              <listitem>
                <para>SDFT - the Sliding Discrete Fourier Transform -- added seamlessly to <link linkend="pvsanal"><citetitle>pvsanal</citetitle></link>, etc opcodes if the overlap is less than the ksmps or less than 10. Some pvsXXX opcodes extended to take a-rate parameters when sliding.
                </para>
              </listitem>
              <listitem>
                <para>New feature (<link linkend="FlagsCatMinusUpperO"><citetitle>-O null</citetitle></link> / <link linkend="FlagsCatMinusUpperO"><citetitle>--logfile=null</citetitle></link>) that disables all messages and printing to the console.
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>Bug fixes and improvements:
            <itemizedlist>
              <listitem>
                <simpara><link linkend="partikkel"><citetitle>partikkel</citetitle></link> -- particle synthesis had an inadvertent bug, now fixed.</simpara>
              </listitem>
              <listitem>
                <simpara>Closing of MIDI input on Windows(MM) failed; now fixed</simpara>
              </listitem>
              <listitem>
                <simpara><link linkend="fluidEngine"><citetitle>fluidEngine</citetitle></link> opcode now takes optional number of channels (range 16-256, default to 256) and polyphony (range 16-4096, default to 4096) to use.</simpara>
              </listitem>
              <listitem>
                <simpara><link linkend="UtilityAtsa"><citetitle>atsa</citetitle></link> utility safer when given silence.</simpara>
              </listitem>
              <listitem>
                <simpara><link linkend="ATSaddnz"><citetitle>ATSaddnz</citetitle></link>: improved checking.</simpara>
              </listitem>
              <listitem>
                <simpara>Ambisonics (<link linkend="bformdec"><citetitle>bformdec</citetitle></link>, <link linkend="bformenc"><citetitle>bformenc</citetitle></link>) has more options for controlled opposites.</simpara>
              </listitem>
              <listitem>
                <simpara>Bug in <link linkend="turnoff2"><citetitle>turnoff2</citetitle></link> fixed.</simpara>
              </listitem>
              <listitem>
                <simpara><link linkend="het_export"><citetitle>het_export</citetitle></link>: invalid check caused export to fail.</simpara>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>
            Internal Changes:
            <itemizedlist>
              <listitem>
                <simpara>Improved Windows installer.</simpara>
              </listitem>
              <listitem>
                <simpara>CsoundVST replaced by CsoundAC, that does not depend on the VST SDK headers.</simpara>
              </listitem>
              <listitem>
                <simpara>Less messages in Windows(MM) startup.</simpara>
              </listitem>
              <listitem>
                <simpara>P argument type added (k-rate defaults to 1) for opcode in and out types.</simpara>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
      </itemizedlist>
    </para>
  <bridgehead>New in Version 5.06 (June 2007)</bridgehead>
  <para>
    <itemizedlist>
      <listitem>
        <para>New granular opcodes:
          <link linkend="partikkel"><citetitle>partikkel</citetitle></link>,
          <link linkend="partikkelsync"><citetitle>partikkelsync</citetitle></link> and
          <link linkend="diskgrain"><citetitle>diskgrain</citetitle></link>.
        </para>
      </listitem>
      <listitem>
        <para>New opcode for event dispatch:
          <link linkend="scoreline"><citetitle>scoreline</citetitle></link>.
        </para>
      </listitem>
      <listitem>
        <para>
          Many new opcodes from Gabriel Maldonado's CsoundAV:
          <link linkend="hvs1"><citetitle>hvs1</citetitle></link>,
          <link linkend="hvs2"><citetitle>hvs2</citetitle></link>,
          <link linkend="hvs3"><citetitle>hvs3</citetitle></link>,
          <link linkend="vphaseseg"><citetitle>vphaseseg</citetitle></link>,
          <link linkend="inrg"><citetitle>inrg</citetitle></link>,
          <link linkend="outrg"><citetitle>outrg</citetitle></link>,
          <link linkend="lposcila"><citetitle>lposcila</citetitle></link>,
          <link linkend="lposcilsa"><citetitle>lposcilsa</citetitle></link>,
          <link linkend="lposcilsa2"><citetitle>lposcilsa2</citetitle></link>,
          <link linkend="tabmorph"><citetitle>tabmorph</citetitle></link>,
          <link linkend="tabmorpha"><citetitle>tabmorpha</citetitle></link>,
          <link linkend="tabmorphi"><citetitle>tabmorphi</citetitle></link>,
          <link linkend="tabmorphak"><citetitle>tabmorphak</citetitle></link>,
          <link linkend="trandom"><citetitle>trandom</citetitle></link>,
          <link linkend="vtable1k"><citetitle>vtable1k</citetitle></link>,
          <link linkend="slider8table"><citetitle>slider8table</citetitle></link>,
          <link linkend="slider16table"><citetitle>slider16table</citetitle></link>,
          <link linkend="slider32table"><citetitle>slider32table</citetitle></link>,
          <link linkend="slider64table"><citetitle>slider64table</citetitle></link>,
          <link linkend="slider8tablef"><citetitle>slider8tablef</citetitle></link>,
          <link linkend="slider16tablef"><citetitle>slider16tablef</citetitle></link>,
          <link linkend="slider32tablef"><citetitle>slider32tablef</citetitle></link>,
          <link linkend="slider64tablef"><citetitle>slider64tablef</citetitle></link>,
          <link linkend="sliderKawai"><citetitle>sliderKawai</citetitle></link>
          and the a-rate version of
          <link linkend="ctrl7"><citetitle>ctrl7</citetitle></link>.
        </para>
      </listitem>
      <listitem>
        <para>
          Also from CsoundAV, many new FLTK widget opcodes:
          <link linkend="FLkeyIn"><citetitle>FLkeyIn</citetitle></link>,
          <link linkend="FLslidBnk2"><citetitle>FLslidBnk2</citetitle></link>,
          <link linkend="FLvslidBnk"><citetitle>FLvslidBnk</citetitle></link>,
          <link linkend="FLvslidBnk2"><citetitle>FLvslidBnk2</citetitle></link>,
          <link linkend="FLmouse"><citetitle>FLmouse</citetitle></link>,
          <link linkend="FLxyin"><citetitle>FLxyin</citetitle></link>,
          <link linkend="FLhvsBox"><citetitle>FLhvsBox</citetitle></link>,
          <link linkend="FLslidBnkSet"><citetitle>FLslidBnkSet</citetitle></link>,
          <link linkend="FLslidBnkSetk"><citetitle>FLslidBnkSetk</citetitle></link>,
          <link linkend="FLslidBnk2Set"><citetitle>FLslidBnk2Set</citetitle></link>,
          <link linkend="FLslidBnk2Setk"><citetitle>FLslidBnk2Setk</citetitle></link>,
          <link linkend="FLslidBnkGetHandle"><citetitle>FLslidBnkGetHandle</citetitle></link>,
        </para>
      </listitem>
      <listitem>
        <para>
          New pvs opcodes:
          <link linkend="pvsdiskin"><citetitle>pvsdiskin</citetitle></link>,
          <link linkend="pvsmorph"><citetitle>pvsmorph</citetitle></link>,
        </para>
      </listitem>
      <listitem>
        <para><link linkend="eqfil"><citetitle>eqfil</citetitle></link>
        </para>
      </listitem>
      <listitem>
        <para>New command line options (<link linkend="FlagsCatMinusLowerMW"><citetitle>--m-warnings</citetitle></link>)to control messages
        </para>
      </listitem>
      <listitem>
        <para>
          csladspa: a CSD to LADSPA plugin kit.
        </para>
      </listitem>
      <listitem>
        <para>
          And many bug fixes including (but not limited to): fixed k-rate version of <link linkend="system"><citetitle>system</citetitle></link>; fixed scaling problems of <link linkend="vrandh"><citetitle>vrandh</citetitle></link> and <link linkend="vrandi"><citetitle>vrandi</citetitle></link>; fixed ocasional failure of <link linkend="turnoff"><citetitle>turnoff</citetitle></link>; fixed  <link linkend="tempest"><citetitle/></link> OS X bug; fixed <link linkend="ATScross"><citetitle>ATScross</citetitle></link> and fixed <link linkend="modulus"><citetitle>mod</citetitle></link>.
        </para>
        <para>Csound5GUI now works properly on all platforms and csoundapi~ (pd object) has been updated.
        </para>
      </listitem>
    </itemizedlist>
  </para>
</section>
