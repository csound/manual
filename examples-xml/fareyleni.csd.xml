<?xml version="1.0" encoding="UTF-8"?>
<programlisting xmlns="http://docbook.org/ns/docbook" version="5.0">
<emphasis role="csdtag">&lt;CsoundSynthesizer&gt;</emphasis>
<emphasis role="csdtag">&lt;CsOptions&gt;</emphasis>
<emphasis role="comment">; Select audio/midi flags here according to platform</emphasis>
-odac     <emphasis role="comment">;;;realtime audio out</emphasis>
<emphasis role="comment">;-iadc    ;;;uncomment -iadc for RT audio input as well </emphasis>
<emphasis role="comment">; For Non-realtime ouput leave only the line below:</emphasis>
<emphasis role="comment">; -o fareyleni.wav -W ;;; for file output any platform</emphasis>
<emphasis role="csdtag">&lt;/CsOptions&gt;</emphasis>
<emphasis role="csdtag">&lt;CsInstruments&gt;</emphasis>

<emphasis role="ohdr">sr</emphasis> <emphasis role="op">=</emphasis> 44100
<emphasis role="ohdr">ksmps</emphasis> <emphasis role="op">=</emphasis> 32
<emphasis role="ohdr">nchnls</emphasis> <emphasis role="op">=</emphasis> 2
<emphasis role="ohdr">0dbfs</emphasis>  <emphasis role="op">=</emphasis> 1

      <emphasis role="comment">; initialise integer n for Farey Sequence F_8</emphasis>
      gifarn <emphasis role="opc">init</emphasis> 8	

      <emphasis role="comment">; calculate length of F_8, it should return 23 for |F_8|</emphasis>
      gires <emphasis role="opc">fareyleni</emphasis> gifarn  

      <emphasis role="comment">; convert to negative number for the GEN routine because</emphasis>
      <emphasis role="comment">; the table length won't be a power of 2 </emphasis>
      <emphasis role="comment">; (The length of a Farey Sequence of n &gt; 1 is always an odd number)</emphasis>
      gilen <emphasis role="opc">init</emphasis> gires <emphasis role="op">*</emphasis> <emphasis role="op">-</emphasis>1 
      	   	       	               
      <emphasis role="comment">; create F_8 with GENfarey, the negative table number prevents </emphasis>
      <emphasis role="comment">; unnecessary normalisation (F_8 IS already normalised)</emphasis>
      <emphasis role="comment">; 	         	    n  	   mode: </emphasis>
      gifarey <emphasis role="ohdr">ftgen</emphasis> 100, 0, gilen, "farey", gifarn, 4
      <emphasis role="comment">; if mode=4 then 1 is added to each element of F_n.</emphasis>
      <emphasis role="comment">; Useful for creating just tuning tables that can be read by the cps2pch opcode.</emphasis>

<emphasis role="oblock">instr</emphasis> 1
      <emphasis role="comment">; the very last element of F_n is not needed in the case of tuning tables</emphasis>
      ires <emphasis role="op">=</emphasis> gires <emphasis role="op">-</emphasis> 1 
      <emphasis role="comment">; read out and print to file</emphasis>
      kndx <emphasis role="opc">init</emphasis> 0 
      <emphasis role="octrl">if</emphasis> (kndx <emphasis role="op">&lt;</emphasis> ires) then    
      	 kelem <emphasis role="opc">tab</emphasis> kndx, gifarey
      	 <emphasis role="opc">fprintks</emphasis> "farey8_tuning.txt", "<emphasis role="op">%</emphasis>2.6f\\n", kelem
      	 kndx <emphasis role="op">=</emphasis> kndx<emphasis role="op">+</emphasis>1
      <emphasis role="octrl">endif</emphasis>
      
<emphasis role="oblock">endin</emphasis>

<emphasis role="oblock">instr</emphasis> 2

ip   <emphasis role="opc">cps2pch</emphasis> p4, <emphasis role="op">-</emphasis>100
asig <emphasis role="opc">poscil</emphasis> .5, ip, 1
aenv <emphasis role="opc">linseg</emphasis> 0, 0.1, 1, p3<emphasis role="op">-</emphasis>0.2, 1, 0.1, 0
     <emphasis role="opc">outs</emphasis> asig <emphasis role="op">*</emphasis> aenv, asig <emphasis role="op">*</emphasis> aenv

<emphasis role="oblock">endin</emphasis>
<emphasis role="csdtag">&lt;/CsInstruments&gt;</emphasis>
<emphasis role="csdtag">&lt;CsScore&gt;</emphasis>
<emphasis role="stamnt">f</emphasis>1 0 8192 10 1	<emphasis role="comment">;sine wave</emphasis>

<emphasis role="stamnt">i</emphasis>1	0     .1

<emphasis role="stamnt">i</emphasis>2	1	.5	8.00
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	.	&gt;
<emphasis role="stamnt">i</emphasis>2	+	1	8.22


<emphasis role="stamnt">e</emphasis>
<emphasis role="csdtag">&lt;/CsScore&gt;</emphasis>
<emphasis role="csdtag">&lt;/CsoundSynthesizer&gt;</emphasis>
</programlisting>
