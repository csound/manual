<?xml version="1.0" encoding="UTF-8"?>
<programlisting xmlns="http://docbook.org/ns/docbook" version="5.0">
<emphasis role="csdtag">&lt;CsoundSynthesizer&gt;</emphasis>
<emphasis role="csdtag">&lt;CsOptions&gt;</emphasis>
<emphasis role="comment">; Select audio/midi flags here according to platform</emphasis>
<emphasis role="comment">; Audio out   Audio in    No messages</emphasis>
-odac           -iadc     -d     <emphasis role="comment">;;;RT audio I/O</emphasis>
<emphasis role="comment">; For Non-realtime ouput leave only the line below:</emphasis>
<emphasis role="comment">; -o zkmod.wav -W ;;; for file output any platform</emphasis>
<emphasis role="csdtag">&lt;/CsOptions&gt;</emphasis>
<emphasis role="csdtag">&lt;CsInstruments&gt;</emphasis>

<emphasis role="comment">; Initialize the global variables.</emphasis>
<emphasis role="ohdr">sr</emphasis> <emphasis role="op">=</emphasis> 44100
<emphasis role="ohdr">kr</emphasis> <emphasis role="op">=</emphasis> 4410
<emphasis role="ohdr">ksmps</emphasis> <emphasis role="op">=</emphasis> 10
<emphasis role="ohdr">nchnls</emphasis> <emphasis role="op">=</emphasis> 2

<emphasis role="comment">; Initialize the ZAK space.</emphasis>
<emphasis role="comment">; Create 2 a-rate variables and 2 k-rate variables.</emphasis>
<emphasis role="opc">zakinit</emphasis> 2, 2

<emphasis role="comment">; Instrument #1 -- a signal with jitter.</emphasis>
<emphasis role="oblock">instr</emphasis> 1
  <emphasis role="comment">; Generate a k-rate signal goes from 30 to 2,000.</emphasis>
  kline <emphasis role="opc">line</emphasis> 30, p3, 2000

  <emphasis role="comment">; Add the signal into zk variable #1.</emphasis>
  <emphasis role="opc">zkw</emphasis> kline, 1
<emphasis role="oblock">endin</emphasis>

<emphasis role="comment">; Instrument #2 -- generates audio output.</emphasis>
<emphasis role="oblock">instr</emphasis> 2
  <emphasis role="comment">; Create a k-rate signal modulated the jitter opcode.</emphasis>
  kamp <emphasis role="opc">init</emphasis> 20
  kcpsmin <emphasis role="opc">init</emphasis> 40
  kcpsmax <emphasis role="opc">init</emphasis> 60
  kjtr <emphasis role="opc">jitter</emphasis> kamp, kcpsmin, kcpsmax
  
  <emphasis role="comment">; Get the frequency values from zk variable #1.</emphasis>
  kfreq <emphasis role="opc">zkr</emphasis> 1
  <emphasis role="comment">; Add the the frequency values in zk variable #1 to </emphasis>
  <emphasis role="comment">; the jitter signal.</emphasis>
  kjfreq <emphasis role="opc">zkmod</emphasis> kjtr, 1

  <emphasis role="comment">; Use a simple sine waveform for the left speaker.</emphasis>
  aleft <emphasis role="opc">oscil</emphasis> 20000, kfreq, 1
  <emphasis role="comment">; Use a sine waveform with jitter for the right speaker.</emphasis>
  aright <emphasis role="opc">oscil</emphasis> 20000, kjfreq, 1

  <emphasis role="comment">; Generate the audio output.</emphasis>
  <emphasis role="opc">outs</emphasis> aleft, aright

  <emphasis role="comment">; Clear the zk variables, prepare them for </emphasis>
  <emphasis role="comment">; another pass.</emphasis>
  <emphasis role="opc">zkcl</emphasis> 0, 2
<emphasis role="oblock">endin</emphasis>


<emphasis role="csdtag">&lt;/CsInstruments&gt;</emphasis>
<emphasis role="csdtag">&lt;CsScore&gt;</emphasis>

<emphasis role="comment">; Table #1, a sine wave.</emphasis>
<emphasis role="stamnt">f</emphasis> 1 0 16384 10 1

<emphasis role="comment">; Play Instrument #1 for 2 seconds.</emphasis>
<emphasis role="stamnt">i</emphasis> 1 0 2
<emphasis role="comment">; Play Instrument #2 for 2 seconds.</emphasis>
<emphasis role="stamnt">i</emphasis> 2 0 2
<emphasis role="stamnt">e</emphasis>


<emphasis role="csdtag">&lt;/CsScore&gt;</emphasis>
<emphasis role="csdtag">&lt;/CsoundSynthesizer&gt;</emphasis>
</programlisting>
