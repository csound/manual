<?xml version="1.0" encoding="UTF-8"?>
<programlisting xmlns="http://docbook.org/ns/docbook" version="5.0">
<emphasis role="csdtag">&lt;CsoundSynthesizer&gt;</emphasis>
<emphasis role="csdtag">&lt;CsOptions&gt;</emphasis>
<emphasis role="comment">; Select audio/midi flags here according to platform</emphasis>
<emphasis role="comment">; Audio out   Audio in    No messages</emphasis>
-odac           -iadc     -d     <emphasis role="comment">;;;RT audio I/O</emphasis>
<emphasis role="comment">; For Non-realtime ouput leave only the line below:</emphasis>
<emphasis role="comment">; -o 0dbfs.wav -W ;;; for file output any platform</emphasis>
<emphasis role="csdtag">&lt;/CsOptions&gt;</emphasis>
<emphasis role="csdtag">&lt;CsInstruments&gt;</emphasis>

<emphasis role="ohdr">sr</emphasis> <emphasis role="op">=</emphasis> 44100
<emphasis role="ohdr">kr</emphasis> <emphasis role="op">=</emphasis> 4410
<emphasis role="ohdr">nchnls</emphasis> <emphasis role="op">=</emphasis> 1
<emphasis role="ohdr">0dbfs</emphasis> <emphasis role="op">=</emphasis> 1

<emphasis role="opc">zakinit</emphasis> 3,1

<emphasis role="oblock">instr</emphasis> 1 <emphasis role="comment">; wavelet synth instrument</emphasis>
iamp  <emphasis role="op">=</emphasis>	 p4<emphasis role="comment">; scaling factor of wavelets</emphasis>
ifreq <emphasis role="op">=</emphasis>	 p5<emphasis role="comment">; frequency of wavelets</emphasis>
itab  <emphasis role="op">=</emphasis>	 p6<emphasis role="comment">; selected wavelet function</emphasis>
inum  <emphasis role="op">=</emphasis>  p7<emphasis role="comment">; number of wavelets to be created</emphasis>
a1 <emphasis role="opc">osciln</emphasis> p4, p5, p6, p7 
<emphasis role="opc">out</emphasis> a1
<emphasis role="oblock">endin</emphasis>

<emphasis role="oblock">instr</emphasis> 2 <emphasis role="comment">; wavelet analysis intrument </emphasis>
a1 <emphasis role="opc">soundin</emphasis> "fox.wav"
<emphasis role="comment">; Decomposition Structure:</emphasis>
<emphasis role="comment">;     1 LEVEL  2 LEVEL</emphasis>
<emphasis role="comment">;     HP-&gt;ah1  </emphasis>
<emphasis role="comment">; a1-&gt;|	       HP(up2)-&gt;ah2</emphasis>
<emphasis role="comment">;     LP-&gt;al1-&gt;|</emphasis>
<emphasis role="comment">;	       LP(up2)-&gt;al2</emphasis>
<emphasis role="comment">;</emphasis>
ain <emphasis role="op">=</emphasis> a1<emphasis role="op">*</emphasis>.5<emphasis role="comment">; attenuate input signal</emphasis>
	   <emphasis role="comment">; since wavelet coefficients</emphasis>
	   <emphasis role="comment">; could reach big values  </emphasis>
ah1 <emphasis role="opc">dconv</emphasis> ain,ftlen(8),8
al1 <emphasis role="opc">dconv</emphasis> ain,ftlen(7),7
ah2 <emphasis role="opc">dconv</emphasis> al1,ftlen(10),10
al2 <emphasis role="opc">dconv</emphasis> al1,ftlen(9),9

<emphasis role="opc">zaw</emphasis> ah1,0
<emphasis role="opc">zaw</emphasis> al1,1
<emphasis role="opc">zaw</emphasis> ah2,2
<emphasis role="opc">zaw</emphasis> al2,3

aout <emphasis role="opc">zar</emphasis> p4
<emphasis role="opc">out</emphasis> aout
<emphasis role="opc">zacl</emphasis> 0,3
<emphasis role="oblock">endin</emphasis>

<emphasis role="csdtag">&lt;/CsInstruments&gt;</emphasis>
<emphasis role="csdtag">&lt;CsScore&gt;</emphasis>

<emphasis role="comment">; First of all, we need several FIR filters which are capable </emphasis>
<emphasis role="comment">; to produce wavelet families.</emphasis>
<emphasis role="comment">; One can input filter coefficients manualy using GEN02 </emphasis>
<emphasis role="comment">; or read them from text file.</emphasis>
<emphasis role="comment">; Most of compact-supported wavelet coefficients can be obtained from</emphasis>
<emphasis role="comment">; Wavelet Browser by PyWavelets wavelets.pybytes.com</emphasis>
<emphasis role="comment">; You can select family and order of filter</emphasis>
<emphasis role="comment">; then copy desired coefficients into txt file.</emphasis>
<emphasis role="comment">; Notice that for correct interpretation of results you should use</emphasis>
<emphasis role="comment">; coeffs of Decomposition low-pass filter.</emphasis>

<emphasis role="comment">; Daubechies 2 </emphasis>
<emphasis role="stamnt">f</emphasis> 1 0 4 -2 -0.1294095226 0.2241438680 0.8365163037 0.4829629131
<emphasis role="comment">; Symlet 10</emphasis>
<emphasis role="stamnt">f</emphasis> 2 0 0 -23 "sym10.txt"

<emphasis role="comment">; Now we want to produce some wavelet granules.</emphasis>
<emphasis role="comment">; They can be used in wavelet synthesis etc.</emphasis>
<emphasis role="comment">; Tables of large sizes should produce smoother wavelets.</emphasis>
<emphasis role="comment">; We take array of filter coefficients from ftable 1</emphasis>
<emphasis role="comment">; and deconvolve it until output length of 16384.</emphasis>
<emphasis role="comment">; The order of filters through the deconvolution process</emphasis>
<emphasis role="comment">; is given by 14 which is 1110 in binary.</emphasis>
<emphasis role="comment">; So the first filter is LP ('0') and others are HP ('1').</emphasis>
<emphasis role="stamnt">f</emphasis> 3 0 16384 "wave" 1 14 0
<emphasis role="stamnt">f</emphasis> 4 0 16384 "wave" 2 1  0
<emphasis role="stamnt">f</emphasis> 5 0 16384 "wave" 2 7  0
<emphasis role="stamnt">f</emphasis> 6 0 16384 "wave" 2 6  0
<emphasis role="comment">; The main purpose of using wavelets is wavelet transform.</emphasis>
<emphasis role="comment">; It is not that easy to perform a classic DWT in Csound since downsampling</emphasis>
<emphasis role="comment">; of audio signal is needed at each step of wavelet decomposition.</emphasis>
<emphasis role="comment">; Anyway, using GENwave it is possible to create a number of upsampled</emphasis>
<emphasis role="comment">; wavelets and perform a so-called undecimated wavelet transform </emphasis>
<emphasis role="comment">; aka stationary wavelet transform (and it is even better).</emphasis>
<emphasis role="comment">; So we need some upsampled childs of mother wavelet. </emphasis>
<emphasis role="stamnt">f</emphasis> 7 0 16 "wave" 1 0 -1 <emphasis role="comment">;db2 scaling function for 1st iteration</emphasis>
<emphasis role="stamnt">f</emphasis> 8 0 16 "wave" 1 1 -1 <emphasis role="comment">;db2 wavelet function for 1st iteration</emphasis>
<emphasis role="stamnt">f</emphasis> 9 0 32 "wave" 1 0 -1 <emphasis role="comment">;db2 scaling function for 2nd iteration</emphasis>
<emphasis role="stamnt">f</emphasis> 10 0 32 "wave" 1 1 -1 <emphasis role="comment">;db2 wavelet function for 2nd iteration</emphasis>

<emphasis role="comment">; Let's hear how some wavelets could sound..</emphasis>
<emphasis role="comment">;		 amp frq wave	 times</emphasis>
<emphasis role="stamnt">i</emphasis> 1 0	 1	 0.6 15	 3	 8
<emphasis role="stamnt">i</emphasis> 1 0.5	 .	 0.9 20  4	 5
<emphasis role="stamnt">i</emphasis> 1 0.9  .	 0.7 8	 5	 .
<emphasis role="stamnt">i</emphasis> 1 1.1	 .	 0.4 30  6	 9

<emphasis role="comment">; Now try to decompose input file using wavelets</emphasis>
<emphasis role="stamnt">i</emphasis> 2 2 4  1<emphasis role="comment">; approximation 1st level</emphasis>
<emphasis role="stamnt">i</emphasis> 2 5 .  2<emphasis role="comment">; details 2nd level</emphasis>
<emphasis role="csdtag">&lt;/CsScore&gt;</emphasis>
<emphasis role="csdtag">&lt;/CsoundSynthesizer&gt;</emphasis>
</programlisting>
