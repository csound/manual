<?xml version="1.0" encoding="UTF-8"?>
<programlisting xmlns="http://docbook.org/ns/docbook" version="5.0">
<emphasis role="csdtag">&lt;CsoundSynthesizer&gt;</emphasis>
<emphasis role="csdtag">&lt;CsOptions&gt;</emphasis>
-n -m128 <emphasis role="comment">;no sound output, reduced messages</emphasis>
<emphasis role="csdtag">&lt;/CsOptions&gt;</emphasis>
<emphasis role="csdtag">&lt;CsInstruments&gt;</emphasis>
<emphasis role="comment">;example by joachim heintz</emphasis>
<emphasis role="ohdr">sr</emphasis> <emphasis role="op">=</emphasis> 44100
<emphasis role="ohdr">ksmps</emphasis> <emphasis role="op">=</emphasis> 32
<emphasis role="ohdr">nchnls</emphasis> <emphasis role="op">=</emphasis> 1
<emphasis role="ohdr">0dbfs</emphasis> <emphasis role="op">=</emphasis> 1

  <emphasis role="oblock">instr</emphasis> 1 <emphasis role="comment">;simple example</emphasis>
kArr[]  <emphasis role="opc">fillarray</emphasis> 1, 2, 3, 4 <emphasis role="comment">;fill array manually</emphasis>
        <emphasis role="opc">printks</emphasis> "Length of kArr <emphasis role="op">=</emphasis> <emphasis role="op">%</emphasis>d\n\n", 0, <emphasis role="opc">lenarray</emphasis>(kArr) <emphasis role="comment">;print out its length</emphasis>
        <emphasis role="opc">turnoff</emphasis> <emphasis role="comment">;only do this in the first k-cycle</emphasis>
  <emphasis role="oblock">endin</emphasis>

  <emphasis role="oblock">instr</emphasis> 2 <emphasis role="comment">;random array length</emphasis>
iNumEls <emphasis role="opc">random</emphasis>  1, 11 <emphasis role="comment">;create random number between 1 and 10</emphasis>
kArr[]  <emphasis role="opc">init</emphasis>    <emphasis role="opc">int</emphasis>(iNumEls) <emphasis role="comment">;create array of this length</emphasis>
        <emphasis role="opc">printks</emphasis> "Random length of kArr <emphasis role="op">=</emphasis> <emphasis role="op">%</emphasis>d\n", 0, <emphasis role="opc">lenarray</emphasis>(kArr) <emphasis role="comment">;print out</emphasis>
        <emphasis role="opc">turnoff</emphasis>
  <emphasis role="oblock">endin</emphasis>

  <emphasis role="oblock">instr</emphasis> 3 <emphasis role="comment">;fill random array length with random elements</emphasis>
iNumEls <emphasis role="opc">random</emphasis>  1, 11 <emphasis role="comment">;create random number between 1 and 10</emphasis>
kArr[]  <emphasis role="opc">init</emphasis>    <emphasis role="opc">int</emphasis>(iNumEls) <emphasis role="comment">;create array of this length</emphasis>
        <emphasis role="opc">printks</emphasis> "Random length of kArr <emphasis role="op">=</emphasis> <emphasis role="op">%</emphasis>d\n", 0, <emphasis role="opc">lenarray</emphasis>(kArr) <emphasis role="comment">;print out</emphasis>

<emphasis role="comment">;fill</emphasis>
kIndx   <emphasis role="op">=</emphasis>       0 <emphasis role="comment">;initialize index</emphasis>
  until kIndx <emphasis role="op">==</emphasis> <emphasis role="opc">lenarray</emphasis>(kArr) do
kArr[kIndx] <emphasis role="opc">rnd31</emphasis> 10, 0 <emphasis role="comment">;set element to random value -10...10</emphasis>
kIndx   <emphasis role="op">+</emphasis><emphasis role="op">=</emphasis>      1 <emphasis role="comment">;increase index</emphasis>
  od

<emphasis role="comment">;print</emphasis>
kIndx   <emphasis role="op">=</emphasis>       0 <emphasis role="comment">;initialize index</emphasis>
  until kIndx <emphasis role="op">==</emphasis> <emphasis role="opc">lenarray</emphasis>(kArr) do
<emphasis role="opc">printf</emphasis>("kArr[<emphasis role="op">%</emphasis>d] <emphasis role="op">=</emphasis> <emphasis role="op">%</emphasis>f\n", kIndx<emphasis role="op">+</emphasis>1, kIndx, kArr[kIndx])
kIndx   <emphasis role="op">+</emphasis><emphasis role="op">=</emphasis>      1 <emphasis role="comment">;increase index</emphasis>
  od

        <emphasis role="opc">turnoff</emphasis>
  <emphasis role="oblock">endin</emphasis>
<emphasis role="csdtag">&lt;/CsInstruments&gt;</emphasis>
<emphasis role="csdtag">&lt;CsScore&gt;</emphasis>
<emphasis role="stamnt">i</emphasis> 1 0 .1
<emphasis role="stamnt">i</emphasis> 2 0 .1 
<emphasis role="stamnt">i</emphasis> 2 0 .1
<emphasis role="stamnt">i</emphasis> 3 0 .1
<emphasis role="csdtag">&lt;/CsScore&gt;</emphasis>
<emphasis role="csdtag">&lt;/CsoundSynthesizer&gt;</emphasis>
</programlisting>
