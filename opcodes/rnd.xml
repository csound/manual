<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="rnd">
<indexterm id="IndexRnd"><primary>rnd</primary></indexterm>
  <refentryinfo><title>Mathematical Operations:Random Functions</title></refentryinfo>
  <refmeta>
    <refentrytitle>rnd</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>rnd</refname>
    <refpurpose>
      Returns a random number in a unipolar range at the rate given by the input argument.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      Returns a random number in a unipolar range at the rate given by the input argument.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <synopsis><command>rnd</command>(x) (init- or control-rate only)</synopsis>

    <para>
      Where the argument within the parentheses may be an expression. These value converters sample a global random sequence, but do not reference <emphasis>seed</emphasis>. The result can be a term in a further expression.
    </para>
  </refsect1>

  <refsect1>
    <title>Performance</title>
    <para>
      Returns a random number in the unipolar range 0 to <emphasis>x</emphasis>.
    </para>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the rnd opcode. It uses the file <ulink url="examples/rnd.csd"><citetitle>rnd.csd</citetitle></ulink>.

      <example>
        <title>Example of the rnd opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/rnd.csd.xml"/>
      </example>

      Its output should be:
      <screen>SECTION 1:
new alloc for instr 1:
instr 1:  irand = 9.735
new alloc for instr 1:
instr 1:  irand = 1.394
new alloc for instr 1:
instr 1:  irand = 7.695
midi channel 1 now using instr 1
B  0.000 ..  2.000 T  2.000 TT  2.000 M:  0.00000
new alloc for instr 2:
 i   2 time     2.10000:     5.25005
 i   2 time     2.20000:     6.22665
 i   2 time     2.30000:     9.69511
 i   2 time     2.40000:     7.16822
 i   2 time     2.50000:     9.45134
 i   2 time     2.60000:     1.34123
 i   2 time     2.70000:     2.09879
 i   2 time     2.80000:     2.36001
 i   2 time     2.90000:     0.03553</screen>
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para>
      <link linkend="birnd"><citetitle>birnd</citetitle></link>
    </para>
  </refsect1>

  <refsect1>
    <title>Credits</title>
    <para>
      <simplelist>
        <member>Author: Barry L.Â Vercoe</member>
        <member>MIT</member>
        <member>Cambridge, Massachussetts</member>
        <member>1997</member>
      </simplelist>
    </para>
  </refsect1>
</refentry>
