
<refentry id="kr">
<indexterm id="IndexKr"><primary>kr</primary></indexterm>
  <refentryinfo><title>Orchestra Syntax:Header</title></refentryinfo>
  <refmeta>
    <refentrytitle>kr</refentrytitle>
  </refmeta>



  <refnamediv>
    <refname>kr</refname>

    <refpurpose>
      Sets the control rate.
    </refpurpose>
  </refnamediv>
  
  <refsect1>
    <title>Description</title>
    <para> 
      These statements are global value <link
      linkend="assign"><citetitle>assignments</citetitle></link>, made
      at the beginning of an orchestra, before any instrument block is
      defined. Their function is to set certain <link
      linkend="VariableTypes"><citetitle>reserved symbol
      variables</citetitle></link> that are required for
      performance. Once set, these reserved symbols can be used in
      expressions anywhere in the orchestra. 
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <synopsis><command>kr</command> = iarg</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>kr</emphasis> = (optional) -- set control rate to <emphasis>iarg</emphasis> samples per second. The default value is 4410.
    </para>

    <para>
      In addition, any <link linkend="GlobalVariables"><citetitle>global variable</citetitle></link> can be initialized by an <emphasis>init-time assignment</emphasis> anywhere before the first <link linkend="instr"><citetitle>instr statement</citetitle></link>.  All of the above assignments are run as instrument 0 (i-pass only) at the start of real performance.
    </para>

    <para>
      Beginning with Csound version 3.46, <emphasis>kr</emphasis> can be omitted. Csound will use the default values, or calculate <emphasis>kr</emphasis> from defined <link linkend="ksmps"><citetitle>ksmps</citetitle></link> and <link linkend="sr"><citetitle>sr</citetitle></link>. It is usually better to just specify <link linkend="ksmps"><citetitle>ksmps</citetitle></link> and <link linkend="sr"><citetitle>sr</citetitle></link> and let csound calculate <emphasis>kr</emphasis>.
    </para>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      <informalexample>
        <programlisting>
<emphasis role="ohdr">sr</emphasis> <emphasis role="op">=</emphasis> 10000
<emphasis role="ohdr">kr</emphasis> <emphasis role="op">=</emphasis> 500
<emphasis role="ohdr">ksmps</emphasis> <emphasis role="op">=</emphasis> 20
gi1 <emphasis role="op">=</emphasis> <emphasis role="ohdr">sr</emphasis><emphasis role="op">/</emphasis>2.
ga <emphasis role="opc">init</emphasis> 0
itranspose <emphasis role="op">=</emphasis> <emphasis role="opc">octpch</emphasis>(.0l)</programlisting>
      </informalexample>
    </para>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the kr opcode. It uses the file <ulink url="examples/kr.csd"><citetitle>kr.csd</citetitle></ulink>.

      <example>
        <title>Example of the kr opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include href="examples-xml/kr.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para>
      <link linkend="ksmps"><citetitle>ksmps</citetitle></link>,
      <link linkend="nchnls"><citetitle>nchnls</citetitle></link>,
      <link linkend="nchnls_i"><citetitle>nchnls_i</citetitle></link>,
      <link linkend="sr"><citetitle>sr</citetitle></link>
    </para>
  </refsect1>
</refentry>
