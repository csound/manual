<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="randh">
<indexterm id="IndexRandh"><primary>randh</primary></indexterm>
  <refentryinfo><title>Signal Generators:Random (Noise) Generators</title></refentryinfo>
  <refmeta>
    <refentrytitle>randh</refentrytitle>
  </refmeta>


 
  <refnamediv>
    <refname>randh</refname>
    <refpurpose>
      Generates random numbers and holds them for a period of time.
          </refpurpose>
  </refnamediv>
 
  <refsect1>
    <title>Description</title>
    <para>
      Generates random numbers and holds them for a period of time.
    </para>
  </refsect1>
 
  <refsect1>
    <title>Syntax</title>
    <synopsis>ares <command>randh</command> xamp, xcps [, iseed] [, isize] [, ioffset]</synopsis>

    <synopsis>kres <command>randh</command> kamp, kcps [, iseed] [, isize] [, ioffset]</synopsis>
  </refsect1>
 
  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>iseed</emphasis> (optional, default=0.5) -- seed value for the recursive pseudo-random formula. A value between 0 and +1 will produce an initial output of <emphasis>kamp * iseed.</emphasis> A negative value will cause seed re-initialization to be skipped. A value greater than 1 will seed from system time, this is the best option to generate a different random sequence for each run.
    </para>

    <para>
      <emphasis>isize</emphasis> (optional, default=0) -- if zero, a 16 bit number is generated. If non-zero, a 31-bit random number is generated. Default is 0.
    </para>

    <para>
      <emphasis>ioffset</emphasis> (optional, default=0) -- a base value added to the random result. New in Csound version 4.03.
    </para>
  </refsect1>
 
  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>kamp, xamp</emphasis> -- range over which random numbers are distributed.
    </para>

    <para>
      <emphasis>kcps, xcps</emphasis> -- the frequency which new random numbers are generated.
    </para>

    <para>
      The internal pseudo-random formula produces values which are uniformly distributed over the range -<emphasis>kamp</emphasis> to +<emphasis>kamp</emphasis>. <emphasis>rand</emphasis> will thus generate uniform white noise with an R.M.S value of <emphasis>kamp / root 2</emphasis>.
    </para>

    <para>
      The remaining units produce band-limited noise: the <emphasis>kcps</emphasis> and <emphasis>xcps</emphasis> parameters permit the user to specify that new random numbers are to be generated at a rate less than the sampling or control frequencies. <emphasis>randh</emphasis> will hold each new number for the period of the specified cycle.
    </para>
  </refsect1>
 
  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the randh opcode. It uses the file <ulink url="examples/randh.csd"><citetitle>randh.csd</citetitle></ulink>.
      <example>
        <title>Example of the randh opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/randh.csd.xml"/>
      </example>
     </para>
              <para>
      The example will produce the following output:
      <screen>
 i1    50.00000
 i1    50.00305
 i1    97.68677
 i1   -44.25354
 i1   -61.56006
 i1   -75.91248
 i1    67.57202
 i1    12.83875
 i1     5.39551
 i1   -95.18738

WARNING: Seeding from current time 684387922

 i2   -13.81226
 i2   -16.49475
 i2    69.51904
 i2    35.04944
 i2    47.47925
 i2    63.25378
 i2   -59.61914
 i2    50.93079
 i2    -6.46362
 i2     5.89294
      </screen>
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para>
      <link linkend="rand"><citetitle>rand</citetitle></link>,
      <link linkend="randi"><citetitle>randi</citetitle></link>
    </para>
  </refsect1>

</refentry>
