<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="vtablewk">
<indexterm id="IndexVtablewk"><primary>vtablewk</primary></indexterm>
  <refentryinfo><title>Vectorial:Tables</title></refentryinfo>
  <refmeta>
    <refentrytitle>vtablewk</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>vtablewk</refname>
    <refpurpose>
      Write vectors (to tables -or arrays of vectors).
    </refpurpose>
  </refnamediv>
  
  <refsect1>
    <title>Description</title>
    <para>
      This opcode writes vectors to tables at k-rate.
    </para>
  </refsect1>
  
  <refsect1>
    <title>Syntax</title>
    <synopsis><command>vtablewk</command>  kndx, kfn, ixmode, kinarg1 [, kinarg2, kinarg3 , .... , kinargN ]</synopsis>
  </refsect1>
 
  <refsect1>
    <title>Initialization</title>
    <para><emphasis>ixmode</emphasis> -  index data mode. The default value is 0.</para>
    <para>            == 0 index is treated as a raw table location,</para>
    <para>            == 1 index is normalized (0 to 1).</para>
  </refsect1>
 
  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>kndx</emphasis> - Index into f-table, either a positive number range matching the table length (<emphasis>ixmode</emphasis> = 0) or a 0 to 1 range (<emphasis>ixmode</emphasis> != 0).
    </para>
    <para>
      <emphasis>kfn</emphasis> - table number
    </para>
    <para>
      <emphasis>kinarg1...kinargN</emphasis> - input vector elements
    </para> 
    <para>
      This opcode is useful in all cases in which one needs to write sets of values associated to unique indexes (for example, multi-channel samples, STFT bin frames, spectral formants, p-field based scores etc.). The number of elements of each vector (length of the vector) is determined by the number of optional arguments on the right (<emphasis>kinarg1</emphasis>, <emphasis>kinarg2</emphasis>, <emphasis>kinarg3</emphasis>, ....  <emphasis>kinargN</emphasis>).
    </para>
    <para>
      <command>vtablewk</command> allows also to switch the table number at k-rate (but this is possible only when vector frames of each used table have the same number of elements, otherwise unpredictable results could occurr), as well as to choose indexing style (raw or normalized, see  also <emphasis>ixmode</emphasis> argument of <emphasis>table</emphasis> opcode ).
    </para>
    <para>
      Notice that no wrap nor limit mode is implemented.  So, if  an index attempt to access to a zone not allocated by the table, Csound will probably crash. However this drawback can be easily avoided by using wrap or limit opcodes applied to indexes before using <emphasis>vtablewk</emphasis>, in order to correct eventual out-of-range values.
    </para>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the vtablewk opcode. It uses the files <ulink url="examples/vtablewk.csd"><citetitle>vtablewk.csd</citetitle></ulink>.
      <example>
        <title>Example of the vtablewk opcode.</title>
        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/vtablewk.csd.xml"/>
      </example>
    </para>
  </refsect1>
 
  <refsect1>
    <title>Credits</title>
    <para>Written by Gabriel Maldonado.</para>
    <para>Example written by Andres Cabrera.</para>
    <para>New in Csound 5 (Previously available only on CsoundAV)</para>
  </refsect1>
</refentry>
