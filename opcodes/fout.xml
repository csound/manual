<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="fout">
<indexterm id="IndexFout"><primary>fout</primary></indexterm>
  <refentryinfo><title>Signal I/O:File I/O</title></refentryinfo>
  <refmeta>
    <refentrytitle>fout</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>fout</refname>
    <refpurpose>
      Outputs a-rate signals to an arbitrary number of channels.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      <emphasis>fout</emphasis> outputs <emphasis>N</emphasis> a-rate signals to a specified file of <emphasis>N</emphasis> channels.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <synopsis><command>fout</command> ifilename, iformat, aout1 [, aout2, aout3,...,aoutN]</synopsis>
     <synopsis><command>fout</command> ifilename, iformat, array[]</synopsis>
 </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>ifilename</emphasis> -- the output file's name (in double-quotes).
    </para>

    <para>
      <emphasis>iformat</emphasis> -- a flag to choose output file format (note: Csound versions older than 5.0 may only support formats 0, 1, and 2):
      <itemizedlist>
        <listitem>
          <para>0 - 32-bit floating point samples without header (binary PCM multichannel file)</para>
        </listitem>

        <listitem>
          <para>1 - 16-bit integers without header (binary PCM multichannel file)</para>
        </listitem>

        <listitem>
          <para>2 - 16-bit integers with a header. The header type depends on the render (-o) format. For example, if the user chooses the AIFF format (using the <link linkend="FlagsMinusUpperA"><citetitle>-A flag</citetitle></link>), the header format will be AIFF type.</para>
        </listitem>

        <listitem>
          <para>3 - u-law samples with a header (see iformat=2).</para>
        </listitem>

        <listitem>
          <para>4 - 16-bit integers with a header (see iformat=2).</para>
        </listitem>

        <listitem>
          <para>5 - 32-bit integers with a header (see iformat=2).</para>
        </listitem>

        <listitem>
          <para>6 - 32-bit floats with a header (see iformat=2).</para>
        </listitem>

        <listitem>
          <para>7 - 8-bit unsigned integers with a header (see iformat=2).</para>
        </listitem>

        <listitem>
          <para>8 - 24-bit integers with a header (see iformat=2).</para>
        </listitem>

        <listitem>
          <para>9 - 64-bit floats with a header (see iformat=2).</para>
        </listitem>

      </itemizedlist>
      In addition, Csound versions 5.0 and later allow for explicitly selecting a particular header type by specifying the format as 10 * fileType + sampleFormat, where fileType may be 1 for WAV, 2 for AIFF, 3 for raw (headerless) files, and 4 for IRCAM; sampleFormat is one of the above values in the range 0 to 9, except sample format 0 is taken from the command line (-o), format 1 is 8-bit signed integers, and format 2 is a-law. So, for example, iformat=25 means 32-bit integers with AIFF header.
    </para>
  </refsect1>

  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>aout1,... aoutN</emphasis> -- signals to be written to the file. In the case of raw files, the expected range of audio signals is determined by the selected sample format; for sound files with a header like WAV and AIFF, the audio signals should be in the range -0dbfs to 0dbfs.
    </para>

    <para>
      <emphasis>fout</emphasis> (file output) writes samples of audio signals to a file with any number of channels. Channel number depends by the number of <emphasis>aoutN</emphasis> variables (i.e. a mono signal with only an a-rate argument, a stereo signal with two a-rate arguments etc.) Maximum number of channels is fixed to 64. Multiple <emphasis>fout</emphasis> opcodes can be present in the same instrument, referring to different files.
    </para>

    <para>
      Notice that, unlike <link linkend="out"><citetitle>out</citetitle></link>, <link linkend="outs"><citetitle>outs</citetitle></link> and <link linkend="outq"><citetitle>outq</citetitle></link>, <emphasis>fout</emphasis> does not zero the audio variable so you must zero it after calling it. If polyphony is to be used, you can use <link linkend="vincr"><citetitle>vincr</citetitle></link> and <link linkend="clear"><citetitle>clear</citetitle></link> opcodes for this task.
    </para>

    <para>
      Notice that <emphasis>fout</emphasis> and <link linkend="foutk"><citetitle>foutk</citetitle></link> can use either a string containing a file pathname, or a handle-number generated by <link linkend="fiopen"><citetitle>fiopen</citetitle></link>. Whereas, with <link linkend="fouti"><citetitle>fouti</citetitle></link> and <link linkend="foutir"><citetitle>foutir</citetitle></link>, the target file can be only specified by means of a handle-number.
    </para>
    <note>
      <para>If you are using <emphasis>fout</emphasis> to generate an audio file for the global output of csound, you might want to use the <link linkend="monitor"><citetitle>monitor</citetitle></link> opcode, which can tap the output buffer, to avoid having to route </para>
    </note>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is a simple example of the fout opcode. It uses the file <ulink url="examples/fout.csd"><citetitle>fout.csd</citetitle></ulink>.

      <example>
        <title>Example of the fout opcode.</title>

        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/fout.csd.xml"/>
      </example>
    </para>

    <para>
      Here is another example of <emphasis>fout</emphasis>, using it to save the contents of a table to an audio file. It uses the file <ulink url="examples/fout_ftable.csd"><citetitle>fout_ftable.csd</citetitle></ulink> and <ulink url="examples/beats.wav"><citetitle>beats.wav</citetitle></ulink>.

      <example>
        <title>Example of the fout opcode to save the contents of an f-table.</title>

          <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/fout_ftable.csd.xml"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para>
      <link linkend="fiopen"><citetitle>fiopen</citetitle></link>,
      <link linkend="fouti"><citetitle>fouti</citetitle></link>,
      <link linkend="foutir"><citetitle>foutir</citetitle></link>,
      <link linkend="foutk"><citetitle>foutk</citetitle></link>,
      <link linkend="monitor"><citetitle>monitor</citetitle></link>
    </para>
  </refsect1>

  <refsect1>
    <title>Credits</title>
    <para>
      <simplelist>
        <member>Author: Gabriel Maldonado</member>
        <member>Italy</member>
        <member>1999</member>
        <member>Author: John ffitch</member>
        <member>NUIM, 2013</member>
      </simplelist>
    </para>

    <para>New in Csound version 3.56</para>
    <para>October 2002. Added a note from Richard Dobson.</para>
    <para>Array version new in 6.01</para>
  </refsect1>
</refentry>
