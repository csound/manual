<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="pyeval">
<indexterm id="IndexPyEval"><primary>pyeval</primary></indexterm>
  <refentryinfo><title>Python Opcodes</title></refentryinfo>
  <refmeta>
    <refentrytitle>pyeval Opcodes</refentrytitle>
  </refmeta>
  
  <refnamediv>
    <refname>pyeval</refname>
    <refpurpose>Evaluate a generic Python expression and store the result in a Csound variable at k-time or i-time (i suffix).
    </refpurpose>
  </refnamediv>
  <refsect1>
    <title>Syntax</title>
    <synopsis>kresult <command>pyeval</command> "expression"</synopsis>
    <synopsis>iresult <command>pyevali</command> "expression"</synopsis>
    <synopsis>kresult <command>pyleval</command> "expression"</synopsis>
    <synopsis>iresult <command>pylevali</command> "expression"</synopsis>
    <synopsis>kresult <command>pyevalt</command> ktrigger, "expression"</synopsis>
    <synopsis>kresult <command>pylevalt</command> ktrigger, "expression"</synopsis>
  </refsect1>
  <refsect1>
    <title>Description</title>
    <para>These opcodes evaluate a generic Python expression and store the
      result in a Csound variable at k-time or i-time (i suffix).</para>
    <para>The expression must evaluate in a float or an object that can be
      cast to a float.</para>
    <para>They can be used effectively to trasfer data from a Python
      object into a Csound variable.</para>
  </refsect1>
  <refsect1>
    <title>Example of the pyeval Opcode Group</title>
<para>The code:</para>

<programlisting>
k1           <emphasis role="opc">pyeval</emphasis>      "v1"</programlisting>

    <para>will copy the content of the Python variable <emphasis>v1</emphasis> into the Csound variable <emphasis>k1</emphasis> at each k-time.</para>

  </refsect1>

  <refsect1>
    <title>Credits</title>
    <para>Copyright (c) 2002 by Maurizio Umberto Puxeddu. All rights
      reserved. Portions copyright (c) 2004 and 2005 by Michael Gogins. This
      document has been updated Sunday 25 July 2004 and 1 February 2005 by
      Michael Gogins.</para>
  </refsect1>
</refentry>
