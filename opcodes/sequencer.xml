<refentry id="sequ">
<indexterm id="IndexSequ"><primary>sequ</primary></indexterm>
  <refentryinfo><title>Instrument Control:Sensing and Control</title></refentryinfo>
  <refmeta>
    <refentrytitle>sequ</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>sequ</refname>
    <refpurpose>
      Emulate a hardware sequencer
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      Uses a collection of arrays to generate a sequence of events
      with variable tempo that can be played in forward, reverse, back
      and forth, and random directions. The max length of the arrays
      is 128, and it can be scaled dynamically. Permutational playback
      modes feature randomisation, probability and other algorithms.
    </para>
  </refsect1>
  <refsect1>
    <title>Syntax</title>
    <synopsis>kres  <command>sequ</command>  irhythm[], iinstr[], idata[], kbpm, klen [, kmode] [, kstep] [, kreset] [, kverbose]
    </synopsis>
    <synopsis>kres  <command>sequ</command>  irhythm[], iinstr[],
    idata[][], kbpm, klen [, kmode] [, kstep] [, kreset] [, kverbose]
    </synopsis>
  </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>irhythm</emphasis>  - array of durations in
      beats.  The actual duration is determined by these values divided
      by the current BPM.
    </para>
    <para>
     <emphasis>iinstr</emphasis>  -  array of instrument numbers scheduled
     per step. An instrument number zero does nothing. It skips the note
     associated with the step and produces a silence for that note's duration.
    </para>
    <para>
      <emphasis>idata</emphasis>  -  Either a vector of p4 values to the
      associated iinstr step or a two dimensional array of p4, p5,
      p6...values.  Typically, one would specify pitch
      information in cps, or MIDI note number; but the arbitrary list
      of p4 data values could have other uses in the called iinstr.
    </para>
  </refsect1>

  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>kbpm</emphasis> - speed of looping in beats per minute.
    </para>
    <para>
      <emphasis>klen</emphasis> - length of the active part of the
      sequence (starting from step 0).
    </para>
    <para>
      <emphasis>kmode</emphasis> - control the sequencer playback. A value
      of 0 (default) loops forward through the sequence, calling the
      associated instrument on each step. Other modes are
      supported. (See below).
    </para>
    <para>
        Current playback options for <emphasis>kmode</emphasis> are:

        <itemizedlist>
          <listitem><para>0 - forward loop</para></listitem>
          <listitem><para>n&gt;0 - forward loop with a mutation every n
events</para></listitem>
          <listitem><para>-1 - backward loop</para></listitem>
          <listitem><para>-2 - back and forth</para></listitem>
          <listitem><para>-3 - random events</para></listitem>
          <listitem><para>-4 - play the entire sequence forward one time
and stop</para></listitem>
          <listitem><para>-5 - play the entire sequence backward one time
          and stop</para></listitem>
          <listitem><para>-6 - shuffle the events</para></listitem>
          <listitem><para>-7 - reset to the initial state</para></listitem>
        </itemizedlist>
    </para>
   <para>
      <emphasis>kstep</emphasis> - if non zero replace the irhythm
      array with k-rate triggers. These could be from a MIDI keyboard
      or any other krate controller.  An event is scheduled if this
      argument is positive, and just waits if it is negative.  Default
      is zero.
   </para>
   <para>
     <emphasis>kreset</emphasis> - if non zero resets the sequencer (like
     mode -7). Default is zero.
   </para>
   <para>
     <emphasis>kverbose</emphasis> - if non zero prints messages
     about the internal state changes.  Default is zero.
   </para>
   <para>
     <emphasis>kres</emphasis> - gives the index of the event created
     for the current k-cycle, or -1 if no event happened.
   </para>

   <note>
     <para>
       While the irhythm, iinstr, and idata, arrays are i-time, the
       values of the entries are read at k-rate when used.  This
       means that by using global i-rate vectors, it is possible
       (with care) to change the specific values and other details at
       performance time.
     </para>
   </note>
 </refsect1>

 <refsect1>
   <title>Examples</title>
   <para>
     Here is an example of the sequ opcode. It uses the file <ulink url="examples/sequ1.csd"><citetitle>sequ1.csd</citetitle></ulink>
     <example>
       <title>Example of the sequ opcode.</title>
       <xi:include href="examples-xml/sequ1.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
     </example>
     Here is another example of the sequ opcode showing the various
     modes. It uses the file <ulink
     url="examples/sequ2.csd"><citetitle>sequ2.csd</citetitle></ulink>
     <example>
       <title>Example of the sequ opcode.</title>
       <xi:include href="examples-xml/sequ2.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
     </example>
   </para>
 </refsect1>
  
     <refsect1>
        <title>See also</title>
	<para><link linkend="ControlSensing"><citetitle>Sensing and Control: Tempo and Sequencing</citetitle></link></para>
    </refsect1>

   <refsect1>
     <title>Credits</title>
     <para>Written by &namejohn;</para>
     <para>New in Csound 6.17</para>
   </refsect1>
 </refentry>
