<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="lowresx">
<indexterm id="IndexLowresx"><primary>lowresx</primary></indexterm>
  <refentryinfo><title>Signal Modifiers:Standard Filters:Resonant</title></refentryinfo>
  <refmeta>
    <refentrytitle>lowresx</refentrytitle>
  </refmeta>


 
  <refnamediv>
    <refname>lowresx</refname>
    <refpurpose>
      Simulates layers of serially connected resonant lowpass filters.
    </refpurpose>
  </refnamediv>
 
  <refsect1>
    <title>Description</title>
    <para>
      <emphasis>lowresx</emphasis> is equivalent to more layers of <link linkend="lowres"><citetitle>lowres</citetitle></link> with the same arguments serially connected.
    </para>
  </refsect1>
 
  <refsect1>
    <title>Syntax</title>
    <synopsis>ares <command>lowresx</command> asig, xcutoff, xresonance [, inumlayer] [, iskip]</synopsis>
  </refsect1>
 
  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>inumlayer</emphasis> -- number of elements in a
      <emphasis>lowresx</emphasis> stack. Default value is 4. There is
      no maximum. 
    </para>

    <para>
      <emphasis>iskip</emphasis> -- initial disposition of internal
      data space. A zero value will clear the space; a non-zero value
      will allow previous information to remain. The default value is
      0. 
    </para>
  </refsect1>
 
  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>asig</emphasis> -- input signal
    </para>

    <para>
      <emphasis>xcutoff</emphasis> -- filter cutoff frequency point
    </para>

    <para>
      <emphasis>xresonance</emphasis> -- resonance amount
    </para>

    <para>
      <emphasis>lowresx</emphasis> is equivalent to more layer of
      <link linkend="lowres"><citetitle>lowres</citetitle></link> with
      the same arguments serially connected. Using a stack of a larger
      number of filters allows a sharper cutoff. This is faster than
      using a larger number of instances of
      <emphasis>lowres</emphasis> in a Csound orchestra because only
      one initialization and k cycle are needed at time and the audio
      loop falls entirely inside the cache memory of processor. Based
      on an orchestra by Hans Mikelson 
    </para>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the lowresx opcode. It uses the file <ulink url="examples/lowresx.csd"><citetitle>lowresx.csd</citetitle></ulink>.
      <example>
        <title>Example of the lowresx opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/lowresx.csd.xml"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para>
      <link linkend="lowres"><citetitle>lowres</citetitle></link>
    </para>
  </refsect1>
 
  <refsect1>
    <title>Credits</title>
    <para>
      <simplelist>
        <member>Author: Gabriel Maldonado (adapted by John ffitch)</member>
        <member>Italy</member>
      </simplelist>
    </para>

    <para>New in Csound version 3.49</para>
    <para>Audio rate parameters introduced in version 6.02</para>
    <para>November 2013.</para>
  </refsect1>
</refentry>
