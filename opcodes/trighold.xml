<!--Change refentry id and indexterm id-->
<refentry id="trighold">
  <indexterm id="Indextrighold"><primary>trighold</primary></indexterm>
  <!--Make sure the category below is a valid one! See categories.py-->
  <refentryinfo><title>Signal Modifiers:Standard Filters:Control</title></refentryinfo>
  <refmeta>
    <refentrytitle>trighold</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>trighold</refname>
    <refpurpose>
      Timed trigger, holds a value for a given time
    </refpurpose>
  </refnamediv>
  
  <refsect1>
    <title>Description</title>
    <para>Plugin opcode in scugens.</para>
    <para>
      Timed trigger. Port of Supercollider's Trig ugen. When a nonpositive to positive
      transition occurs at the input, trighold outputs the level of the triggering input for the
      specified duration, otherwise it outputs zero.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <!-- Please keep this below ~70 characters by using backslashes to avoid overflow in the pdf
         version-->
    <synopsis>aout <command>trighold</command> ain, kdur</synopsis>
    
    <synopsis>kout <command>trighold</command> kin, kdur</synopsis>
    
  </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>initialvalue</emphasis> If given, sets the internal
      state. Default=0
    </para>
  </refsect1>
  
  <refsect1>
    <title>Performance</title>
    <!--    First list all input and output performance parameters-->
    <para>
      <emphasis>ain</emphasis> -- Trigger. Trigger can be any
      signal. A trigger happens when the signal changes from
      non-positive to positive. 
    </para>
    <para>
      <emphasis>kdur</emphasis> -- Duration of the trigger in seconds.
    </para>
    
    <para>
      
    </para>
  </refsect1>
  <refsect1>
    <!--To add examples, create the csd file in the examples directory, then run:-->
    <!--python csd2docbook.py -f newopcodename.csd-->
    <!--to generate the xml highlighted version used below-->
    <title>Examples</title>
    <para>
      Here is an example of the trighold opcode. It uses the file <ulink
      url="examples/trighold.csd"><citetitle>trighold.csd</citetitle></ulink>.
      <example>
        <title>Example of the trighold opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time
        Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line
        Flags</citetitle></link> for more information on using command line flags.</para>
        <xi:include href="examples-xml/trighold.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
    </para>
  </refsect1>
  
      <refsect1>
        <title>See also</title>
        <para><link linkend="ControlSensing"><citetitle>Sensing and Control: Tempo and Sequencing</citetitle></link></para>
    </refsect1>

  <refsect1>
    <!--  And put your name and other relevant information here-->
    <title>Credits</title>
    <para>By: &nameeduardo; 2017</para>
  </refsect1>

  <!--Now remember to add a link from the appropriate category in the Opcode Overview.-->
  <!--Add the entity to manual.xml-->
  <!--Add the entity reference in the appropriate place in opcodes/top.xml-->
  <!--And you're set! Maybe delete the comments as well...-->

</refentry>
