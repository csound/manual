<refentry id="mvmfilter">
<indexterm id="IndexMvmfilter"><primary>mvmfilter</primary></indexterm>
  <refentryinfo><title>Signal Modifiers:Specialized Filters</title></refentryinfo>
  <refmeta>
    <refentrytitle>mvmfilter</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>mvmfilter</refname>
    <refpurpose>
      A filter with pronounced resonance and controllable decay time.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      Filters the incoming signal with the specified resonance
      frequency and decay time. This can be used to overlay a specific
      resonance on to an incoming sound or to model short bursts of
      sinusoids at a desired frequency. With a sufficiently long decay
      time it can be used as a sinusoidal oscillator.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <synopsis>aout <command>mvmfilter</command> ain, xfreq, xTau [, iskip]</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>iskip</emphasis>
      (optional, default=0) -- if non zero skip the initialisation of the
      filter.
    </para>
  </refsect1>

  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>aout</emphasis> -- filtered signal
    </para>

    <para>
      <emphasis>ain</emphasis> -- signal to filter
    </para>

    <para>
      <emphasis>xfreq</emphasis> -- resonant frequency of the filter
      <warning>
        <title>Warning</title>
        <para>
          The filter output can rapidly grow to very large output if
          the input signal correlates with the output. The worst case
          is that it grows by the magnitude of the input with every
          sample. To limit the growth so the filter does not explode,
          it is best to scale down any continuous input significantly.

	  The required scale is related to the value of the decay-time
	  tau so if you select a maximum decay-time you can calculate
	  the required scaling: factor = 1 / $M_E /
	  (<emphasis>sr</emphasis>*tau)
        </para>
        </warning>
    </para>

    <para>
      <emphasis>xTau</emphasis> -- Decay time of the filter in seconds
    </para>
    <para>The decay time is the time in seconds for filter to decay to 1/<emphasis>e</emphasis></para>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the mvmfilter opcode. It uses the file <ulink url="examples/mvmfilter.csd"><citetitle>mvmfilter.csd</citetitle></ulink>.
      <example>
        <title>Example of the mvmfilter opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include href="examples-xml/mvmfilter.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
    </para>
  </refsect1>
     
     <refsect1>
        <title>See also</title>
        <para><link linkend="SigmodSpeciali"><citetitle>Specialized Filters: Other filters</citetitle></link></para>
    </refsect1>
	
  <refsect1>
    <title>References</title>
    <para> This filter is based on the work of Max Mathews and Julius
    O. Smith III. This filter was originally used by Max Mathews in an
    application which applied a bank of these filters to an incoming
    sound with live controls over the decay time and frequency
    parameters. This setup was the basis for collaborative live
    performance and was referred to as Phasor Filters. </para>

    <para>
      <orderedlist>
        <listitem>
          <para>
	    Max Mathews and Julius O. Smith III, 
	    <ulink url="https://ccrma.stanford.edu/~jos/smac03maxjos/smac03maxjos.pdf"><citetitle>"Very High Q Parametrically WellBehaved Two Pole Filters"</citetitle></ulink>
          </para>
        </listitem>
      </orderedlist>
    </para>
  </refsect1>

  <refsect1>
    <title>Credits</title>
    <para></para>
    <para>Original design by Max V. Mathews and Julius O. Smith III</para>
    <para>Opcode implementation by Joel Ross</para>
    <para>New in version 6.16</para>
    <para>May 2021.</para>
   </refsect1>
</refentry>
