<!--Change refentry id and indexterm id-->
<refentry id="ftslice">
  <indexterm id="IndexFtslice"><primary>ftslice</primary></indexterm>
  <!--Make sure the category below is a valid one! See categories.py-->
  <refentryinfo><title>Table Control:Read/Write Operations</title></refentryinfo>
  <refmeta>
    <refentrytitle>ftslice</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>ftslice</refname>
    <refpurpose>
      Copy a slice from an f-table to another f-table at performance
    </refpurpose>
  </refnamediv>
  
  <refsect1>
    <title>Description</title>
    <para>Plugin opcode in emugens.</para>
    <para>
      The <emphasis>ftslice</emphasis> opcode takes an f-table and copies a slice to a second
      f-table (similar to tab2array, but between tables). This action is done at performance
      (every cycle), so that it can be placed inside a k-time if clause / loop / etc.
      For an init-only version, see <link linkend="ftslicei"><citetitle>ftslicei</citetitle></link>
	  </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
	  <!--    Please keep this below ~70 characters by using backslashes to avoid overflow in the pdf version-->
    <synopsis><command>ftslice</command> ifnsource, ifndest [, kstart, kend, kstep ]</synopsis>
    <synopsis><command>ftslice</command> kfnsource, kfndest [, kstart, kend, kstep ]</synopsis>
	  
  </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>ifnsource</emphasis> -- The table number to copy data from
    </para>
    <para>
      <emphasis>ifndest</emphasis> -- The table number to copy data to
    </para>
  </refsect1>

  <refsect1>
	  <title>Performance</title>
	  <!--    First list all input and output performance parameters-->
    <para>
	    <emphasis>kstart</emphasis> -- The index to start copying from. <emphasis>Defaults to 0</emphasis>
	  </para>

	  <para>
	    <emphasis>kend</emphasis> -- The end index to stop copying.
      This is NOT inclusive. 0 means copy to the end of the table. <emphasis>Defaults to end of table</emphasis>
	  </para>

	  <para>
	    <emphasis>kstep</emphasis> -- How many elements to skip. <emphasis>Defaults to 1</emphasis>
	  </para>

  </refsect1>
  <refsect1>
	  <!--To add examples, create the csd file in the examples directory, then run:-->
	  <!--python csd2docbook.py -f newopcodename.csd-->
	  <!--to generate the xml highlighted version used below-->
    <title>Examples</title>
    <para>
      Here is an example of the ftslice opcode. It uses the file <ulink url="examples/ftslice.csd"><citetitle>ftslice.csd</citetitle></ulink>.
      <example>
        <title>Example of the ftslice opcode.</title>
        <xi:include href="examples-xml/ftslice.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
    </para>
  </refsect1>
  
      <refsect1>
        <title>See also</title>
        <para><link linkend="TableReadwrit"><citetitle>Read/Write Operations</citetitle></link></para>
    </refsect1>

  <refsect1>
	  <!--  And put your name and other relevant information here-->
	  <title>Credits</title>
	  <para>By: &nameeduardo; 2018</para>
    <para>New plugin in version 6.12</para>
  </refsect1>

  <!--Now remember to add a link from the appropriate category in the Opcode Overview.-->
  <!--Add the entity to manual.xml-->
  <!--Add the entity reference in the appropriate place in opcodes/top.xml-->
  <!--And you're set! Maybe delete the comments as well...-->

</refentry>
