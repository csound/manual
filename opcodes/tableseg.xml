<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="tableseg">
<indexterm id="IndexTableseg"><primary>tableseg</primary></indexterm>
  <refentryinfo><title>Spectral Processing:STFT</title></refentryinfo>
  <refmeta>
    <refentrytitle>tableseg</refentrytitle>
  </refmeta>


 
  <refnamediv>
    <refname>tableseg</refname>
    <refpurpose>
      Creates a new function table by making linear segments between values in stored function tables.
          </refpurpose>
  </refnamediv>
 
  <refsect1>
    <title>Description</title>
    <para>
      <emphasis>tableseg</emphasis> is like <link linkend="linseg"><citetitle>linseg</citetitle></link> but interpolate between values in a stored function tables. The result is a new function table passed internally to any following <link linkend="vpvoc"><citetitle>vpvoc</citetitle></link> which occurs before a subsequent <emphasis>tableseg</emphasis> (much like <link linkend="lpread"><citetitle>lpread</citetitle></link>/<link linkend="lpreson"><citetitle>lpreson</citetitle></link> pairs work). The uses of these are described below under <emphasis>vpvoc</emphasis>.
    </para>

<!--    <para>
      Note: this opcode can also be written as <link linkend="ktableseg"><citetitle>ktableseg</citetitle></link>.
    </para>-->
  </refsect1>
 
  <refsect1>
    <title>Syntax</title>
    <synopsis><command>tableseg</command> ifn1, idur1, ifn2 [, idur2] [, ifn3] [...]</synopsis>
  </refsect1>
 
  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>ifn1</emphasis>, <emphasis>ifn2</emphasis>, <emphasis>ifn3</emphasis>, etc. -- function table numbers. <emphasis>ifn1</emphasis>, <emphasis>ifn2</emphasis>, and so on, must be the same size.
    </para>

    <para>
      <emphasis>idur1</emphasis>, <emphasis>idur2</emphasis>, etc. -- durations during which interpolation from one table to the next will take place.
    </para>
  </refsect1>
   
  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the tableseg opcode. It uses the file <ulink url="examples/tableseg.csd"><citetitle>tableseg.csd</citetitle></ulink>.
      <example>
        <title>Example of the tableseg opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/tableseg.csd.xml"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para>
      <link linkend="pvbufread"><citetitle>pvbufread</citetitle></link>,
      <link linkend="pvcross"><citetitle>pvcross</citetitle></link>,
      <link linkend="pvinterp"><citetitle>pvinterp</citetitle></link>,
      <link linkend="pvread"><citetitle>pvread</citetitle></link>,
      <link linkend="tablexseg"><citetitle>tablexseg</citetitle></link>
    </para>
  </refsect1>
 
  <refsect1>
    <title>Credits</title>
    <para>
      <simplelist>
        <member>Author: Richard Karpen</member>
        <member>Seattle, Wash</member>
        <member>1997</member>
      </simplelist>
    </para>
    <para>New in version 3.44</para>
  </refsect1>
</refentry>
