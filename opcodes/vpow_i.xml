<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="vpow_i">
<indexterm id="IndexVpow_i"><primary>vpow_i</primary></indexterm>
  <refentryinfo><title>Vectorial:Scalar operations</title></refentryinfo>
  <refmeta>
    <refentrytitle>vpow_i</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>vpow_i</refname>
    <refpurpose>
     Raises each element of a vector to a scalar power
    </refpurpose>
  </refnamediv>
  
  <refsect1>
    <title>Description</title>
    <para>
     Raises each element of a vector to a scalar power
    </para>
  </refsect1>
  <refsect1>
    <title>Syntax</title>
    <synopsis><command>vpow_i</command>  ifn, ival, ielements [, idstoffset]</synopsis>
  </refsect1>
 
  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>ifn</emphasis>  - number of the table hosting the vectorial signal to be processed
    </para>
    <para>
      <emphasis>ielements</emphasis> - number of elements of the vector
    </para>
    <para>
      <emphasis>ival</emphasis> - scalar value to which the elements of ifn will be raised
    </para>
    <para>
      <emphasis>idstoffset</emphasis> - index offset for the destination table
    </para>
  </refsect1>
 
  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>vpow_i</emphasis> elevates each element of the vector contained in the table <emphasis>ifn</emphasis> to the power of <emphasis>ival</emphasis>, starting from table index <emphasis>idstoffset</emphasis>. This enables you to process a specific section of a table by specifying the offset and the number of elements to be processed. Offset is counted starting from 0, so if no offset is specified (or set to 0), the table will be modified from the beginning.
    </para>
    <para>
      This opcode runs only on initialization, there is a k-rate version of this opcode called <link linkend="vpow"><citetitle>vpow</citetitle></link>.
    </para>
    <para>
      Negative values for <emphasis>idstoffset</emphasis> are valid. Elements from the vector that are outside the table, will be discarded, and they will not wrap around the table.
    </para>
    <para>
      In all these opcodes, the resulting vectors are stored in <emphasis>ifn</emphasis>, overriding the intial vectors. If you want to keep initial vector, use <link linkend="vcopy"><citetitle>vcopy</citetitle></link> or <link linkend="vcopy_i"><citetitle>vcopy_i</citetitle></link> to copy it in another table. All these operators are designed to be used together with other opcodes that operate with vectorial signals such as <link linkend="vcella"><citetitle>vcella</citetitle></link>, <link linkend="adsynt"><citetitle>adsynt</citetitle></link>, <link linkend="adsynt2"><citetitle>adsynt2</citetitle></link>, etc.  They can also be useful in conjunction with the spectral opcodes <link linkend="pvsftw"><citetitle>pvsftw</citetitle></link> and <link linkend="pvsftr"><citetitle>pvsftr</citetitle></link>.
    </para>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the vpow_i opcode. It uses the file <ulink url="examples/vpow_i.csd"><citetitle>vpow_i.csd</citetitle></ulink>.
      <example>
        <title>Examples of the vpow_i opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/vpow_i.csd.xml"/>
      </example>
    </para>
    <para>
      Here is another example of the vpow_i opcode. It uses the file <ulink url="examples/vpow_i-2.csd"><citetitle>vpow_i-2.csd</citetitle></ulink>.
      <example>
        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/vpow_i-2.csd.xml"/>
      </example>
    </para>
  </refsect1>
  
  <refsect1>
    <title>See also</title>
    <para>
      <link linkend="vadd_i"><citetitle>vadd_i</citetitle></link>, <link linkend="vmult_i"><citetitle>vmult_i</citetitle></link>, <link linkend="vpow"><citetitle>vpow</citetitle></link> and <link linkend="vexp_i"><citetitle>vexp_i</citetitle></link>.
    </para>
  </refsect1>
  <refsect1>
    <title>Credits</title>
    <para>Written by Gabriel Maldonado. Optional arguments added by Andres Cabrera and Istvan Varga.</para>
    <para>New in Csound 5 (Previously available only on CsoundAV)</para>
  </refsect1>
</refentry>
