<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="tab">
<indexterm id="IndexTabw_i"><primary>tabw_i</primary></indexterm>

<indexterm id="IndexTabw"><primary>tabw</primary></indexterm>

<indexterm id="IndexTab_i"><primary>tab_i</primary></indexterm>

<indexterm id="IndexTab"><primary>tab</primary></indexterm>
  <refentryinfo><title>Signal Generators:Table Access</title></refentryinfo>
  <refmeta>
    <refentrytitle>tab</refentrytitle>
  </refmeta>

   <refnamediv>
    <refname>tab</refname>
    <refpurpose>
      Fast table opcodes.
    </refpurpose>
  </refnamediv>
 
  <refsect1>
    <title>Description</title>
    <para>
      Fast table opcodes. Faster than
    <link linkend="table"><citetitle>table</citetitle></link> and
    <link linkend="tablew"><citetitle>tablew</citetitle></link> because don't
    allow wrap-around and limit and don't check index validity. Have
    been implemented in order to provide fast access to
    arrays. Support non-power of two tables (can be generated by any
    GEN function by giving a negative length value). 
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
      <synopsis>ir <command>tab_i</command> indx, ifn[, ixmode]</synopsis>
      <synopsis>kr <command>tab</command> kndx, ifn[, ixmode]</synopsis>
      <synopsis>ar <command>tab</command> xndx, ifn[, ixmode]</synopsis>
      <synopsis><command>tabw_i</command> isig, indx, ifn [,ixmode]</synopsis>
      <synopsis><command>tabw</command> ksig, kndx, ifn [,ixmode]</synopsis>
      <synopsis><command>tabw</command> asig, andx, ifn [,ixmode]</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>ifn</emphasis> -- table number
    </para>
    <para>
      <emphasis>ixmode</emphasis> -- defaults to zero.  If zero
      <emphasis>xndx</emphasis> and <emphasis>ixoff</emphasis> ranges match the
      length of the table; if non zero <emphasis>xndx</emphasis> and
      <emphasis>ixoff</emphasis> have a 0 to 1 range. 
    </para>
    <para>
      <emphasis>isig</emphasis> -- input value to write.
    </para>
    <para>
      <emphasis>indx</emphasis> -- table index
    </para>
  </refsect1>

  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>asig, ksig</emphasis> -- input signal to write.
    </para>
    <para>
      <emphasis>andx, kndx</emphasis> -- table index.
    </para>
    <para>
      <emphasis>tab</emphasis> and <emphasis>tabw</emphasis>
      opcodes are similar to <emphasis>table</emphasis> and
      <emphasis>tablew</emphasis>, but are faster and support tables
      having non-power-of-two length. 
    </para>
    <para>
      Special care of index value must be taken into account. Index
      values out of the table allocated space will crash Csound. 
    </para>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the tab opcode. It uses the file <ulink url="examples/tab.csd"><citetitle>tab.csd</citetitle></ulink>.
      <example>
        <title>Example of the tab opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/tab.csd.xml"/>
      </example>
    </para>
  </refsect1>
 
  <refsect1>
    <title>Credits</title>
    <para>Written by Gabriel Maldonado.</para>
  </refsect1>
</refentry>
