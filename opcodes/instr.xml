<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="instr">
<indexterm id="IndexInstr"><primary>instr</primary></indexterm>
  <refentryinfo><title>Orchestra Syntax:Block Statements</title></refentryinfo>
  <refmeta>
    <refentrytitle>instr</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>instr</refname>

    <refpurpose>
      Starts an instrument block.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      Starts an instrument block.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <synopsis><command>instr</command> i, j, ...</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      Starts an instrument block defining instruments <emphasis>i, j</emphasis>, ...
    </para>

    <para>
      <emphasis>i, j</emphasis>, ... must be numbers, not expressions. Any positive integer is legal, and in any order, but excessively high numbers are best avoided.
    </para>

    <note>
      <title>Note</title>
      <para>
        There may be any number of instrument blocks in an orchestra.
      </para>
    </note>

     <para>
       Instruments can be defined in any order (but they will always be both initialized and performed in ascending instrument number order, with the exception of notes triggered by real time events that are initialized in the order of being received but still performed in ascending instrument number order).  Instrument blocks cannot be nested (i.e. one block cannot contain another).
     </para>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the instr opcode. It uses the file <ulink url="examples/instr.csd"><citetitle>instr.csd</citetitle></ulink>.

      <example>
        <title>Example of the instr opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/instr.csd.xml"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para>
      <link linkend="endin"><citetitle>endin</citetitle></link>,
      <link linkend="in"><citetitle>in</citetitle></link>,
      <link linkend="out"><citetitle>out</citetitle></link>,
      <link linkend="opcode"><citetitle>opcode</citetitle></link>,
      <link linkend="endop"><citetitle>endop</citetitle></link>,
      <link linkend="setksmps"><citetitle>setksmps</citetitle></link>,
      <link linkend="xin"><citetitle>xin</citetitle></link>,
      <link linkend="xout"><citetitle>xout</citetitle></link>,
      <link linkend="subinstr"><citetitle>subinstr</citetitle></link>,
      <link linkend="subinstrinit"><citetitle>subinstrinit</citetitle></link>
    </para>
  </refsect1>

  <refsect1>
    <title>Credits</title>
    <para>Example written by Kevin Conder.</para>
  </refsect1>
</refentry>
