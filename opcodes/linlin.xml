<!--Change refentry id and indexterm id-->
<refentry id="linlin">
  <indexterm id="IndexLinlin"><primary>linlin</primary></indexterm>
  <!--Make sure the category below is a valid one! See categories.py-->
  <refentryinfo><title>Signal Generators:Linear and Exponential Generators</title></refentryinfo>
  <refmeta>
    <refentrytitle>linlin</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>linlin</refname>
    <refpurpose>
          Linear to linear interpolation
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>Plugin opcode in emugens.</para>
    <para>
	  Maps a linear range of values to another linear range of values.
      Supports both scalars and arrays, at i- and k-time
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
	<!--    Please keep this below ~70 characters by using backslashes to avoid overflow in the pdf version-->
    <synopsis>ky <command>linlin</command> kx, ky0, ky1 [, kx0, kx1 ]</synopsis>
    <synopsis>iy <command>linlin</command> ix, iy0, iy1 [, ix0, ix1 ]</synopsis>
    <synopsis>kys[] <command>linlin</command> kxs[], ky0, ky1 [, kx0, kx1 ]</synopsis>
    <synopsis>iys[] <command>linlin</command> ixs[], ky0, ky1, [ kx0, kx1 ]</synopsis>
    <synopsis>kC[] <command>linlin</command> kx, kA[], kB[] [, kx0, kx1 ]</synopsis>
  </refsect1>

  <refsect1>

    <title>Performance</title>
    <!--    First list all input and output performance parameters-->
    <para>
      <emphasis role="strong">kx</emphasis> -- Input signal
	</para>

	<para>
	  <emphasis role="strong">kx0</emphasis> -- Lower limit of input range. <emphasis>Defaults to 0</emphasis>
	</para>

	<para>
	  <emphasis role="strong">kx1</emphasis> -- Higher limit of input range. <emphasis>Defaults to 1</emphasis>
	</para>

	<para>
	  <emphasis role="strong">ky0</emphasis> -- Lower limit of output range
	</para>

	<para>
	  <emphasis role="strong">ky1</emphasis> -- Higher limit of output range
	</para>

	<para>
	  <programlisting>
        y = (x - x0) / (x1 - x0) * (y1 - y0) + y0
	  </programlisting>
	</para>
	
  </refsect1>
  <refsect1>
    <!--To add examples, create the csd file in the examples directory, then run:-->
    <!--python csd2docbook.py -f newopcodename.csd-->
    <!--to generate the xml highlighted version used below-->
    <title>Examples</title>
    <para>
      Here is an example of the linlin opcode. It uses the file <ulink url="examples/linlin.csd"><citetitle>linlin.csd</citetitle></ulink>.
      <example>
        <title>Example of the linlin opcode.</title>
        <xi:include href="examples-xml/linlin.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
    </para>
  </refsect1>
    
  <refsect1>
        <title>See also</title>
        <para><link linkend="SiggenLineexp"><citetitle>Linear and Exponential Generators</citetitle></link></para>
    </refsect1>

  <refsect1>
	<!--  And put your name and other relevant information here-->
	<title>Credits</title>
	<para>By: &nameeduardo; 2017</para>
    <para>New plugin in version 6.11</para>
  </refsect1>

  <!--Now remember to add a link from the appropriate category in the Opcode Overview.-->
  <!--Add the entity to manual.xml-->
  <!--Add the entity reference in the appropriate place in opcodes/top.xml-->
  <!--And you're set! Maybe delete the comments as well...-->

</refentry>
