j
<!--Change refentry id and indexterm id-->
<refentry id="link_metro">
<indexterm id="IndexLinkMetro"><primary>link_metro</primary></indexterm>
<!--Make sure the category below is a valid one! See categories.py-->
  <refentryinfo><title>Ableton Link Opcodes</title></refentryinfo>
  <refmeta>
    <refentrytitle>link_metro</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>link_metro</refname>
    <refpurpose>
      Returns a trigger that is 1 on the beat and 0 otherwise along with beat, phase, and time for this session of Ableton Link.
    </refpurpose>
  </refnamediv>
 
  <refsect1>
    <title>Description</title>
    <para>Plugin opcode in ableton_link_opcodes. This opcode is part of the plugin repository and has to be installed separately. 
    The plugin repository can be found here: <ulink url="https://github.com/csound/plugins"><citetitle>https://github.com/csound/plugins</citetitle></ulink></para>
    <para>
       Returns a trigger that is 1 on the beat and 0 otherwise along with the beat, phase, and current time of Ableton Link for this session for a given quantum.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
<!--    Please keep this below ~70 characters by using backslashes to avoid overflow in the pdf version
        k_trigger, k_beat, k_phase, k_current_time_seconds link_metro i_peer [, P_quantum = 1]
-->
    <synopsis>k_trigger, k_beat, k_phase, k_current_time_seconds <command>link_metro</command> i_peer [, k_quantum]</synopsis>
  </refsect1>

  <refsect1>
<!--  If applicable list i-time arguments-->
    <title>Initialization</title>
   <para>
      <emphasis>i_peer</emphasis> -- The Ableton Link peer object.
    </para>
  </refsect1>
 
  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>k_trigger</emphasis> -- Trigger, 1 at the instant of the first beat in each local quantum of the beat, and 0 otherwise.
    </para>
    <para>
      <emphasis>k_beat</emphasis> -- The number of the beat, counting from when this peer is enabled.
    </para>
    <para>
      <emphasis>k_phase</emphasis> -- The phase of the beat with respect to the quantum.
    </para>
    <para>
      <emphasis>k_current_time_seconds</emphasis> -- The time of the beat, counting from when this peer is enabled.
    </para>
   <para>
      <emphasis>k_quantum</emphasis> -- The local quantum of the beat, which may be a multiple or fraction of a beat. The default value is 1.
    </para>

    <para>
     This opcode permits the use of an Ableton Link session beat to trigger events in Csound. It also can be used to obtain the session time and beat, as well as the phase with respect to the local quantum of the beat. For example, a quantum of 4 can imply 4/4 time, or a quantum of 0.25 will subdivide the beat by 4.
   </para>
  </refsect1>

   <refsect1>
<!--To add examples, create the csd file in the examples directory, then run:-->
<!--python csd2docbook.py -f newopcodename.csd-->
<!--to generate the xml highlighted version used below-->
    <title>Examples</title>
    <para>
      Here is an example of the link_metro opcode. It uses the file <ulink url="examples/ableton_link.csd"><citetitle>ableton_link.csd</citetitle></ulink>.
      <example>
        <title>Example of the link_metro opcode.</title>
          <xi:include href="examples-xml/ableton_link.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
    </para>
  </refsect1>
      
     <refsect1>
        <title>See also</title>
        <para><link linkend="AbletonLink"><citetitle>Ableton Link Opcodes</citetitle></link></para>
    </refsect1>

  <refsect1>
<!--  And put your name and other relevant information here-->
    <title>Credits</title>
    <para>By: &namemichael; 2017</para>
  </refsect1>

<!--Now remember to add a link from the appropriate category in the Opcode Overview.-->
<!--Add the entity to manual.xml-->
<!--Add the entity reference in the appropriate place in opcodes/top.xml-->
<!--And you're set! Maybe delete the comments as well...-->

</refentry>
