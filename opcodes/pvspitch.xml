<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="pvspitch">
<indexterm id="Indexpvspitch"><primary>pvspitch</primary></indexterm>

  <refentryinfo><title>Spectral Processing:Streaming</title></refentryinfo>
  <refmeta>
    <refentrytitle>pvspitch</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>pvspitch</refname>
    <refpurpose>
      Track the pitch and amplitude of a PVS signal.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      Track the pitch and amplitude of a PVS signal as k-rate variables.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <synopsis>kfr, kamp <command>pvspitch</command> fsig, kthresh</synopsis>
  </refsect1>

  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>kamp</emphasis> -- Amplitude of fundamental frequency
    </para>
	   <para>
      <emphasis>kfr</emphasis> -- Fundamental frequency
    </para>
    <para>
      <emphasis>fsig</emphasis> -- an input pv stream
    </para>
   <para>
      <emphasis>kthresh</emphasis> -- analysis threshold (between 0 and 1). Higher values will eliminate low-amplitude components from the analysis.
    </para>
  </refsect1>

  <refsect1>
    <title>Performance</title>
    <para>
      The pitch detection algorithm implemented by <emphasis>pvspitch</emphasis> is based upon  J. F. Schouten's hypothesis of the neural processes of the brain used to determine the pitch of a sound after the frequency analysis of the basilar membrane.  Except for some further considerations, <emphasis>pvspitch</emphasis> essentially seeks out the highest common factor of an incoming sound's spectral peaks to find the pitch that may be attributed to it.
    </para>
    <para>
      In general, input sounds that exhibit pitch will also exhibit peaks in their spectrum according to where their harmonics lie. There are some the exceptions, however.  Some sounds whose spectral representation is continuous can impart a sensation of pitch.  Such sounds are explained by the centroid or center of gravity of the spectrum and are beyond the scope of the method of pitch detection implemented by <emphasis>pvspitch</emphasis> (Using opcodes like <link linkend="pvscent"><citetitle>pvscent</citetitle></link> might be more appriopriate in these cases).
    </para>
    <para>
      <emphasis>pvspitch</emphasis> is able (using a previous analysis <emphasis>fsig</emphasis> generated by <link linkend="pvsanal"><citetitle>pvsanal</citetitle></link>) to locate the spectral peaks of a signal. The threshold parameter (<emphasis>kthresh</emphasis>) is of utmost importance, as adjusting it can introduce weak yet significant harmonics into the calculation of the fundamental. However, bringing <emphasis>kthresh</emphasis> too low would allow harmonically unrelated partials into the analysis algorithm and this will compromise the method's accuracy.  These initial steps emulate the response of the basilar membrane by identifying physical characteristics of the input sound. The choice of <emphasis>kthresh</emphasis> depends on the actual level of the input signal, since its range (from 0 to 1) spans the whole dynamic range of an analysis bin (from -inf to 0dBFS).
    </para>
    <para>
      It is important to remember that the input to the <emphasis>pvspitch</emphasis> opcode is assumed to be characterised by strong partials within its spectrum.  If this is not the case, the results outputted by the opcode may not bear any relation to the pitch of the input signal.  If a spectral frame with many unrelated partials was analysed, the greatest common factor of these frequency values that allows for adjacent “harmonics” would be chosen.  Thus, noisy frames can be characterised by low frequency outputs of <emphasis>pvspitch</emphasis>. This fact allows for a primitive type of instrumental transient detection, as the attack portion of some instrumental tones contain inharmonic components.  Should the lowest frequency of the analysed melody be known, then all frequencies detected below this threshold are inaccurate readings, due to the presence of unrelated partials.
    </para>
    <para>
      In order to facilitate efficient testing of the <emphasis>pvspitch</emphasis> algorithm, an amplitude value proportional to the one in the observed in the signal frame is also outputted (<emphasis>kamp</emphasis>).  The results of <emphasis>pvspitch</emphasis> can then be employed to drive an oscillator whose pitch can be audibly compared with that of the original signal (In the example below, an oscillator generates a signal which appears a fifth above the detected pitch).
    </para>
  </refsect1>

   <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the pvspitch opcode. It uses the file <ulink url="examples/pvspitch.csd"><citetitle>pvspitch.csd</citetitle></ulink>. This example uses realtime audio input but can be used for audiofile input as well.
      <example>
        <title>Example of the pvspitch opcode</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/pvspitch.csd.xml"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para>
      <link linkend="pvsanal"><citetitle>pvsanal</citetitle></link>,
      <link linkend="pvsynth"><citetitle>pvsynth</citetitle></link>,
      <link linkend="pvsadsyn"><citetitle>pvsadsyn</citetitle></link>,
      <link linkend="pvscent"><citetitle>pvscent</citetitle></link>
    </para>
  </refsect1>

  <refsect1>
    <title>Credits</title>
    <para>
      <simplelist>
        <member>Author: Alan OCinneide</member>
        <member>August 2005, added by Victor Lazzarini, August 2006</member>
        <member>Part of the text has been adapted from the Csound Journal winter 2006 issue's article "Introducing PVSPITCH: A pitch tracking opcode for Csound" by Alan OCinneide. The article is available at: <ulink url="http://www.csoundjournal.com/2006winter/pvspitch.html"><citetitle>www.csoundjournal.com/2006winter/pvspitch.html</citetitle></ulink></member>
      </simplelist>
    </para>

  </refsect1>
</refentry>
