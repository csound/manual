<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="chebyshevpoly">
<indexterm id="IndexChebyshevpoly"><primary>chebyshevpoly</primary></indexterm>
  <refentryinfo><title>Signal Modifiers:Waveshaping</title></refentryinfo>
  <refmeta>
    <refentrytitle>chebyshevpoly</refentrytitle>
  </refmeta>



  <refnamediv>
    <refname>chebyshevpoly</refname>

    <refpurpose>
      Efficiently evaluates the sum of Chebyshev polynomials of arbitrary order.
    </refpurpose>
  </refnamediv>
 
  <refsect1>
    <title>Description</title>
    <para>
      The <emphasis>chebyshevpoly</emphasis> opcode calculates the value of a polynomial expression with a single a-rate input variable that is made up of a linear combination of the first N Chebyshev polynomials of the first kind.  Each Chebyshev polynomial, Tn(x), is weighted by a k-rate coefficient, <emphasis>kn</emphasis>, so that the opcode is calculating a sum of any number of terms in the form <emphasis>kn*Tn(x)</emphasis>.  Thus, the <emphasis>chebyshevpoly</emphasis> opcode allows for the waveshaping of an audio signal with a <emphasis>dynamic</emphasis> transfer function that gives precise control over the harmonic content of the output.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <synopsis>aout <command>chebyshevpoly</command> ain, k0 [, k1 [, k2 [...]]]</synopsis>
  </refsect1>
 
  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>ain</emphasis> --  the input signal used as the independent variable of the Chebyshev polynomials ("x").
    </para>

    <para>
      <emphasis>aout</emphasis> --  the output signal ("y").
    </para>

    <para>
      <emphasis>k0, k1, k2, ...</emphasis> --  k-rate multipliers for each Chebyshev polynomial.
    </para>

    <para>
      This opcode is very useful for dynamic waveshaping of an audio signal.  Traditional waveshaping techniques utilize a lookup table for the transfer function -- usually a sum of Chebyshev polynomials.  When a sine wave at full-scale amplitude is used as an index to read the table, the precise harmonic spectrum as defined by the weights of the Chebyshev polynomials is produced.   A dynamic spectrum is acheived by varying the amplitude of the input sine wave, but this produces a non-linear change in the spectrum.
    </para>

    <para>
      By directly calculating the Chebyshev polynomials, the <emphasis>chebyshevpoly</emphasis> opcode allows more control over the spectrum and the number of harmonic partials added to the input can be varied with time.  The value of each <emphasis>kn</emphasis> coefficient directly controls the amplitude of the nth harmonic partial if the input <emphasis>ain</emphasis> is a sine wave with amplitude = 1.0.  This makes <emphasis>chebyshevpoly</emphasis> an efficient additive synthesis engine for N partials that requires only one oscillator instead of N oscillators.  The amplitude or waveform of the input signal can also be changed for different waveshaping effects. 
    </para>

    <para>
      If we consider the input parameter <emphasis>ain</emphasis> to be "x" and the output <emphasis>aout</emphasis> to be "y", then the <emphasis>chebyshevpoly</emphasis> opcode calculates the following equation:
      <literallayout>
        y = k0*T0(x) + k1*T1(x) + k2*T2(x) + k3*T3(x) + ...
      </literallayout>
    </para>

    <para>
      where the Tn(x) are defined by the recurrence relation
      <literallayout>
        T0(x) = 1,
        T1(x) = x, 
        Tn(x) = 2x*T[n-1](x) - T[n-2](x)
      </literallayout>
    </para>

    <para>
      More information about Chebyshev polynomials can be found on Wikipedia at
      <ulink url="http://en.wikipedia.org/wiki/Chebyshev_polynomial">
        <citetitle>http://en.wikipedia.org/wiki/Chebyshev_polynomial</citetitle>
      </ulink>
    </para>
  </refsect1>
 
  <refsect1>
    <title>See Also</title>
    <para>
      <link linkend="polynomial"><citetitle>polynomial</citetitle></link>, 
      <link linkend="mac"><citetitle>mac</citetitle></link>
      <link linkend="maca"><citetitle>maca</citetitle></link>
    </para>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the chebyshevpoly opcode. It uses the file <ulink url="examples/chebyshevpoly.csd"><citetitle>chebyshevpoly.csd</citetitle></ulink>.
      <example>
        <title>Example of the chebyshevpoly opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/chebyshevpoly.csd.xml"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>Credits</title>
    <para>
      <simplelist>
        <member>Author: Anthony Kozar</member>
        <member>January 2008</member>
      </simplelist>
    </para>

    <para>New in Csound version 5.08</para>
  </refsect1>
</refentry>
