<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="readk">
<indexterm id="IndexReadk"><primary>readk</primary></indexterm>
  <refentryinfo><title>Signal I/O:File I/O</title></refentryinfo>
  <refmeta>
    <refentrytitle>readk</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>readk</refname>
    <refpurpose>
      Periodically reads an orchestra control-signal value from an external file.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      Periodically reads an orchestra control-signal value from a named external file in a specific format.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <synopsis>kres <command>readk</command> ifilname, iformat, iprd</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>ifilname</emphasis> -- an integer N denoting a file named "readk.N" or a character string (in double quotes, spaces permitted) denoting the external file name. For a string, it may either be a full path name with directory specified or a simple filename.  In the later case, the file is sought first in the current directory, then in SSDIR, and finally in SFDIR.
    </para>

    <para>
      <emphasis>iformat</emphasis> -- specifies the input data format:
      <itemizedlist>
        <listitem>
          <para>1 = 8-bit signed integers (char)</para>
        </listitem>

        <listitem>
          <para>4 = 16-bit short integers</para>
        </listitem>

        <listitem>
          <para>5 = 32-bit long integers</para>
        </listitem>

        <listitem>
          <para>6 = 32-bit floats</para>
        </listitem>

        <listitem>
          <para>7 = ASCII long integers (plain text)</para>
        </listitem>

        <listitem>
          <para>8 = ASCII floats (plain text)</para>
        </listitem>
      </itemizedlist>
    </para>

    <para>
      Note that A-law and U-law formats are not available, and that all formats except the last two are binary. The input file should be a "raw", headerless data file.
    </para>

    <para>
      <emphasis>iprd</emphasis> -- the rate (period) in seconds, rounded to the nearest orchestra control period, at which the signal is read from the input file.  A value of 0 implies one control period (the enforced minimum), which will read new values at the orchestra control rate.  Longer periods will cause the same values to repeat for more than one control period.
      <!--unless interpolation is used.-->
    </para>

<!--    <para>
      <emphasis>interp</emphasis> - (optional) interpolate between values.
    </para>-->
<!--
    <para>
      <emphasis>ipol</emphasis> - if non-zero, and <emphasis>iprd</emphasis> implies more than one control period, interpolate the k- signals between the periodic reads from the external file. If the value is 0, repeat each signal between frames. Currently not supported.
    </para>-->
  </refsect1>

  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>kres</emphasis> -- output of the signal read from <emphasis>ifilname</emphasis>.
    </para>

    <para>
      This opcode allows a generated control signal value to be read from a named external file. The file should contain no header information but it should contain a regularly sampled time series of control values. For ASCII text formats, the values are assumed to be separated by at least one whitespace character. There may be any number of <emphasis>readk</emphasis> opcodes in an instrument or orchestra and they may read from the same or different files.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the readk opcode. It uses the file <ulink url="examples/readk.csd"><citetitle>readk.csd</citetitle></ulink>.
      <example>
        <title>Example of the readk opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/readk.csd.xml"/>
      </example>
    </para>
    <para>
      Here is another example of the readk opcode. It uses the file <ulink url="examples/readk-2.csd"><citetitle>readk-2.csd</citetitle></ulink>.
      <example>
        <title>Example 2 of the readk opcode.</title>
        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/readk-2.csd.xml"/>
      </example>
      Its output should include lines like this:
      <screen>
WARNING: Seeding from current time 683384022

 i   1 time     1.00033:   463.64510
 i   1 time     2.00000:   463.64510
 i   1 time     3.00000:   483.14200
 i   1 time     4.00000:   567.55973
 i   1 time     5.00000:   576.37060
 i   1 time     6.00000:   460.66550

 i   2 time     6.00033:   463.64510
 i   2 time     7.00000:   463.64510
 i   2 time     8.00000:   483.14200
 i   2 time     9.00000:   567.55970
 i   2 time    10.00000:   576.37060
 i   2 time    11.00000:   460.66550</screen>
    </para>
  </refsect1>
<!--  <refsect1>
    <title>Examples</title>
    <para>
      <informalexample>
        <programlisting>
knum    <emphasis>=</emphasis>         knum+1                                               ; at each k-period
ktemp   <emphasis>tempest</emphasis>   krms, .02, .1, 3, 2, 800, .005, 0, 60, 4, .1, .995   ;estimate the tempo
koct    <emphasis>specptrk</emphasis>  wsig, 6, .9, 0                                       ;and the pitch
        <emphasis>dumpk3</emphasis>    knum, ktemp, cpsoct(koct), &quot;what happened when&quot;, 8 0 ;&amp; save them
        </programlisting>
      </informalexample>
    </para>
  </refsect1>-->

  <refsect1>
    <title>See Also</title>
    <para>
      <link linkend="dumpk"><citetitle>dumpk</citetitle></link>,
      <link linkend="dumpk2"><citetitle>dumpk2</citetitle></link>,
      <link linkend="dumpk3"><citetitle>dumpk3</citetitle></link>,
      <link linkend="dumpk4"><citetitle>dumpk4</citetitle></link>,
      <link linkend="readk2"><citetitle>readk2</citetitle></link>,
      <link linkend="readk3"><citetitle>readk3</citetitle></link>,
      <link linkend="readk4"><citetitle>readk4</citetitle></link>
    </para>
  </refsect1>
  <refsect1>
    <title>Credits</title>
    <para>By: John ffitch and Barry Vercoe</para>
    <para>1999 or earlier</para>
  </refsect1>
</refentry>
