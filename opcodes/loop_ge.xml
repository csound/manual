
<refentry id="loop_ge">
<indexterm id="Indexloop_ge"><primary>loop_ge</primary></indexterm>
  <refentryinfo><title>Instrument Control:Program Flow Control</title></refentryinfo>
  <refmeta>
    <refentrytitle>loop_ge</refentrytitle>
  </refmeta>
  

  <refnamediv>
    <refname>loop_ge</refname>
    <refpurpose>
      Looping constructions.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      Construction of looping operations.
   </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <synopsis><command>loop_ge</command>  indx, idecr, imin, label</synopsis>
    <synopsis><command>loop_ge</command>  kndx, kdecr, kmin, label</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>indx</emphasis> -- i-rate variable to count loop.
    </para>

    <para>
      <emphasis>idecr</emphasis> -- value to decrement the loop.
    </para>

    <para>
      <emphasis>imin</emphasis> -- minimum value of loop index.
    </para>

  </refsect1>

  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>kndx</emphasis> -- k-rate variable to count loop.
    </para>
    <para>
      <emphasis>kdecr</emphasis> -- value to decrement the loop.
    </para>
    <para>
      <emphasis>kmin</emphasis> -- minimum value of loop index.
    </para>
    <para>
      The actions of <command>loop_ge</command> are equivalent to the
      code
       <programlisting>
         indx  <emphasis role="op">=</emphasis>  indx <emphasis role="op">-</emphasis> idecr
         <emphasis role="opc">if</emphasis> (indx <emphasis role="op">&gt;=</emphasis> imin) <emphasis role="opc">igoto</emphasis> label</programlisting>
 <!-- except that the values of the <emphasis>idecr</emphasis> and
      <emphasis>imin</emphasis> parameters cannot change in the loop; --> or
       <programlisting>
         kndx  <emphasis role="op">=</emphasis>  kndx <emphasis role="op">-</emphasis> kdecr
         <emphasis role="opc">if</emphasis> (kndx <emphasis role="op">&gt;=</emphasis> kmin) <emphasis role="opc">kgoto</emphasis> label</programlisting>
    </para>
	      <para> <note>  Adviced is to use the 'modern' while or until opcodes for looping constructions.</note>
    </para>
  </refsect1>
	
	 <refsect1>
    <title>Examples</title>
    <para>
      Here is a group example for all loop_xx opcodes, comparing the different loop_ opcodes. It uses the file <ulink url="examples/loop_-group.csd"><citetitle>loop_-group.csd</citetitle></ulink>.
      <example>
        <title>Group example of the loop_xx opcodes.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include href="examples-xml/loop_-group.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
    </para>
  </refsect1>
	
      <refsect1>
        <title>See also</title>
        <para><link linkend="ControlPgmctl"><citetitle>Program Flow Control: Looping Constructions</citetitle></link></para>
	    <para> More information on this opcode: <ulink url="http://www.csoundjournal.com/2006summer/controlFlow_part2.html"><citetitle>http://www.csoundjournal.com/2006summer/controlFlow_part2.html</citetitle></ulink> written by Steven Yi,
 and in the Floss Manuals: <ulink url="https://flossmanual.csound.com/csound-language/control-structures"><citetitle> https://flossmanual.csound.com/csound-language/control-structures</citetitle></ulink></para>
  </refsect1>

  <refsect1>
    <title>Credits</title>
    <para>&nameistvan;. 2006</para>
    <para>New in Csound version 5.01</para>
  </refsect1>
</refentry>
