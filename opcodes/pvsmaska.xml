<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="pvsmaska">
<indexterm id="IndexPvsmaska"><primary>pvsmaska</primary></indexterm>
  <refentryinfo><title>Spectral Processing:Streaming</title></refentryinfo>
  <refmeta>
    <refentrytitle>pvsmaska</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>pvsmaska</refname>
    <refpurpose>
      Modify amplitudes using a function table, with dynamic scaling.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      Modify amplitudes of fsrc using  function table, with dynamic scaling.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <synopsis>fsig <command>pvsmaska</command> fsrc, ifn, kdepth</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>ifn</emphasis> -- The f-table to use. Given fsrc has N analysis bins, table ifn must be of size N or larger. The table need not be normalized, but values should lie within the range 0 to 1. It can be supplied from the score in the usual way, or from within the orchestra by using <link linkend="pvsinfo"><citetitle>pvsinfo</citetitle></link> to find the size of fsrc, (returned by pvsinfo in inbins), which can then be passed to ftgen to create the f-table.
    </para>
  </refsect1>

  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>kdepth</emphasis> -- Controls the degree of modification applied to fsrc, using simple linear scaling. 0 leaves amplitudes unchanged, 1 applies the full profile of ifn.
    </para>

    <para>
      Note that power-of-two FFT sizes are particularly convenient when using table-based processing, as the number of analysis bins (inbins) is then a power-of-two plus one, for which an exactly matching f-table can be created. In this case it is important that the f-table be created with a size of inbins, rather than as a power of two, as the latter will copy the first table value to the guard point, which is inappropriate for this opcode.
    </para>
    <warning>
      <para>
        It is unsafe to use the same f-variable for both input and output of pvs opcodes. Using the same one might lead to undefined behavior on some opcodes. Use a different one on the left and right sides of the opcode.
      </para>
    </warning>

  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the use of the <emphasis>pvsmaska</emphasis> opcode. It uses the file <ulink url="examples/pvsmaska.csd"><citetitle>pvsmaska.csd</citetitle></ulink>.
      <example>
        <title>Example of the <emphasis>pvsmaska</emphasis> opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/pvsmaska.csd.xml"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para>
      <link linkend="pvsanal"><citetitle>pvsanal</citetitle></link>,
      <link linkend="pvsynth"><citetitle>pvsynth</citetitle></link>,
      <link linkend="pvsadsyn"><citetitle>pvsadsyn</citetitle></link>
    </para>
  </refsect1>

  <refsect1>
    <title>Credits</title>
    <para>
      <simplelist>
        <member>Author: Richard Dobson</member>
        <member>August 2001 </member>
      </simplelist>
    </para>

    <para>New in version 4.13</para>
  </refsect1>
</refentry>
