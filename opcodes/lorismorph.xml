<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="lorismorph">
  <indexterm id="IndexLorisMorph"><primary>lorismorph</primary></indexterm>
  <refentryinfo><title>Spectral Processing:Loris</title></refentryinfo>
  <refmeta>
    <refentrytitle>lorismorph</refentrytitle>
  </refmeta>


  <refnamediv>
    <refname>lorismorph</refname>
    <refpurpose>Morphs two stored sets of bandwidth-enhanced partials
    and stores a new set of partials representing the morphed
    sound. The morph is performed by linearly interpolating the
    parameter envelopes (frequency, amplitude, and bandwidth, or
    noisiness) of the bandwidth-enhanced partials according to
    control-rate frequency, amplitude, and bandwidth morphing
    functions.    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Syntax</title>
    <synopsis><command>lorismorph</command> isrcidx, itgtidx, istoreidx, kfreqmorphenv, kampmorphenv, kbwmorphenv</synopsis>
  </refsect1>

  <refsect1>
    <title>Description</title> 
    <para><emphasis>lorismorph</emphasis> morphs two stored sets of bandwidth-enhanced
    partials and stores a new set of partials representing the morphed
    sound. The morph is performed by linearly interpolating the
    parameter envelopes (frequency, amplitude, and bandwidth, or
    noisiness) of the bandwidth-enhanced partials according to
    control-rate frequency, amplitude, and bandwidth morphing
    functions.
    </para>  
    </refsect1>

  <refsect1>
    <title>Initialization</title>

    <para><emphasis>istoreidx, ireadidx, isrcidx, itgtidx</emphasis> are
    labels that identify a stored set of bandwidth-enhanced
    partials. <emphasis>lorisread</emphasis> imports partials from a SDIF file and stores them
    with the integer label istoreidx. <emphasis>lorismorph</emphasis> morphs sets of partials
    labeled <emphasis>isrcidx</emphasis> and <emphasis>itgtidx</emphasis>, and stores the resulting partials with
    the integer label <emphasis>istoreidx</emphasis>. <emphasis>lorisplay</emphasis> renders the partials stored
    with the label <emphasis>ireadidx</emphasis>. The labels are used only at initialization
    time, and may be reused without any cost or benefit in efficiency, and
    without introducing any interaction between instruments or
    instances.</para>

  </refsect1>

  <refsect1>
    <title>Performance</title>
    <para><emphasis>lorismorph</emphasis> generates a set of bandwidth-enhanced partials by
    morphing two stored sets of partials, the source and target partials,
    which may have been imported using <emphasis>lorisread</emphasis>, or generated by another
    unit generator, including another instance of <emphasis>lorismorph</emphasis>. The morph is
    performed by interpolating the parameters of corresponding (labeled)
    partials in the two source sounds. The sound morph is
    described by three control-rate morphing envelopes. <emphasis>kfreqmorphenv</emphasis>
    describes the interpolation of partial frequency values in the two
    source sounds. When <emphasis>kfreqmorphenv</emphasis> is 0, partial frequencies are
    obtained from the partials stored at <emphasis>isrcidx</emphasis>. When <emphasis>kfreqmorphenv</emphasis> is 1,
    partial frequencies are obtained from the partials at <emphasis>itgtidx</emphasis>. When
    <emphasis>kfreqmorphenv</emphasis> is between 0 and 1, the partial frequencies are
    interpolated between corresponding source and target
    partials. Interpolation of partial amplitudes and bandwidth
    (noisiness) coefficients are similarly described by <emphasis>kampmorphenv</emphasis> and
    <emphasis>kbwmorphenv</emphasis>.</para>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the lorismorph opcode. It uses the file <ulink url="examples/lorismorph.csd"><citetitle>lorismorph.csd</citetitle></ulink>.
      <example>
        <title>Example of the lorismorph opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/lorismorph.csd.xml"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>Credits</title>
    <para>This implementation of the Loris unit generators was written by Kelly
    Fitz (<ulink url="mailto:loris@cerlsoundgroup.org">loris@cerlsoundgroup.org</ulink>). It is patterned after a prototype implementation of the
    <emphasis>lorisplay</emphasis> unit generator written by Corbin Champion, and based on the
    method of Bandwidth-Enhanced Additive Synthesis and on the sound
    morphing algorithms implemented in the Loris library for sound
    modeling and manipulation. The opcodes were further adapted as a
    plugin for Csound 5 by Michael gogins.</para>
  </refsect1>

</refentry>
