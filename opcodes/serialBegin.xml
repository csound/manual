<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="serialBegin">
<indexterm id="IndexSerialBegin"><primary>serialBegin</primary></indexterm>

  <refentryinfo><title>Serial I/O</title></refentryinfo>
  <refmeta>
    <refentrytitle>serialBegin</refentrytitle>
  </refmeta>

   <refnamediv>
    <refname>serialBegin</refname>
    <refpurpose>
      Open a serial port.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
      Open a serial port for arduino.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
      <synopsis>iPort <command>serialBegin</command> SPortName [, ibaudRate]</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>SPortName</emphasis> -- port name number
    </para>
     <para>
      <emphasis>ibaudrate</emphasis> -- serial speed, defaulting to
      9600 bps.
    </para>
 </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the serialBegin opcode. It uses the file <ulink url="examples/serialBegin.csd"><citetitle>serialBegin.csd</citetitle></ulink>.
      <example>
        <title>Example of the serialBegin opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/serialBegin.csd.xml"/>
      </example>
        This is the matching Arduino code :
      <screen>
void setup() {
  // enable serial communication
  Serial.begin(9600);

  // declare pin 9 to be an output:
  pinMode(9, OUTPUT);
}

void loop() {
  // only do something if we received something (this should be at csound's k-rate)
  if (Serial.available()) {
    // set the brightness of LED (connected to pin 9) to our input value
    int brightness = Serial.read();
    analogWrite(9, brightness);

    // while we are here, get our knob value and send it to csound
    int sensorValue = analogRead(A0);
    Serial.write(sensorValue/4); // scale to 1-byte range (0-255)
  }     
}
.....</screen>
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para>
      <link linkend="serialEnd"><citetitle/>serialEnd</link>,
      <link linkend="serialWrite_i"><citetitle/>serialWrite_i</link>,
      <link linkend="serialWrite"><citetitle/>serialWrite</link>,
      <link linkend="serialRead"><citetitle/>serialRead</link>,
      <link linkend="serialPrint"><citetitle/>serialPrint</link>,
      <link linkend="serialFlush"><citetitle/>serialFlush</link>.
    </para>
  </refsect1>

  <refsect1>
    <title>Credits</title>
    <para>
      <simplelist>
        <member>Author: Matt Ingalls</member>
        <member>2011</member>
      </simplelist>
    </para>
    <para>New in version 5.14</para>
  </refsect1>
</refentry>
