<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="opbitshl">
<indexterm id="IndexShiftL"><primary>Â¬</primary></indexterm>
  <refentryinfo><title>Mathematical Operations:Arithmetic and Logic Operations</title></refentryinfo>
  <refmeta>
    <refentrytitle>&lt;&lt;</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>&lt;&lt;</refname>

    <refpurpose>
      Bitshift left operator.
    </refpurpose>
  </refnamediv>
 
  <refsect1>
    <title>Description</title>
    <para>
      The bitshift operators shift the bits to the left or to the right the number of bits given.
    </para>

    <para>
    The priority of these operators is less binding that the
    arithmetic ones, but more binding that the comparisons. 
    </para>

    <para>
      Parentheses may be used as above to force particular groupings.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <synopsis>a <command>&lt;&lt;</command> b  (bitshift left)</synopsis>

    <para>
      where the arguments <emphasis>a</emphasis> and <emphasis>b</emphasis> may be further
    expressions.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the bitshift left operator. It uses the file <ulink url="examples/bitshift.csd"><citetitle>bitshift.csd</citetitle></ulink>.
      <example>
        <title>Example of the bitshift left operator.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/bitshift.csd.xml"/>
      </example>
    </para>
    <para>The example above will produce the following output:
      <literallayout>2&gt;&gt;1 = 1
B  0.000 ..  0.100 T  0.100 TT  0.100 M:      0.0      0.0
3&gt;&gt;1 = 1
B  0.100 ..  0.200 T  0.200 TT  0.200 M:      0.0      0.0
7&gt;&gt;2 = 1
B  0.200 ..  0.300 T  0.300 TT  0.300 M:      0.0      0.0
16&gt;&gt;1 = 8
B  0.300 ..  0.400 T  0.400 TT  0.400 M:      0.0      0.0
16&gt;&gt;2 = 4
B  0.400 ..  0.500 T  0.500 TT  0.500 M:      0.0      0.0
16&gt;&gt;3 = 2
B  0.500 ..  5.000 T  5.000 TT  5.000 M:      0.0      0.0
new alloc for instr 2:
1&lt;&lt;1 = 2
B  5.000 ..  5.100 T  5.100 TT  5.100 M:      0.0      0.0
1&lt;&lt;2 = 4
B  5.100 ..  5.200 T  5.200 TT  5.200 M:      0.0      0.0
1&lt;&lt;3 = 8
B  5.200 ..  5.300 T  5.300 TT  5.300 M:      0.0      0.0
1&lt;&lt;4 = 16
B  5.300 ..  5.400 T  5.400 TT  5.400 M:      0.0      0.0
2&lt;&lt;1 = 4
B  5.400 ..  5.500 T  5.500 TT  5.500 M:      0.0      0.0
2&lt;&lt;2 = 8
B  5.500 ..  5.600 T  5.600 TT  5.600 M:      0.0      0.0
2&lt;&lt;3 = 16
B  5.600 ..  5.700 T  5.700 TT  5.700 M:      0.0      0.0
3&lt;&lt;2 = 12</literallayout>
    </para>
  </refsect1>
  <refsect1>
    <title>See Also</title>
    <para>
      <link linkend="opbitshr"><citetitle>&gt;&gt;</citetitle></link>,
      <link linkend="opbitand"><citetitle>&amp;</citetitle></link>,
      <link linkend="opbitor"><citetitle>|</citetitle></link>
      <link linkend="opnonequiv"><citetitle>#</citetitle></link>
    </para>
  </refsect1>
</refentry>
