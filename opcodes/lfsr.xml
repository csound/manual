
<!--Change refentry id and indexterm id-->
<refentry id="lfsr">
<indexterm id="IndexLfsr"><primary>lfsr</primary></indexterm>
<!--Make sure the category below is a valid one! See categories.py-->
  <refentryinfo><title>Signal Generators:Random (Noise) Generators</title></refentryinfo>
  <refmeta>
    <refentrytitle>lfsr</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>lfsr</refname>
    <refpurpose>
      Linear Feedback Shirt Register (LFSR).
    </refpurpose>
  </refnamediv>
 
  <refsect1>
    <title>Description</title>
    <para>
        Output is a series of pseudo-random positive integers. This is the technique
        used in so-called "Turing machine" synth modules and is usually used to
        generate melodic sequences. This implementation is adapted from the firmware
        for the Ornament &amp; Crime module, as used in the Quantermain and Meta-Q apps.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <synopsis>knum <command>lfsr</command> ilen, iprob [, iseed]</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>ilen</emphasis> -- length of shift register, valid values are 1-31 (inclusive). The
        larger the length, the larger the resulting integers in the output. You
        can use this to constrain the output to a suitable range.
    </para>
    <para>
      <emphasis>iprob</emphasis> -- probability, valid values 1-255 (inclusive). Controls the spread
        of the output; larger values result in a wider spread of values.
    </para>
    <para>
      <emphasis>iseed (optional, default -1)</emphasis> -- initial state of the shift register, as a
        pattern of bits. The value is treated as an unsigned integer, so the default
        of -1 is effectivly all bits on (0b11111111...).
    </para>
  </refsect1>
 
  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>knum</emphasis> -- integer output
    </para>

    <para>
      Then describe performace in detail.
    </para>

    <para>Use for internal manual links: <link linkend="delayr"><citetitle>delayr</citetitle></link> and this for external hyperlinks: <ulink url="examples/lfsr.csd"><citetitle>lfsr.csd</citetitle></ulink> or for the internet: <ulink url="http://www.csounds.com"><citetitle>Csounds.com page</citetitle></ulink>.
    </para>

    <para>
      You can also emphasize <emphasis>words</emphasis>.
    </para>

    <note>
      <title>Title of the note (optional)</title>
      <para>
        An important note. You can also use "tip" or "warning" instead of note.
      </para>
    </note>

    <para>
      You can also do lists.
      <itemizedlist>
        <listitem><para>First item</para></listitem>
        <listitem><para>Second item</para></listitem>
      </itemizedlist>
    </para>

    <para>
      You can also do numbered lists.
      <orderedlist>
        <listitem><para>First item</para></listitem>
        <listitem><para>Second item</para></listitem>
      </orderedlist>
    </para>

    <para>
      Put inline program lines like this:
      <programlisting>aout oscil 10000, 440, 1</programlisting>
      And Csound output like this:
      <literallayout>Output text</literallayout>
    </para>

    <para>
      You can put images like this:
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/grain3_2.png" format="PNG"/>
        </imageobject>

        <textobject>
          <phrase>[A diagram showing grains with a start time less than zero in red.]</phrase>
        </textobject>

        <caption>
          <para>A diagram showing grains with a start time less than zero in red.</para>
        </caption>
      </mediaobject>
    </para>
    
  </refsect1>

 
  <refsect1>
<!--To add examples, create the csd file in the examples directory, then run:-->
<!--python csd2docbook.py -f lfsr.csd-->
<!--to generate the xml highlighted version used below-->
    <title>Examples</title>
    <para>
      Here is an example of the delay opcode. It uses the file <ulink url="examples/lfsr.csd"><citetitle>lfsr.csd</citetitle></ulink>.
      <example>
        <title>Example of the lfsr opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include href="examples-xml/lfsr.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
<!--    it's always good to include a good See Also list  -->
    <para>
      <link linkend="deltap"><citetitle>deltap</citetitle></link>
    </para>
  </refsect1>

  <refsect1>
<!--  And put your name and other relevant information here-->
    <title>Credits</title>
    <para>By: &namejohn; 2010</para>
    <para>Additional information</para>
    <para>New in version 6.??</para>
  </refsect1>

<!--Now remember to add a link from the appropriate category in the Opcode Overview.-->
<!--Add the entity to manual.xml-->
<!--Add the entity reference in the appropriate place in opcodes/top.xml-->
<!--And you're set! Maybe delete the comments as well...-->

</refentry>
