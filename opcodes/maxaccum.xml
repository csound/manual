
<refentry id="maxaccum">
<indexterm id="IndexMaxaccum"><primary>maxaccum</primary></indexterm>
  <refentryinfo><title>Signal Modifiers:Comparators and Accumulators</title></refentryinfo>
  <refmeta>
    <refentrytitle>maxaccum</refentrytitle>
  </refmeta>


 
  <refnamediv>
    <refname>maxaccum</refname>
    <refpurpose>
      Accumulates the maximum value of audio signals.
          </refpurpose>
  </refnamediv>
 
  <refsect1>
    <title>Description</title>
    <para>
      <emphasis>maxaccum</emphasis> compares two audio-rate variables and stores the maximum value between them into the first.  
    </para>
  </refsect1>
 
  <refsect1>
    <title>Syntax</title>
    <synopsis><command>maxaccum</command> aAccumulator, aInput</synopsis>
  </refsect1>
 
  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>aAccumulator</emphasis> -- audio variable to store the maximum value
    </para>

    <para>
      <emphasis>aInput</emphasis> -- signal that aAccumulator is compared to
    </para>

    <para>
      The <emphasis>maxaccum</emphasis> opcode is designed to accumulate the maximum value from among many audio signals that may be in different note instances, different channels, or otherwise cannot all be compared at once using the <emphasis>max</emphasis> opcode.  Its semantics are similar to <emphasis>vincr</emphasis> since <emphasis>aAccumulator</emphasis> is used as both an input and an output variable, except that <emphasis>maxaccum</emphasis> keeps the maximum value instead of adding the signals together.  <emphasis>maxaccum</emphasis> performs the following operation on each pair of samples:
    </para>

    <para>
      <literallayout>
            if  (aInput > aAccumulator)  aAccumulator = aInput
      </literallayout>
    </para>

    <para>
      <emphasis>aAccumulator</emphasis> will usually be a global audio variable.  At the end of any given computation cycle (k-period), after its value is read and used in some way, the accumulator variable should usually be reset to zero  (perhaps by using the <emphasis>clear</emphasis> opcode).  Care must be taken however if aInput is negative at any point, in which case the accumulator should be initialized and reset to some large enough negative value that will always be less than the input signals to which it is compared.
    </para>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the maxaccum opcode. It uses the file <ulink url="examples/maxaccum.csd"><citetitle>maxaccum.csd</citetitle></ulink>.
      <example>
        <title>Example of the maxabs opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include href="examples-xml/maxaccum.csd.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
      </example>
    </para>
  </refsect1>
  
      <refsect1>
        <title>See also</title>
        <para><link linkend="SigmodCompaccum"><citetitle>Comparators and Accumulators</citetitle></link></para>
    </refsect1>

  <refsect1>
    <title>Credits</title>
    <para>
      <simplelist>
        <member>Author: &nameanthony;</member>
        <member>March 2006</member>
      </simplelist>
    </para>

    <para>New in Csound version 5.01</para>
  </refsect1>
</refentry>
