<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="nstance">
<indexterm id="IndexNstance"><primary>nstance</primary></indexterm>
  <refentryinfo><title>Instrument Control:Invocation</title></refentryinfo>
  <refmeta>
    <refentrytitle>nstance</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname>nstance</refname>
    <refpurpose>
      Schedules a new instrument instance, storing the instance handle in a variable.
    </refpurpose>
  </refnamediv>

  <refsect1>
    <title>Description</title>
    <para>
       Schedules a new instrument nstance, returning a handle that can be used later to
refer directly to the running nstance. This opcode is similar to schedule, but has the added
facility of retrieving the nstance handle.
    </para>
  </refsect1>

  <refsect1>
    <title>Syntax</title>
    <synopsis>iHandle <command>nstance</command> insnum, iwhen, idur [, ip4] [, ip5] [...]</synopsis>
    <synopsis>iHandle <command>nstance</command> "insname", iwhen, idur [, ip4] [, ip5] [...]</synopsis>
  </refsect1>

  <refsect1>
    <title>Initialization</title>
    <para>
      <emphasis>iHandle</emphasis> -- this variable will contain a handle to the event instance. It can be used, for example, to
stop the given instrument instance via the turnoff opcode. Note that the instance handle is only valid once the instrument is initialised.
    </para>
    <para>
      <emphasis>insnum</emphasis> -- instrument number. Equivalent to p1 in a score <link linkend="i"><citetitle>i statement</citetitle></link>. <emphasis>insnum</emphasis> must be a number greater than the number of the calling instrument.
    </para>

    <para>
      <emphasis><quote>insname</quote></emphasis> -- A string (in double-quotes) representing a named instrument.
    </para>

    <para>
      <emphasis>iwhen</emphasis> -- start time of the new event. Equivalent to p2 in a score <link linkend="i"><citetitle>i statement</citetitle></link>. <emphasis>iwhen</emphasis> must be nonnegative. If <emphasis>iwhen</emphasis> is zero, <emphasis>insum</emphasis> must be greater than or equal to the p1 of the current instrument.
    </para>

    <para>
      <emphasis>idur</emphasis> -- duration of event. Equivalent to p3 in a score <link linkend="i"><citetitle>i statement</citetitle></link>.
    </para>

    <para>
      <emphasis>ip4, ip5, ...</emphasis> -- Equivalent to p4, p5, etc., in a score <link linkend="i"><citetitle>i statement</citetitle></link>.
    </para>
  </refsect1>

  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>nstance</emphasis> adds a new score event. The arguments, including options, are the same as in a score. The <emphasis>iwhen</emphasis> time (p2) is measured from the time of this event. 
    </para>

    <para>
      If the duration is zero or negative the new event is of MIDI type, and inherits the release sub-event from the scheduling instruction.
    </para>
    <note>
      <para> Note that the <emphasis>nstance</emphasis> opcode can't accept string p-fields. If you need to pass strings when instantiating an instrument, use the <link linkend="scoreline"><citetitle>scoreline</citetitle></link> or <link linkend="scoreline_i"><citetitle>scoreline_i</citetitle></link> opcode.</para>
    </note>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
      Here is an example of the nstance opcode. It uses the file <ulink url="examples/nstance.csd"><citetitle>nstance.csd</citetitle></ulink>.
      <example>
        <title>Example of the nstance opcode.</title>
        <para>See the sections <link linkend="UsingRealTime"><citetitle>Real-time Audio</citetitle></link> and <link linkend="CommandFlags"><citetitle>Command Line Flags</citetitle></link> for more information on using command line flags.</para>
          <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/nstance.csd.xml"/>
      </example>
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>
    <para>
      <link linkend="schedwhen"><citetitle>schedwhen</citetitle></link>
    </para>
  </refsect1>

  <refsect1>
    <title>See also</title>
    <para><link linkend="event"><citetitle>event</citetitle></link>,
    <link linkend="event_i"><citetitle>event_i</citetitle></link>,
    <link linkend="schedwhen"><citetitle>schedwhen</citetitle></link>,
    <link linkend="schedkwhen"><citetitle>schedkwhen</citetitle></link>,
    <link linkend="schedkwhennamed"><citetitle>schedkwhennamed</citetitle></link>,
    <link linkend="scoreline"><citetitle>scoreline</citetitle></link>,
    <link linkend="scoreline_i"><citetitle>scoreline_i</citetitle></link></para>
    <para> More information on this opcode: <ulink url="http://www.csoundjournal.com/issue15/phrase_loops.html"><citetitle>http://www.csoundjournal.com/issue15/phrase_loops.html</citetitle></ulink>  , written by Jim Aikin </para>
  </refsect1>

  <refsect1>
    <title>Credits</title>
    <para>
      <simplelist>
        <member>Author: Victor Lazzarini</member>
        <member>November 2013</member>
      </simplelist>
    </para>
  </refsect1>
</refentry>
