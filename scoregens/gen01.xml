<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" id="GEN01">
      <indexterm id="IndexGEN01"><primary>GEN01</primary></indexterm>
  <refmeta>
    <refentrytitle>GEN01</refentrytitle>
  </refmeta>
 
  <refnamediv>
    <refname>GEN01</refname>
    <refpurpose>
      Transfers data from a soundfile into a function table.
    </refpurpose>
  </refnamediv>
 
  <refsect1>
    <title>Description</title>
    <para>
      This subroutine transfers data from a soundfile into a function table.
    </para>
  </refsect1>
 
  <refsect1>
    <title>Syntax</title>
    <synopsis><command>f</command>#  time  size  1  filcod  skiptime  format  channel</synopsis>
  </refsect1>
 
  <refsect1>
    <title>Performance</title>
    <para>
      <emphasis>size</emphasis> -- number of points in the table. Ordinarily a power of 2 or a power-of-2 plus 1 (see <link linkend="f"><citetitle>f statement</citetitle></link>); the maximum tablesize is 16777216 (2<superscript>24</superscript>) points. The allocation of table memory can be <emphasis>deferred</emphasis> by setting this parameter to 0; the size allocated is then the number of points in the file (probably not a power-of-2), and the table is not usable by normal oscillators, but it is usable by a <link linkend="loscil"><citetitle>loscil</citetitle></link> unit. The soundfile can also be mono or stereo.
    </para>

    <para>
      <emphasis>filcod</emphasis> -- integer or character-string denoting the source soundfile name. An integer denotes the file <emphasis>soundin</emphasis>.<emphasis>filcod</emphasis> ; a character-string (in double quotes, spaces permitted) gives the filename itself, optionally a full pathname. If not a full path, the file is sought first in the current directory, then in that given by the environment variable <link linkend="CommandEnvironment"><citetitle>SSDIR</citetitle></link> (if defined) then by <link linkend="CommandEnvironment"><citetitle>SFDIR</citetitle></link>. See also <link linkend="soundin"><citetitle>soundin</citetitle></link>.
    </para>

    <para>
      <emphasis>skiptime</emphasis> -- begin reading at <emphasis>skiptime</emphasis> seconds into the file.
    </para>

    <para>
      <emphasis>channel</emphasis> -- channel number to read in. 0 denotes read all channels.
    </para>

    <para>
      <emphasis>format</emphasis> -- specifies the audio data-file format:
        <literallayout>
1 - 8-bit signed character    4 - 16-bit short integers 
2 - 8-bit A-law bytes         5 - 32-bit long integers 
3 - 8-bit U-law bytes         6 - 32-bit floats
        </literallayout>
    </para>

    <para>
      If <emphasis>format</emphasis> = 0 the sample format is taken from the soundfile header, or by default from the CSound <link linkend="FlagsMinusLowerO"><citetitle>-o</citetitle></link> command-line flag.
    </para>

    <note>
      <title>Note</title>
      <para>
        <itemizedlist>
          <listitem>
            <para>
              Reading stops at end-of-file or when the table is full. Table locations not filled will contain zeros.
            </para>
          </listitem>

          <listitem>
            <para>
              If p4 is positive, the table will be post-normalized (rescaled to a maximum absolute value of 1 after generation). A negative p4 will cause rescaling to be skipped.
            </para>
          </listitem>

          <listitem>
            <para>
              GEN01 also works with WAV and OGG and a dozen and more other sound formats; these file formats depend on libsndfile, see <ulink url="http://www.mega-nerd.com/libsndfile/"><citetitle>http://www.mega-nerd.com/libsndfile/</citetitle></ulink>
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </note>
  </refsect1>

  <refsect1>
    <title>Examples</title>
    <para>
	    Here is an example of the GEN01 routine. It uses the files <ulink url="examples/gen01.csd"><citetitle>gen01.csd</citetitle></ulink> and several sound files.
      <example>
        <title>An example of the GEN01 routine.</title>
        <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples-xml/gen01.csd.xml"/>
      </example>

        <textobject>
          <phrase>These are the diagrams of the waveforms of the GEN01 routines, as used in the example:</phrase>
        </textobject>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/gen01_1.png" format="PNG"/>
        </imageobject>

        <textobject>
          <phrase>f 1 0 131072 1 "beats.wav" 0 0 0 - non-deferred sound</phrase>
        </textobject>

        <caption>
          <para>f 1 0 131072 1 "beats.wav" 0 0 0 - non-deferred sound</para>
        </caption>
      </mediaobject>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/gen01_2.png" format="PNG"/>
        </imageobject>

        <textobject>
          <phrase>f 2 0 0 1 "flute.aiff" 0 0 0 - deferred sound</phrase>
        </textobject>

        <caption>
          <para>f 2 0 0 1 "flute.aiff" 0 0 0 - deferred sound</para>
        </caption>
      </mediaobject>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/gen01_3.png" format="PNG"/>
        </imageobject>

        <textobject>
          <phrase>f 3 0 0 1 "beats.ogg" 0 0 0 - deferred sound</phrase>
        </textobject>

        <caption>
          <para>f 3 0 0 1 "beats.ogg" 0 0 0 - deferred sound</para>
        </caption>
      </mediaobject>

    </para>
  </refsect1>

  <refsect1>
    <title>Credits</title>
    <para>September 2003. Thanks goes to Dr. Richard Boulanger for pointing out the references to the AIFF file format.</para>
  </refsect1>
</refentry>
